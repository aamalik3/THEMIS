/*
 * gemm.c
 *
 *  Created on: Sep 8, 2022
 *      Author: aamalik3
 */

#include "gemm_profiling.h"
#include "PR_executer.h"
#include "latency_counter.h"

void gemm_operation()
{
	PR_execution("bfs.bin");
//	PCAP_init (PL_BITSTREAM_A);
	xil_printf("Back in BFS: ");
	set_counter((gemm_m1 ), ((gemm_product+0x1fffc)));
	uint32_t	i;

    /* put a test vector in starting nodes */
    for (i = 0; i < 16384;i++){
    	Xil_Out32 (gemm_m1 + i*4,0xDEADBEEF);
    }

    /* put a test vector in nodes */
    for (i = 0; i < 16384; i++){
    	Xil_Out32 (gemm_m2 + i*4, 0xDEADBEEF );
    }
    //xil_printf("Start signal is sent:\n");
    Xil_Out32 (gemm_CRTL, 0x00000001 );

    int cnt =0;
    while ( !((Xil_In32 (gemm_CRTL)) & 0x2) && cnt< 10000)
    	cnt++;

    uint32_t tmp;
    for (i = 0; i < 16384; i++){
    	tmp = Xil_In32 (gemm_product+i*4);
    	//xil_printf("0x%x\n",tmp[i]);
    }
    xil_printf("GEMM: ");
    read_counter();

}
