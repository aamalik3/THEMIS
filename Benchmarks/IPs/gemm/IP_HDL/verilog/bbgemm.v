// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="bbgemm_bbgemm,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.339000,HLS_SYN_LAT=557065,HLS_SYN_TPT=none,HLS_SYN_MEM=48,HLS_SYN_DSP=0,HLS_SYN_FF=2290,HLS_SYN_LUT=3032,HLS_VERSION=2020_2}" *)

module custom_IP (
        s_axi_clk,
        s_axi_rst_n,
        s_axi_BUS_A_AWVALID,
        s_axi_BUS_A_AWREADY,
        s_axi_BUS_A_AWADDR,
        s_axi_BUS_A_WVALID,
        s_axi_BUS_A_WREADY,
        s_axi_BUS_A_WDATA,
        s_axi_BUS_A_WSTRB,
        s_axi_BUS_A_ARVALID,
        s_axi_BUS_A_ARREADY,
        s_axi_BUS_A_ARADDR,
        s_axi_BUS_A_RVALID,
        s_axi_BUS_A_RREADY,
        s_axi_BUS_A_RDATA,
        s_axi_BUS_A_RRESP,
        s_axi_BUS_A_BVALID,
        s_axi_BUS_A_BREADY,
        s_axi_BUS_A_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_pp0_stage0 = 19'd2;
parameter    ap_ST_fsm_pp0_stage1 = 19'd4;
parameter    ap_ST_fsm_pp0_stage2 = 19'd8;
parameter    ap_ST_fsm_pp0_stage3 = 19'd16;
parameter    ap_ST_fsm_pp0_stage4 = 19'd32;
parameter    ap_ST_fsm_pp0_stage5 = 19'd64;
parameter    ap_ST_fsm_pp0_stage6 = 19'd128;
parameter    ap_ST_fsm_pp0_stage7 = 19'd256;
parameter    ap_ST_fsm_pp0_stage8 = 19'd512;
parameter    ap_ST_fsm_pp0_stage9 = 19'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 19'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 19'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 19'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 19'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 19'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 19'd65536;
parameter    ap_ST_fsm_pp0_stage16 = 19'd131072;
parameter    ap_ST_fsm_state27 = 19'd262144;
parameter    C_S_AXI_BUS_A_DATA_WIDTH = 32;
parameter    C_S_AXI_BUS_A_ADDR_WIDTH = 17;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_BUS_A_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_clk;
input   s_axi_rst_n;
input   s_axi_BUS_A_AWVALID;
output   s_axi_BUS_A_AWREADY;
input  [31:0] s_axi_BUS_A_AWADDR;
input   s_axi_BUS_A_WVALID;
output   s_axi_BUS_A_WREADY;
input  [C_S_AXI_BUS_A_DATA_WIDTH - 1:0] s_axi_BUS_A_WDATA;
input  [C_S_AXI_BUS_A_WSTRB_WIDTH - 1:0] s_axi_BUS_A_WSTRB;
input   s_axi_BUS_A_ARVALID;
output   s_axi_BUS_A_ARREADY;
input  [31:0] s_axi_BUS_A_ARADDR;
output   s_axi_BUS_A_RVALID;
input   s_axi_BUS_A_RREADY;
output  [C_S_AXI_BUS_A_DATA_WIDTH - 1:0] s_axi_BUS_A_RDATA;
output  [1:0] s_axi_BUS_A_RRESP;
output   s_axi_BUS_A_BVALID;
input   s_axi_BUS_A_BREADY;
output  [1:0] s_axi_BUS_A_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [11:0] m1_address0;
reg    m1_ce0;
wire   [63:0] m1_q0;
reg   [11:0] m2_address0;
reg    m2_ce0;
wire   [63:0] m2_q0;
reg   [11:0] prod_address0;
reg    prod_ce0;
reg    prod_we0;
reg   [63:0] prod_d0;
wire   [63:0] prod_q0;
reg   [15:0] indvar_flatten121_reg_269;
reg   [13:0] indvar_flatten63_reg_280;
reg   [10:0] indvar_flatten_reg_291;
reg   [6:0] jj_reg_302;
reg   [6:0] kk_reg_313;
reg   [6:0] i_reg_324;
reg   [3:0] k_reg_335;
reg   [63:0] reg_354;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state21_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] icmp_ln20_reg_985;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state22_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state23_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_state24_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_state25_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_state26_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state10_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state11_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
reg   [63:0] reg_358;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state14_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
reg   [63:0] reg_362;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state12_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state15_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
reg   [63:0] reg_366;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state13_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire   [63:0] grp_fu_350_p2;
reg   [63:0] reg_370;
reg   [63:0] reg_375;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state16_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
reg   [63:0] reg_380;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state17_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_11001;
wire   [63:0] grp_fu_346_p2;
reg   [63:0] reg_385;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_state18_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state19_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [15:0] add_ln20_fu_389_p2;
reg   [15:0] add_ln20_reg_980;
wire   [0:0] icmp_ln20_fu_395_p2;
reg   [0:0] icmp_ln20_reg_985_pp0_iter1_reg;
wire   [0:0] icmp_ln21_fu_401_p2;
reg   [0:0] icmp_ln21_reg_989;
wire   [0:0] xor_ln20_fu_407_p2;
reg   [0:0] xor_ln20_reg_1001;
wire   [0:0] icmp_ln22_fu_413_p2;
reg   [0:0] icmp_ln22_reg_1006;
wire   [0:0] and_ln20_1_fu_419_p2;
reg   [0:0] and_ln20_1_reg_1011;
wire   [10:0] add_ln22_1_fu_425_p2;
reg   [10:0] add_ln22_1_reg_1020;
wire   [13:0] add_ln21_1_fu_431_p2;
reg   [13:0] add_ln21_1_reg_1025;
wire   [6:0] select_ln20_1_fu_476_p3;
reg   [6:0] select_ln20_1_reg_1030;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state20_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire   [6:0] select_ln21_3_fu_568_p3;
reg   [6:0] select_ln21_3_reg_1035;
wire   [11:0] select_ln22_1_fu_617_p3;
reg   [11:0] select_ln22_1_reg_1040;
wire   [6:0] select_ln22_2_fu_636_p3;
reg   [6:0] select_ln22_2_reg_1051;
wire   [11:0] add_ln28_fu_695_p2;
reg   [11:0] add_ln28_reg_1061;
reg   [11:0] prod_addr_7_reg_1077;
wire   [3:0] add_ln23_fu_712_p2;
reg   [3:0] add_ln23_reg_1082;
wire   [10:0] select_ln22_3_fu_718_p3;
reg   [10:0] select_ln22_3_reg_1087;
reg   [63:0] m1_load_reg_1092;
reg   [11:0] prod_addr_6_reg_1102;
wire   [63:0] temp_x_fu_755_p1;
reg   [63:0] temp_x_reg_1107;
reg   [11:0] prod_addr_5_reg_1117;
wire   [63:0] bitcast_ln28_7_fu_769_p1;
wire   [63:0] bitcast_ln28_6_fu_778_p1;
wire   [63:0] bitcast_ln28_5_fu_793_p1;
wire   [63:0] bitcast_ln28_fu_798_p1;
wire   [63:0] bitcast_ln28_1_fu_813_p1;
reg   [11:0] prod_addr_reg_1167;
wire   [63:0] bitcast_ln28_2_fu_832_p1;
reg   [11:0] prod_addr_1_reg_1182;
wire   [63:0] bitcast_ln28_3_fu_857_p1;
wire   [63:0] bitcast_ln29_7_fu_862_p1;
reg   [11:0] prod_addr_2_reg_1197;
wire   [63:0] bitcast_ln28_4_fu_877_p1;
wire   [63:0] bitcast_ln29_6_fu_882_p1;
reg   [63:0] mul_reg_1212;
reg   [11:0] prod_addr_3_reg_1217;
wire   [63:0] bitcast_ln29_5_fu_897_p1;
wire   [63:0] bitcast_ln29_fu_912_p1;
reg   [63:0] mul_1_reg_1232;
reg   [11:0] prod_addr_4_reg_1237;
wire   [63:0] bitcast_ln29_8_fu_917_p1;
wire   [63:0] bitcast_ln29_2_fu_922_p1;
wire   [63:0] bitcast_ln29_3_fu_932_p1;
wire   [63:0] bitcast_ln29_4_fu_942_p1;
wire   [13:0] select_ln21_4_fu_952_p3;
reg   [13:0] select_ln21_4_reg_1262;
reg   [63:0] add_2_reg_1267;
reg   [63:0] add_3_reg_1272;
reg   [63:0] add_4_reg_1277;
wire    ap_block_pp0_stage1_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage7_subdone;
reg   [15:0] ap_phi_mux_indvar_flatten121_phi_fu_273_p4;
wire    ap_block_pp0_stage0;
reg   [13:0] ap_phi_mux_indvar_flatten63_phi_fu_284_p4;
reg   [10:0] ap_phi_mux_indvar_flatten_phi_fu_295_p4;
reg   [6:0] ap_phi_mux_jj_phi_fu_306_p4;
wire    ap_block_pp0_stage1;
reg   [6:0] ap_phi_mux_kk_phi_fu_317_p4;
reg   [6:0] ap_phi_mux_i_phi_fu_328_p4;
reg   [3:0] ap_phi_mux_k_phi_fu_339_p4;
wire   [63:0] zext_ln26_fu_690_p1;
wire   [63:0] zext_ln28_7_fu_707_p1;
wire   [63:0] zext_ln22_6_fu_631_p1;
wire   [63:0] zext_ln28_6_fu_740_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln22_5_fu_730_p1;
wire   [63:0] zext_ln28_5_fu_764_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln22_4_fu_750_p1;
wire   [63:0] zext_ln28_fu_774_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln28_1_fu_788_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln28_2_fu_808_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln28_3_fu_823_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln22_7_fu_828_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln28_4_fu_842_p1;
wire   [63:0] zext_ln22_fu_852_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln22_1_fu_872_p1;
wire    ap_block_pp0_stage10;
wire   [63:0] zext_ln22_2_fu_892_p1;
wire    ap_block_pp0_stage11;
wire   [63:0] zext_ln22_3_fu_907_p1;
wire    ap_block_pp0_stage12;
wire   [63:0] bitcast_ln29_15_fu_927_p1;
wire    ap_block_pp0_stage14;
wire   [63:0] bitcast_ln29_14_fu_937_p1;
wire    ap_block_pp0_stage15;
wire   [63:0] bitcast_ln29_13_fu_947_p1;
wire    ap_block_pp0_stage16;
wire   [63:0] bitcast_ln29_1_fu_958_p1;
wire   [63:0] bitcast_ln29_9_fu_963_p1;
wire   [63:0] bitcast_ln29_10_fu_968_p1;
wire   [63:0] bitcast_ln29_11_fu_972_p1;
wire   [63:0] bitcast_ln29_12_fu_976_p1;
reg   [63:0] grp_fu_346_p0;
reg   [63:0] grp_fu_346_p1;
wire    ap_block_pp0_stage13;
reg   [63:0] grp_fu_350_p0;
reg   [63:0] grp_fu_350_p1;
wire   [5:0] empty_14_fu_441_p1;
wire   [11:0] tmp_3_fu_445_p3;
wire   [11:0] zext_ln20_fu_437_p1;
wire   [6:0] add_ln20_1_fu_466_p2;
wire   [5:0] trunc_ln21_fu_487_p1;
wire   [11:0] zext_ln20_1_fu_472_p1;
wire   [11:0] add_ln29_fu_453_p2;
wire   [0:0] icmp_ln23_fu_505_p2;
wire   [6:0] select_ln20_fu_459_p3;
wire   [0:0] or_ln21_fu_522_p2;
wire   [6:0] add_ln21_fu_516_p2;
wire   [5:0] trunc_ln21_1_fu_534_p1;
wire   [5:0] select_ln20_2_fu_491_p3;
wire   [11:0] zext_ln21_fu_483_p1;
wire   [11:0] select_ln20_3_fu_498_p3;
wire   [0:0] xor_ln21_fu_552_p2;
wire   [0:0] and_ln20_fu_511_p2;
wire   [0:0] or_ln21_1_fu_557_p2;
wire   [6:0] select_ln21_fu_526_p3;
wire   [0:0] and_ln21_fu_562_p2;
wire   [0:0] or_ln22_fu_581_p2;
wire   [0:0] or_ln22_8_fu_586_p2;
wire   [6:0] add_ln22_fu_575_p2;
wire   [5:0] empty_16_fu_599_p1;
wire   [11:0] p_mid1_fu_603_p3;
wire   [11:0] add_ln29_1_fu_611_p2;
wire   [11:0] select_ln21_2_fu_545_p3;
wire   [11:0] or_ln22_7_fu_625_p2;
wire   [3:0] select_ln22_fu_591_p3;
wire   [2:0] tmp_1_fu_652_p4;
wire   [2:0] trunc_ln25_fu_648_p1;
wire   [5:0] select_ln21_1_fu_538_p3;
wire   [5:0] k_cast6_fu_644_p1;
wire   [5:0] trunc_ln26_fu_678_p1;
wire   [5:0] add_ln26_fu_672_p2;
wire   [11:0] add_ln26_1_fu_682_p3;
wire   [11:0] shl_ln_fu_662_p4;
wire   [11:0] or_ln28_6_fu_701_p2;
wire   [11:0] or_ln22_6_fu_725_p2;
wire   [11:0] or_ln28_5_fu_735_p2;
wire   [11:0] or_ln22_5_fu_745_p2;
wire   [11:0] or_ln28_4_fu_759_p2;
wire   [11:0] or_ln28_fu_783_p2;
wire   [11:0] or_ln28_1_fu_803_p2;
wire   [11:0] or_ln28_2_fu_818_p2;
wire   [11:0] or_ln28_3_fu_837_p2;
wire   [11:0] or_ln22_1_fu_847_p2;
wire   [11:0] or_ln22_2_fu_867_p2;
wire   [11:0] or_ln22_3_fu_887_p2;
wire   [11:0] or_ln22_4_fu_902_p2;
wire    ap_CS_fsm_state27;
reg   [18:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

bbgemm_BUS_A_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_BUS_A_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_BUS_A_DATA_WIDTH ))
BUS_A_s_axi_U(
    .AWVALID(s_axi_BUS_A_AWVALID),
    .AWREADY(s_axi_BUS_A_AWREADY),
    .AWADDR(s_axi_BUS_A_AWADDR),
    .WVALID(s_axi_BUS_A_WVALID),
    .WREADY(s_axi_BUS_A_WREADY),
    .WDATA(s_axi_BUS_A_WDATA),
    .WSTRB(s_axi_BUS_A_WSTRB),
    .ARVALID(s_axi_BUS_A_ARVALID),
    .ARREADY(s_axi_BUS_A_ARREADY),
    .ARADDR(s_axi_BUS_A_ARADDR),
    .RVALID(s_axi_BUS_A_RVALID),
    .RREADY(s_axi_BUS_A_RREADY),
    .RDATA(s_axi_BUS_A_RDATA),
    .RRESP(s_axi_BUS_A_RRESP),
    .BVALID(s_axi_BUS_A_BVALID),
    .BREADY(s_axi_BUS_A_BREADY),
    .BRESP(s_axi_BUS_A_BRESP),
    .ACLK(s_axi_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .m1_address0(m1_address0),
    .m1_ce0(m1_ce0),
    .m1_q0(m1_q0),
    .m2_address0(m2_address0),
    .m2_ce0(m2_ce0),
    .m2_q0(m2_q0),
    .prod_address0(prod_address0),
    .prod_ce0(prod_ce0),
    .prod_we0(prod_we0),
    .prod_d0(prod_d0),
    .prod_q0(prod_q0),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

bbgemm_dadd_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_5_full_dsp_1_U1(
    .clk(s_axi_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_346_p0),
    .din1(grp_fu_346_p1),
    .ce(1'b1),
    .dout(grp_fu_346_p2)
);

bbgemm_dmul_64ns_64ns_64_6_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_6_max_dsp_1_U2(
    .clk(s_axi_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_350_p0),
    .din1(grp_fu_350_p1),
    .ce(1'b1),
    .dout(grp_fu_350_p2)
);

always @ (posedge s_axi_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge s_axi_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge s_axi_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge s_axi_clk) begin
    if (((icmp_ln20_reg_985_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        i_reg_324 <= select_ln22_2_reg_1051;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_324 <= 7'd0;
    end
end

always @ (posedge s_axi_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten121_reg_269 <= add_ln20_reg_980;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten121_reg_269 <= 16'd0;
    end
end

always @ (posedge s_axi_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten63_reg_280 <= select_ln21_4_reg_1262;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten63_reg_280 <= 14'd0;
    end
end

always @ (posedge s_axi_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_291 <= select_ln22_3_reg_1087;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_291 <= 11'd0;
    end
end

always @ (posedge s_axi_clk) begin
    if (((icmp_ln20_reg_985_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        jj_reg_302 <= select_ln20_1_reg_1030;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        jj_reg_302 <= 7'd0;
    end
end

always @ (posedge s_axi_clk) begin
    if (((icmp_ln20_reg_985_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        k_reg_335 <= add_ln23_reg_1082;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        k_reg_335 <= 4'd0;
    end
end

always @ (posedge s_axi_clk) begin
    if (((icmp_ln20_reg_985_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        kk_reg_313 <= select_ln21_3_reg_1035;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        kk_reg_313 <= 7'd0;
    end
end

always @ (posedge s_axi_clk) begin
    if (((icmp_ln20_reg_985_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_2_reg_1267 <= grp_fu_346_p2;
    end
end

always @ (posedge s_axi_clk) begin
    if (((icmp_ln20_reg_985_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_3_reg_1272 <= grp_fu_346_p2;
    end
end

always @ (posedge s_axi_clk) begin
    if (((icmp_ln20_reg_985_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        add_4_reg_1277 <= grp_fu_346_p2;
    end
end

always @ (posedge s_axi_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln20_reg_980 <= add_ln20_fu_389_p2;
    end
end

always @ (posedge s_axi_clk) begin
    if (((icmp_ln20_fu_395_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln21_1_reg_1025 <= add_ln21_1_fu_431_p2;
        add_ln22_1_reg_1020 <= add_ln22_1_fu_425_p2;
        and_ln20_1_reg_1011 <= and_ln20_1_fu_419_p2;
        icmp_ln21_reg_989 <= icmp_ln21_fu_401_p2;
        icmp_ln22_reg_1006 <= icmp_ln22_fu_413_p2;
        xor_ln20_reg_1001 <= xor_ln20_fu_407_p2;
    end
end

always @ (posedge s_axi_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln23_reg_1082 <= add_ln23_fu_712_p2;
        select_ln20_1_reg_1030 <= select_ln20_1_fu_476_p3;
        select_ln21_3_reg_1035 <= select_ln21_3_fu_568_p3;
        select_ln22_2_reg_1051 <= select_ln22_2_fu_636_p3;
        select_ln22_3_reg_1087 <= select_ln22_3_fu_718_p3;
    end
end

always @ (posedge s_axi_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln28_reg_1061 <= add_ln28_fu_695_p2;
        prod_addr_7_reg_1077[11 : 3] <= zext_ln22_6_fu_631_p1[11 : 3];
        select_ln22_1_reg_1040 <= select_ln22_1_fu_617_p3;
    end
end

always @ (posedge s_axi_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln20_reg_985 <= icmp_ln20_fu_395_p2;
        icmp_ln20_reg_985_pp0_iter1_reg <= icmp_ln20_reg_985;
    end
end

always @ (posedge s_axi_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        m1_load_reg_1092 <= m1_q0;
        prod_addr_6_reg_1102[0] <= zext_ln22_5_fu_730_p1[0];
prod_addr_6_reg_1102[11 : 3] <= zext_ln22_5_fu_730_p1[11 : 3];
    end
end

always @ (posedge s_axi_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mul_1_reg_1232 <= grp_fu_350_p2;
    end
end

always @ (posedge s_axi_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mul_reg_1212 <= grp_fu_350_p2;
    end
end

always @ (posedge s_axi_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        prod_addr_1_reg_1182[11 : 1] <= zext_ln22_fu_852_p1[11 : 1];
    end
end

always @ (posedge s_axi_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        prod_addr_2_reg_1197[0] <= zext_ln22_1_fu_872_p1[0];
prod_addr_2_reg_1197[11 : 2] <= zext_ln22_1_fu_872_p1[11 : 2];
    end
end

always @ (posedge s_axi_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        prod_addr_3_reg_1217[11 : 2] <= zext_ln22_2_fu_892_p1[11 : 2];
    end
end

always @ (posedge s_axi_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        prod_addr_4_reg_1237[1 : 0] <= zext_ln22_3_fu_907_p1[1 : 0];
prod_addr_4_reg_1237[11 : 3] <= zext_ln22_3_fu_907_p1[11 : 3];
    end
end

always @ (posedge s_axi_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        prod_addr_5_reg_1117[1] <= zext_ln22_4_fu_750_p1[1];
prod_addr_5_reg_1117[11 : 3] <= zext_ln22_4_fu_750_p1[11 : 3];
        temp_x_reg_1107 <= temp_x_fu_755_p1;
    end
end

always @ (posedge s_axi_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        prod_addr_reg_1167 <= zext_ln22_7_fu_828_p1;
    end
end

always @ (posedge s_axi_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_354 <= m2_q0;
    end
end

always @ (posedge s_axi_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage12) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_358 <= prod_q0;
    end
end

always @ (posedge s_axi_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage13) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_362 <= prod_q0;
    end
end

always @ (posedge s_axi_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage11) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_366 <= prod_q0;
    end
end

always @ (posedge s_axi_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage13) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_370 <= grp_fu_350_p2;
    end
end

always @ (posedge s_axi_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage14) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_375 <= grp_fu_350_p2;
    end
end

always @ (posedge s_axi_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage15) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_380 <= grp_fu_350_p2;
    end
end

always @ (posedge s_axi_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_385 <= grp_fu_346_p2;
    end
end

always @ (posedge s_axi_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage16) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln21_4_reg_1262 <= select_ln21_4_fu_952_p3;
    end
end

always @ (*) begin
    if ((icmp_ln20_reg_985 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln20_reg_985_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_phi_mux_i_phi_fu_328_p4 = select_ln22_2_reg_1051;
    end else begin
        ap_phi_mux_i_phi_fu_328_p4 = i_reg_324;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten121_phi_fu_273_p4 = add_ln20_reg_980;
    end else begin
        ap_phi_mux_indvar_flatten121_phi_fu_273_p4 = indvar_flatten121_reg_269;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten63_phi_fu_284_p4 = select_ln21_4_reg_1262;
    end else begin
        ap_phi_mux_indvar_flatten63_phi_fu_284_p4 = indvar_flatten63_reg_280;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_295_p4 = select_ln22_3_reg_1087;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_295_p4 = indvar_flatten_reg_291;
    end
end

always @ (*) begin
    if (((icmp_ln20_reg_985_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_phi_mux_jj_phi_fu_306_p4 = select_ln20_1_reg_1030;
    end else begin
        ap_phi_mux_jj_phi_fu_306_p4 = jj_reg_302;
    end
end

always @ (*) begin
    if (((icmp_ln20_reg_985_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_phi_mux_k_phi_fu_339_p4 = add_ln23_reg_1082;
    end else begin
        ap_phi_mux_k_phi_fu_339_p4 = k_reg_335;
    end
end

always @ (*) begin
    if (((icmp_ln20_reg_985_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_phi_mux_kk_phi_fu_317_p4 = select_ln21_3_reg_1035;
    end else begin
        ap_phi_mux_kk_phi_fu_317_p4 = kk_reg_313;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16))) begin
            grp_fu_346_p0 = bitcast_ln29_4_fu_942_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
            grp_fu_346_p0 = bitcast_ln29_3_fu_932_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
            grp_fu_346_p0 = bitcast_ln29_2_fu_922_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
            grp_fu_346_p0 = bitcast_ln29_8_fu_917_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
            grp_fu_346_p0 = bitcast_ln29_fu_912_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
            grp_fu_346_p0 = bitcast_ln29_5_fu_897_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
            grp_fu_346_p0 = bitcast_ln29_6_fu_882_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
            grp_fu_346_p0 = bitcast_ln29_7_fu_862_p1;
        end else begin
            grp_fu_346_p0 = 'bx;
        end
    end else begin
        grp_fu_346_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_346_p1 = mul_1_reg_1232;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_346_p1 = mul_reg_1212;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_346_p1 = reg_380;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_346_p1 = reg_375;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_346_p1 = reg_370;
    end else begin
        grp_fu_346_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_350_p0 = temp_x_reg_1107;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_350_p0 = temp_x_fu_755_p1;
    end else begin
        grp_fu_350_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
            grp_fu_350_p1 = bitcast_ln28_4_fu_877_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
            grp_fu_350_p1 = bitcast_ln28_3_fu_857_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
            grp_fu_350_p1 = bitcast_ln28_2_fu_832_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
            grp_fu_350_p1 = bitcast_ln28_1_fu_813_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
            grp_fu_350_p1 = bitcast_ln28_fu_798_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
            grp_fu_350_p1 = bitcast_ln28_5_fu_793_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
            grp_fu_350_p1 = bitcast_ln28_6_fu_778_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            grp_fu_350_p1 = bitcast_ln28_7_fu_769_p1;
        end else begin
            grp_fu_350_p1 = 'bx;
        end
    end else begin
        grp_fu_350_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        m1_ce0 = 1'b1;
    end else begin
        m1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
            m2_address0 = zext_ln28_4_fu_842_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
            m2_address0 = zext_ln28_3_fu_823_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
            m2_address0 = zext_ln28_2_fu_808_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
            m2_address0 = zext_ln28_1_fu_788_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
            m2_address0 = zext_ln28_fu_774_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            m2_address0 = zext_ln28_5_fu_764_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            m2_address0 = zext_ln28_6_fu_740_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            m2_address0 = zext_ln28_7_fu_707_p1;
        end else begin
            m2_address0 = 'bx;
        end
    end else begin
        m2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        m2_ce0 = 1'b1;
    end else begin
        m2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        prod_address0 = prod_addr_4_reg_1237;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        prod_address0 = prod_addr_3_reg_1217;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        prod_address0 = prod_addr_2_reg_1197;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        prod_address0 = prod_addr_1_reg_1182;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        prod_address0 = prod_addr_reg_1167;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        prod_address0 = prod_addr_5_reg_1117;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        prod_address0 = prod_addr_6_reg_1102;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        prod_address0 = prod_addr_7_reg_1077;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        prod_address0 = zext_ln22_3_fu_907_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        prod_address0 = zext_ln22_2_fu_892_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        prod_address0 = zext_ln22_1_fu_872_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        prod_address0 = zext_ln22_fu_852_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        prod_address0 = zext_ln22_7_fu_828_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        prod_address0 = zext_ln22_4_fu_750_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        prod_address0 = zext_ln22_5_fu_730_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        prod_address0 = zext_ln22_6_fu_631_p1;
    end else begin
        prod_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        prod_ce0 = 1'b1;
    end else begin
        prod_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        prod_d0 = bitcast_ln29_12_fu_976_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        prod_d0 = bitcast_ln29_11_fu_972_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        prod_d0 = bitcast_ln29_10_fu_968_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        prod_d0 = bitcast_ln29_9_fu_963_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        prod_d0 = bitcast_ln29_1_fu_958_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        prod_d0 = bitcast_ln29_13_fu_947_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        prod_d0 = bitcast_ln29_14_fu_937_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        prod_d0 = bitcast_ln29_15_fu_927_p1;
    end else begin
        prod_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln20_reg_985_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((icmp_ln20_reg_985_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((icmp_ln20_reg_985_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((icmp_ln20_reg_985_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (icmp_ln20_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        prod_we0 = 1'b1;
    end else begin
        prod_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln20_reg_985 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln20_reg_985 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln20_1_fu_466_p2 = (ap_phi_mux_jj_phi_fu_306_p4 + 7'd8);

assign add_ln20_fu_389_p2 = (ap_phi_mux_indvar_flatten121_phi_fu_273_p4 + 16'd1);

assign add_ln21_1_fu_431_p2 = (ap_phi_mux_indvar_flatten63_phi_fu_284_p4 + 14'd1);

assign add_ln21_fu_516_p2 = (select_ln20_fu_459_p3 + 7'd8);

assign add_ln22_1_fu_425_p2 = (ap_phi_mux_indvar_flatten_phi_fu_295_p4 + 11'd1);

assign add_ln22_fu_575_p2 = (select_ln21_fu_526_p3 + 7'd1);

assign add_ln23_fu_712_p2 = (select_ln22_fu_591_p3 + 4'd1);

assign add_ln26_1_fu_682_p3 = {{trunc_ln26_fu_678_p1}, {add_ln26_fu_672_p2}};

assign add_ln26_fu_672_p2 = (select_ln21_1_fu_538_p3 + k_cast6_fu_644_p1);

assign add_ln28_fu_695_p2 = (shl_ln_fu_662_p4 + zext_ln21_fu_483_p1);

assign add_ln29_1_fu_611_p2 = (p_mid1_fu_603_p3 + zext_ln21_fu_483_p1);

assign add_ln29_fu_453_p2 = (tmp_3_fu_445_p3 + zext_ln20_fu_437_p1);

assign and_ln20_1_fu_419_p2 = (xor_ln20_fu_407_p2 & icmp_ln22_fu_413_p2);

assign and_ln20_fu_511_p2 = (xor_ln20_reg_1001 & icmp_ln23_fu_505_p2);

assign and_ln21_fu_562_p2 = (or_ln21_1_fu_557_p2 & and_ln20_fu_511_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd18];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~s_axi_rst_n;
end

assign bitcast_ln28_1_fu_813_p1 = reg_354;

assign bitcast_ln28_2_fu_832_p1 = reg_354;

assign bitcast_ln28_3_fu_857_p1 = reg_354;

assign bitcast_ln28_4_fu_877_p1 = reg_354;

assign bitcast_ln28_5_fu_793_p1 = reg_354;

assign bitcast_ln28_6_fu_778_p1 = reg_354;

assign bitcast_ln28_7_fu_769_p1 = reg_354;

assign bitcast_ln28_fu_798_p1 = reg_354;

assign bitcast_ln29_10_fu_968_p1 = add_2_reg_1267;

assign bitcast_ln29_11_fu_972_p1 = add_3_reg_1272;

assign bitcast_ln29_12_fu_976_p1 = add_4_reg_1277;

assign bitcast_ln29_13_fu_947_p1 = reg_385;

assign bitcast_ln29_14_fu_937_p1 = reg_385;

assign bitcast_ln29_15_fu_927_p1 = reg_385;

assign bitcast_ln29_1_fu_958_p1 = reg_385;

assign bitcast_ln29_2_fu_922_p1 = reg_366;

assign bitcast_ln29_3_fu_932_p1 = reg_358;

assign bitcast_ln29_4_fu_942_p1 = reg_362;

assign bitcast_ln29_5_fu_897_p1 = reg_366;

assign bitcast_ln29_6_fu_882_p1 = reg_362;

assign bitcast_ln29_7_fu_862_p1 = reg_358;

assign bitcast_ln29_8_fu_917_p1 = reg_362;

assign bitcast_ln29_9_fu_963_p1 = reg_385;

assign bitcast_ln29_fu_912_p1 = reg_358;

assign empty_14_fu_441_p1 = ap_phi_mux_i_phi_fu_328_p4[5:0];

assign empty_16_fu_599_p1 = add_ln22_fu_575_p2[5:0];

assign icmp_ln20_fu_395_p2 = ((ap_phi_mux_indvar_flatten121_phi_fu_273_p4 == 16'd32768) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_401_p2 = ((ap_phi_mux_indvar_flatten63_phi_fu_284_p4 == 14'd4096) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_413_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_295_p4 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_505_p2 = ((ap_phi_mux_k_phi_fu_339_p4 == 4'd8) ? 1'b1 : 1'b0);

assign k_cast6_fu_644_p1 = select_ln22_fu_591_p3;

assign m1_address0 = zext_ln26_fu_690_p1;

assign or_ln21_1_fu_557_p2 = (xor_ln21_fu_552_p2 | icmp_ln21_reg_989);

assign or_ln21_fu_522_p2 = (icmp_ln21_reg_989 | and_ln20_1_reg_1011);

assign or_ln22_1_fu_847_p2 = (select_ln22_1_reg_1040 | 12'd1);

assign or_ln22_2_fu_867_p2 = (select_ln22_1_reg_1040 | 12'd2);

assign or_ln22_3_fu_887_p2 = (select_ln22_1_reg_1040 | 12'd3);

assign or_ln22_4_fu_902_p2 = (select_ln22_1_reg_1040 | 12'd4);

assign or_ln22_5_fu_745_p2 = (select_ln22_1_reg_1040 | 12'd5);

assign or_ln22_6_fu_725_p2 = (select_ln22_1_reg_1040 | 12'd6);

assign or_ln22_7_fu_625_p2 = (select_ln22_1_fu_617_p3 | 12'd7);

assign or_ln22_8_fu_586_p2 = (or_ln22_fu_581_p2 | icmp_ln21_reg_989);

assign or_ln22_fu_581_p2 = (and_ln21_fu_562_p2 | and_ln20_1_reg_1011);

assign or_ln28_1_fu_803_p2 = (12'd2 | add_ln28_reg_1061);

assign or_ln28_2_fu_818_p2 = (12'd3 | add_ln28_reg_1061);

assign or_ln28_3_fu_837_p2 = (12'd4 | add_ln28_reg_1061);

assign or_ln28_4_fu_759_p2 = (12'd5 | add_ln28_reg_1061);

assign or_ln28_5_fu_735_p2 = (12'd6 | add_ln28_reg_1061);

assign or_ln28_6_fu_701_p2 = (12'd7 | add_ln28_fu_695_p2);

assign or_ln28_fu_783_p2 = (12'd1 | add_ln28_reg_1061);

assign p_mid1_fu_603_p3 = {{empty_16_fu_599_p1}, {6'd0}};

assign select_ln20_1_fu_476_p3 = ((icmp_ln21_reg_989[0:0] == 1'b1) ? add_ln20_1_fu_466_p2 : ap_phi_mux_jj_phi_fu_306_p4);

assign select_ln20_2_fu_491_p3 = ((icmp_ln21_reg_989[0:0] == 1'b1) ? 6'd0 : trunc_ln21_fu_487_p1);

assign select_ln20_3_fu_498_p3 = ((icmp_ln21_reg_989[0:0] == 1'b1) ? zext_ln20_1_fu_472_p1 : add_ln29_fu_453_p2);

assign select_ln20_fu_459_p3 = ((icmp_ln21_reg_989[0:0] == 1'b1) ? 7'd0 : ap_phi_mux_kk_phi_fu_317_p4);

assign select_ln21_1_fu_538_p3 = ((and_ln20_1_reg_1011[0:0] == 1'b1) ? trunc_ln21_1_fu_534_p1 : select_ln20_2_fu_491_p3);

assign select_ln21_2_fu_545_p3 = ((and_ln20_1_reg_1011[0:0] == 1'b1) ? zext_ln21_fu_483_p1 : select_ln20_3_fu_498_p3);

assign select_ln21_3_fu_568_p3 = ((and_ln20_1_reg_1011[0:0] == 1'b1) ? add_ln21_fu_516_p2 : select_ln20_fu_459_p3);

assign select_ln21_4_fu_952_p3 = ((icmp_ln21_reg_989[0:0] == 1'b1) ? 14'd1 : add_ln21_1_reg_1025);

assign select_ln21_fu_526_p3 = ((or_ln21_fu_522_p2[0:0] == 1'b1) ? 7'd0 : ap_phi_mux_i_phi_fu_328_p4);

assign select_ln22_1_fu_617_p3 = ((and_ln21_fu_562_p2[0:0] == 1'b1) ? add_ln29_1_fu_611_p2 : select_ln21_2_fu_545_p3);

assign select_ln22_2_fu_636_p3 = ((and_ln21_fu_562_p2[0:0] == 1'b1) ? add_ln22_fu_575_p2 : select_ln21_fu_526_p3);

assign select_ln22_3_fu_718_p3 = ((or_ln21_fu_522_p2[0:0] == 1'b1) ? 11'd1 : add_ln22_1_reg_1020);

assign select_ln22_fu_591_p3 = ((or_ln22_8_fu_586_p2[0:0] == 1'b1) ? 4'd0 : ap_phi_mux_k_phi_fu_339_p4);

assign shl_ln_fu_662_p4 = {{{tmp_1_fu_652_p4}, {trunc_ln25_fu_648_p1}}, {6'd0}};

assign temp_x_fu_755_p1 = m1_load_reg_1092;

assign tmp_1_fu_652_p4 = {{select_ln21_3_fu_568_p3[5:3]}};

assign tmp_3_fu_445_p3 = {{empty_14_fu_441_p1}, {6'd0}};

assign trunc_ln21_1_fu_534_p1 = add_ln21_fu_516_p2[5:0];

assign trunc_ln21_fu_487_p1 = ap_phi_mux_kk_phi_fu_317_p4[5:0];

assign trunc_ln25_fu_648_p1 = select_ln22_fu_591_p3[2:0];

assign trunc_ln26_fu_678_p1 = select_ln22_2_fu_636_p3[5:0];

assign xor_ln20_fu_407_p2 = (icmp_ln21_fu_401_p2 ^ 1'd1);

assign xor_ln21_fu_552_p2 = (icmp_ln22_reg_1006 ^ 1'd1);

assign zext_ln20_1_fu_472_p1 = add_ln20_1_fu_466_p2;

assign zext_ln20_fu_437_p1 = ap_phi_mux_jj_phi_fu_306_p4;

assign zext_ln21_fu_483_p1 = select_ln20_1_fu_476_p3;

assign zext_ln22_1_fu_872_p1 = or_ln22_2_fu_867_p2;

assign zext_ln22_2_fu_892_p1 = or_ln22_3_fu_887_p2;

assign zext_ln22_3_fu_907_p1 = or_ln22_4_fu_902_p2;

assign zext_ln22_4_fu_750_p1 = or_ln22_5_fu_745_p2;

assign zext_ln22_5_fu_730_p1 = or_ln22_6_fu_725_p2;

assign zext_ln22_6_fu_631_p1 = or_ln22_7_fu_625_p2;

assign zext_ln22_7_fu_828_p1 = select_ln22_1_reg_1040;

assign zext_ln22_fu_852_p1 = or_ln22_1_fu_847_p2;

assign zext_ln26_fu_690_p1 = add_ln26_1_fu_682_p3;

assign zext_ln28_1_fu_788_p1 = or_ln28_fu_783_p2;

assign zext_ln28_2_fu_808_p1 = or_ln28_1_fu_803_p2;

assign zext_ln28_3_fu_823_p1 = or_ln28_2_fu_818_p2;

assign zext_ln28_4_fu_842_p1 = or_ln28_3_fu_837_p2;

assign zext_ln28_5_fu_764_p1 = or_ln28_4_fu_759_p2;

assign zext_ln28_6_fu_740_p1 = or_ln28_5_fu_735_p2;

assign zext_ln28_7_fu_707_p1 = or_ln28_6_fu_701_p2;

assign zext_ln28_fu_774_p1 = add_ln28_reg_1061;

always @ (posedge s_axi_clk) begin
    prod_addr_7_reg_1077[2:0] <= 3'b111;
    prod_addr_6_reg_1102[2:1] <= 2'b11;
    prod_addr_5_reg_1117[0] <= 1'b1;
    prod_addr_5_reg_1117[2] <= 1'b1;
    prod_addr_1_reg_1182[0] <= 1'b1;
    prod_addr_2_reg_1197[1] <= 1'b1;
    prod_addr_3_reg_1217[1:0] <= 2'b11;
    prod_addr_4_reg_1237[2] <= 1'b1;
end

endmodule //bbgemm
