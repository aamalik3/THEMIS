// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="md_md,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.820000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=24,HLS_SYN_DSP=0,HLS_SYN_FF=16645,HLS_SYN_LUT=12205,HLS_VERSION=2020_2}" *)

module md (
        ap_clk,
        ap_rst_n,
        s_axi_BUS_A_AWVALID,
        s_axi_BUS_A_AWREADY,
        s_axi_BUS_A_AWADDR,
        s_axi_BUS_A_WVALID,
        s_axi_BUS_A_WREADY,
        s_axi_BUS_A_WDATA,
        s_axi_BUS_A_WSTRB,
        s_axi_BUS_A_ARVALID,
        s_axi_BUS_A_ARREADY,
        s_axi_BUS_A_ARADDR,
        s_axi_BUS_A_RVALID,
        s_axi_BUS_A_RREADY,
        s_axi_BUS_A_RDATA,
        s_axi_BUS_A_RRESP,
        s_axi_BUS_A_BVALID,
        s_axi_BUS_A_BREADY,
        s_axi_BUS_A_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 94'd1;
parameter    ap_ST_fsm_state2 = 94'd2;
parameter    ap_ST_fsm_state3 = 94'd4;
parameter    ap_ST_fsm_state4 = 94'd8;
parameter    ap_ST_fsm_state5 = 94'd16;
parameter    ap_ST_fsm_state6 = 94'd32;
parameter    ap_ST_fsm_state7 = 94'd64;
parameter    ap_ST_fsm_state8 = 94'd128;
parameter    ap_ST_fsm_state9 = 94'd256;
parameter    ap_ST_fsm_state10 = 94'd512;
parameter    ap_ST_fsm_state11 = 94'd1024;
parameter    ap_ST_fsm_state12 = 94'd2048;
parameter    ap_ST_fsm_state13 = 94'd4096;
parameter    ap_ST_fsm_state14 = 94'd8192;
parameter    ap_ST_fsm_state15 = 94'd16384;
parameter    ap_ST_fsm_state16 = 94'd32768;
parameter    ap_ST_fsm_state17 = 94'd65536;
parameter    ap_ST_fsm_state18 = 94'd131072;
parameter    ap_ST_fsm_state19 = 94'd262144;
parameter    ap_ST_fsm_state20 = 94'd524288;
parameter    ap_ST_fsm_state21 = 94'd1048576;
parameter    ap_ST_fsm_state22 = 94'd2097152;
parameter    ap_ST_fsm_state23 = 94'd4194304;
parameter    ap_ST_fsm_state24 = 94'd8388608;
parameter    ap_ST_fsm_state25 = 94'd16777216;
parameter    ap_ST_fsm_state26 = 94'd33554432;
parameter    ap_ST_fsm_state27 = 94'd67108864;
parameter    ap_ST_fsm_state28 = 94'd134217728;
parameter    ap_ST_fsm_state29 = 94'd268435456;
parameter    ap_ST_fsm_state30 = 94'd536870912;
parameter    ap_ST_fsm_state31 = 94'd1073741824;
parameter    ap_ST_fsm_state32 = 94'd2147483648;
parameter    ap_ST_fsm_state33 = 94'd4294967296;
parameter    ap_ST_fsm_state34 = 94'd8589934592;
parameter    ap_ST_fsm_state35 = 94'd17179869184;
parameter    ap_ST_fsm_state36 = 94'd34359738368;
parameter    ap_ST_fsm_state37 = 94'd68719476736;
parameter    ap_ST_fsm_state38 = 94'd137438953472;
parameter    ap_ST_fsm_state39 = 94'd274877906944;
parameter    ap_ST_fsm_state40 = 94'd549755813888;
parameter    ap_ST_fsm_state41 = 94'd1099511627776;
parameter    ap_ST_fsm_state42 = 94'd2199023255552;
parameter    ap_ST_fsm_state43 = 94'd4398046511104;
parameter    ap_ST_fsm_state44 = 94'd8796093022208;
parameter    ap_ST_fsm_state45 = 94'd17592186044416;
parameter    ap_ST_fsm_state46 = 94'd35184372088832;
parameter    ap_ST_fsm_state47 = 94'd70368744177664;
parameter    ap_ST_fsm_state48 = 94'd140737488355328;
parameter    ap_ST_fsm_state49 = 94'd281474976710656;
parameter    ap_ST_fsm_state50 = 94'd562949953421312;
parameter    ap_ST_fsm_state51 = 94'd1125899906842624;
parameter    ap_ST_fsm_state52 = 94'd2251799813685248;
parameter    ap_ST_fsm_state53 = 94'd4503599627370496;
parameter    ap_ST_fsm_state54 = 94'd9007199254740992;
parameter    ap_ST_fsm_state55 = 94'd18014398509481984;
parameter    ap_ST_fsm_state56 = 94'd36028797018963968;
parameter    ap_ST_fsm_state57 = 94'd72057594037927936;
parameter    ap_ST_fsm_state58 = 94'd144115188075855872;
parameter    ap_ST_fsm_state59 = 94'd288230376151711744;
parameter    ap_ST_fsm_state60 = 94'd576460752303423488;
parameter    ap_ST_fsm_state61 = 94'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 94'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 94'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 94'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 94'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 94'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 94'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 94'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 94'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 94'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 94'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 94'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 94'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 94'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 94'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 94'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 94'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 94'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 94'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 94'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 94'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 94'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 94'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 94'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 94'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 94'd38685626227668133590597632;
parameter    ap_ST_fsm_pp0_stage0 = 94'd77371252455336267181195264;
parameter    ap_ST_fsm_pp0_stage1 = 94'd154742504910672534362390528;
parameter    ap_ST_fsm_pp0_stage2 = 94'd309485009821345068724781056;
parameter    ap_ST_fsm_pp0_stage3 = 94'd618970019642690137449562112;
parameter    ap_ST_fsm_pp0_stage4 = 94'd1237940039285380274899124224;
parameter    ap_ST_fsm_state193 = 94'd2475880078570760549798248448;
parameter    ap_ST_fsm_state194 = 94'd4951760157141521099596496896;
parameter    ap_ST_fsm_state195 = 94'd9903520314283042199192993792;
parameter    C_S_AXI_BUS_A_DATA_WIDTH = 32;
parameter    C_S_AXI_BUS_A_ADDR_WIDTH = 17;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_BUS_A_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_BUS_A_AWVALID;
output   s_axi_BUS_A_AWREADY;
input  [C_S_AXI_BUS_A_ADDR_WIDTH - 1:0] s_axi_BUS_A_AWADDR;
input   s_axi_BUS_A_WVALID;
output   s_axi_BUS_A_WREADY;
input  [C_S_AXI_BUS_A_DATA_WIDTH - 1:0] s_axi_BUS_A_WDATA;
input  [C_S_AXI_BUS_A_WSTRB_WIDTH - 1:0] s_axi_BUS_A_WSTRB;
input   s_axi_BUS_A_ARVALID;
output   s_axi_BUS_A_ARREADY;
input  [C_S_AXI_BUS_A_ADDR_WIDTH - 1:0] s_axi_BUS_A_ARADDR;
output   s_axi_BUS_A_RVALID;
input   s_axi_BUS_A_RREADY;
output  [C_S_AXI_BUS_A_DATA_WIDTH - 1:0] s_axi_BUS_A_RDATA;
output  [1:0] s_axi_BUS_A_RRESP;
output   s_axi_BUS_A_BVALID;
input   s_axi_BUS_A_BREADY;
output  [1:0] s_axi_BUS_A_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [93:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [5:0] n_points_address0;
reg    n_points_ce0;
wire   [31:0] n_points_q0;
reg   [9:0] force_r_address0;
reg    force_r_ce0;
reg   [23:0] force_r_we0;
reg   [191:0] force_r_d0;
wire   [191:0] force_r_q0;
reg   [9:0] position_address0;
reg    position_ce0;
wire   [191:0] position_q0;
reg   [31:0] q_idx_reg_470;
reg   [63:0] sum_z_2_reg_482;
reg   [63:0] sum_y_2_reg_492;
reg   [63:0] sum_x_2_reg_502;
wire   [6:0] add_ln22_2_fu_641_p2;
reg   [6:0] add_ln22_2_reg_2465;
wire    ap_CS_fsm_state2;
wire   [14:0] sub_ln34_fu_731_p2;
reg   [14:0] sub_ln34_reg_2470;
wire   [3:0] sub_ln23_fu_755_p2;
reg   [3:0] sub_ln23_reg_2475;
wire   [1:0] smax65_fu_771_p3;
reg   [1:0] smax65_reg_2480;
wire   [12:0] sub_ln34_1_fu_845_p2;
reg   [12:0] sub_ln34_1_reg_2485;
wire   [3:0] sub_ln24_fu_869_p2;
reg   [3:0] sub_ln24_reg_2490;
wire   [0:0] icmp_ln23_fu_887_p2;
reg   [0:0] icmp_ln23_reg_2498;
wire   [0:0] icmp_ln22_fu_875_p2;
wire   [1:0] smax70_mid1_fu_911_p3;
reg   [1:0] smax70_mid1_reg_2511;
wire   [1:0] select_ln22_3_fu_919_p3;
reg   [1:0] select_ln22_3_reg_2517;
wire   [0:0] and_ln22_fu_939_p2;
reg   [0:0] and_ln22_reg_2522;
wire   [2:0] select_ln22_9_fu_945_p3;
reg   [2:0] select_ln22_9_reg_2531;
wire   [1:0] smax65_mid1_fu_969_p3;
reg   [1:0] smax65_mid1_reg_2536;
wire   [2:0] select_ln23_6_fu_977_p3;
reg   [2:0] select_ln23_6_reg_2543;
wire   [2:0] select_ln22_2_fu_998_p3;
reg   [2:0] select_ln22_2_reg_2548;
wire    ap_CS_fsm_state3;
wire   [3:0] select_ln22_5_fu_1105_p3;
reg   [3:0] select_ln22_5_reg_2554;
wire   [2:0] select_ln23_fu_1139_p3;
reg   [2:0] select_ln23_reg_2559;
wire   [2:0] select_ln23_1_fu_1147_p3;
reg   [2:0] select_ln23_1_reg_2565;
wire   [2:0] select_ln23_2_fu_1155_p3;
reg   [2:0] select_ln23_2_reg_2570;
wire   [1:0] select_ln23_3_fu_1168_p3;
reg   [1:0] select_ln23_3_reg_2576;
wire   [12:0] select_ln23_4_fu_1238_p3;
reg   [12:0] select_ln23_4_reg_2581;
wire   [3:0] select_ln23_5_fu_1269_p3;
reg   [3:0] select_ln23_5_reg_2586;
wire   [1:0] smax_fu_1286_p3;
reg   [1:0] smax_reg_2591;
wire   [2:0] p_add45_fu_1328_p3;
reg   [2:0] p_add45_reg_2596;
wire   [14:0] add_ln34_fu_1370_p2;
reg   [14:0] add_ln34_reg_2601;
wire   [3:0] sub_ln26_fu_1394_p2;
reg   [3:0] sub_ln26_reg_2606;
wire   [0:0] icmp_ln28_fu_1400_p2;
reg   [0:0] icmp_ln28_reg_2611;
wire    ap_CS_fsm_state4;
wire   [127:0] grp_fu_1420_p2;
reg   [127:0] mul_ln16_reg_2626;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire   [63:0] select_ln22_3_cast_fu_1453_p1;
wire    ap_CS_fsm_state9;
wire   [63:0] select_ln23_3_cast_fu_1477_p1;
reg   [63:0] select_ln23_3_cast_reg_2647;
wire  signed [38:0] select_ln23_4_cast_fu_1480_p1;
reg  signed [38:0] select_ln23_4_cast_reg_2653;
reg   [5:0] n_points_addr_reg_2658;
wire   [9:0] add_ln33_1_fu_1521_p2;
reg   [9:0] add_ln33_1_reg_2663;
wire   [63:0] smax_cast_fu_1527_p1;
reg   [63:0] smax_cast_reg_2668;
wire   [63:0] zext_ln26_fu_1530_p1;
reg   [63:0] zext_ln26_reg_2675;
wire  signed [38:0] sext_ln34_1_fu_1533_p1;
reg  signed [38:0] sext_ln34_1_reg_2680;
wire   [191:0] grp_fu_1436_p2;
reg   [191:0] mul_ln16_1_reg_2685;
wire   [191:0] add_ln26_1_fu_1536_p2;
reg   [191:0] add_ln26_1_reg_2690;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln27_fu_1553_p2;
reg   [0:0] icmp_ln27_reg_2698;
wire   [0:0] icmp_ln26_fu_1542_p2;
wire   [63:0] select_ln16_fu_1558_p3;
reg   [63:0] select_ln16_reg_2703;
wire   [0:0] select_ln16_2_fu_1577_p3;
reg   [0:0] select_ln16_2_reg_2709;
wire   [63:0] select_ln26_fu_1584_p3;
reg   [63:0] select_ln26_reg_2714;
wire   [58:0] trunc_ln27_fu_1592_p1;
reg   [58:0] trunc_ln27_reg_2719;
wire   [63:0] select_ln16_3_fu_1596_p3;
reg   [63:0] select_ln16_3_reg_2724;
wire   [62:0] trunc_ln27_1_fu_1603_p1;
reg   [62:0] trunc_ln27_1_reg_2729;
wire   [2:0] add_ln24_fu_1607_p2;
wire   [2:0] add_ln24_1_fu_1612_p2;
wire   [5:0] select_ln23_7_fu_1623_p3;
wire   [63:0] select_ln27_fu_1635_p3;
reg   [63:0] select_ln27_reg_2749;
wire    ap_CS_fsm_state11;
wire   [60:0] add_ln31_fu_1652_p2;
reg   [60:0] add_ln31_reg_2754;
wire    ap_CS_fsm_state12;
wire   [9:0] add_ln39_1_fu_1699_p2;
reg   [9:0] add_ln39_1_reg_2764;
reg   [31:0] q_idx_range_reg_2769;
wire    ap_CS_fsm_state13;
reg   [31:0] n_points_load_reg_2774;
wire    ap_CS_fsm_state14;
wire   [31:0] add_ln33_fu_1705_p2;
reg   [31:0] add_ln33_reg_2779;
wire    ap_CS_fsm_state15;
wire   [9:0] add_ln33_2_fu_1720_p2;
reg   [9:0] add_ln33_2_reg_2787;
wire   [0:0] icmp_ln32_fu_1711_p2;
wire  signed [38:0] add_ln34_2_fu_1764_p2;
reg  signed [38:0] add_ln34_2_reg_2792;
wire   [63:0] add_ln28_fu_1769_p2;
wire   [127:0] select_ln27_1_fu_1780_p3;
wire   [128:0] zext_ln34_12_fu_1790_p1;
wire    ap_CS_fsm_state16;
wire   [38:0] add_ln35_fu_1826_p2;
reg   [38:0] add_ln35_reg_2825;
wire   [38:0] add_ln36_fu_1831_p2;
reg   [38:0] add_ln36_reg_2830;
wire    ap_CS_fsm_state17;
reg   [1:0] trunc_ln34_1_reg_2865;
wire    ap_CS_fsm_state18;
reg   [1:0] trunc_ln34_2_reg_2871;
reg   [2:0] tmp_11_reg_2877;
reg   [4:0] tmp_12_reg_2882;
reg   [59:0] trunc_ln34_3_reg_2887;
reg   [1:0] trunc_ln35_1_reg_2892;
wire    ap_CS_fsm_state19;
reg   [1:0] trunc_ln35_2_reg_2898;
reg   [2:0] tmp_13_reg_2904;
reg   [4:0] tmp_14_reg_2909;
reg   [1:0] trunc_ln36_1_reg_2914;
reg   [1:0] trunc_ln36_2_reg_2920;
reg   [2:0] tmp_15_reg_2926;
reg   [4:0] tmp_16_reg_2931;
wire   [9:0] add_ln34_4_fu_2069_p2;
reg   [9:0] add_ln34_4_reg_2936;
wire    ap_CS_fsm_state82;
wire   [9:0] add_ln35_2_fu_2099_p2;
reg   [9:0] add_ln35_2_reg_2941;
wire   [9:0] add_ln36_2_fu_2129_p2;
reg   [9:0] add_ln36_2_reg_2946;
reg   [9:0] force_addr_reg_2951;
wire    ap_CS_fsm_state83;
wire   [63:0] trunc_ln34_4_fu_2139_p1;
reg   [63:0] trunc_ln34_4_reg_2956;
wire    ap_CS_fsm_state84;
reg   [9:0] force_addr_1_reg_2961;
wire    ap_CS_fsm_state85;
reg   [63:0] trunc_ln5_reg_2971;
reg   [9:0] force_addr_2_reg_2976;
reg   [191:0] position_load_reg_2981;
wire    ap_CS_fsm_state86;
wire   [63:0] p_x_fu_2169_p1;
reg   [63:0] p_x_reg_2988;
wire   [63:0] p_y_fu_2173_p1;
reg   [63:0] p_y_reg_2994;
wire   [63:0] p_z_fu_2177_p1;
reg   [63:0] p_z_reg_3000;
wire   [63:0] sum_x_fu_2181_p1;
wire   [63:0] sum_y_fu_2184_p1;
wire   [63:0] sum_z_fu_2197_p1;
wire   [0:0] icmp_ln42_3_fu_2205_p2;
reg   [0:0] icmp_ln42_3_reg_3021;
wire   [0:0] grp_fu_619_p2;
reg   [0:0] icmp_ln42_7_reg_3026;
wire   [0:0] grp_fu_635_p2;
reg   [0:0] icmp_ln42_11_reg_3031;
wire   [0:0] icmp_ln38_fu_2211_p2;
reg   [0:0] icmp_ln38_reg_3036;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state87_pp0_stage0_iter0;
wire    ap_block_state92_pp0_stage0_iter1;
wire    ap_block_state97_pp0_stage0_iter2;
wire    ap_block_state102_pp0_stage0_iter3;
wire    ap_block_state107_pp0_stage0_iter4;
wire    ap_block_state112_pp0_stage0_iter5;
wire    ap_block_state117_pp0_stage0_iter6;
wire    ap_block_state122_pp0_stage0_iter7;
wire    ap_block_state127_pp0_stage0_iter8;
wire    ap_block_state132_pp0_stage0_iter9;
wire    ap_block_state137_pp0_stage0_iter10;
wire    ap_block_state142_pp0_stage0_iter11;
wire    ap_block_state147_pp0_stage0_iter12;
wire    ap_block_state152_pp0_stage0_iter13;
wire    ap_block_state157_pp0_stage0_iter14;
wire    ap_block_state162_pp0_stage0_iter15;
wire    ap_block_state167_pp0_stage0_iter16;
wire    ap_block_state172_pp0_stage0_iter17;
wire    ap_block_state177_pp0_stage0_iter18;
wire    ap_block_state182_pp0_stage0_iter19;
wire    ap_block_state187_pp0_stage0_iter20;
wire    ap_block_state192_pp0_stage0_iter21;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln38_reg_3036_pp0_iter1_reg;
reg   [0:0] icmp_ln38_reg_3036_pp0_iter2_reg;
reg   [0:0] icmp_ln38_reg_3036_pp0_iter3_reg;
reg   [0:0] icmp_ln38_reg_3036_pp0_iter4_reg;
reg   [0:0] icmp_ln38_reg_3036_pp0_iter5_reg;
reg   [0:0] icmp_ln38_reg_3036_pp0_iter6_reg;
reg   [0:0] icmp_ln38_reg_3036_pp0_iter7_reg;
reg   [0:0] icmp_ln38_reg_3036_pp0_iter8_reg;
reg   [0:0] icmp_ln38_reg_3036_pp0_iter9_reg;
reg   [0:0] icmp_ln38_reg_3036_pp0_iter10_reg;
reg   [0:0] icmp_ln38_reg_3036_pp0_iter11_reg;
reg   [0:0] icmp_ln38_reg_3036_pp0_iter12_reg;
reg   [0:0] icmp_ln38_reg_3036_pp0_iter13_reg;
reg   [0:0] icmp_ln38_reg_3036_pp0_iter14_reg;
reg   [0:0] icmp_ln38_reg_3036_pp0_iter15_reg;
reg   [0:0] icmp_ln38_reg_3036_pp0_iter16_reg;
reg   [0:0] icmp_ln38_reg_3036_pp0_iter17_reg;
reg   [0:0] icmp_ln38_reg_3036_pp0_iter18_reg;
reg   [0:0] icmp_ln38_reg_3036_pp0_iter19_reg;
reg   [0:0] icmp_ln38_reg_3036_pp0_iter20_reg;
wire   [0:0] icmp_ln42_2_fu_2239_p2;
reg   [0:0] icmp_ln42_2_reg_3045;
wire   [0:0] icmp_ln42_6_fu_2254_p2;
reg   [0:0] icmp_ln42_6_reg_3050;
wire   [0:0] icmp_ln42_10_fu_2269_p2;
reg   [0:0] icmp_ln42_10_reg_3055;
wire   [63:0] q_x_fu_2279_p1;
reg   [63:0] q_x_reg_3060;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state88_pp0_stage1_iter0;
wire    ap_block_state93_pp0_stage1_iter1;
wire    ap_block_state98_pp0_stage1_iter2;
wire    ap_block_state103_pp0_stage1_iter3;
wire    ap_block_state108_pp0_stage1_iter4;
wire    ap_block_state113_pp0_stage1_iter5;
wire    ap_block_state118_pp0_stage1_iter6;
wire    ap_block_state123_pp0_stage1_iter7;
wire    ap_block_state128_pp0_stage1_iter8;
wire    ap_block_state133_pp0_stage1_iter9;
wire    ap_block_state138_pp0_stage1_iter10;
wire    ap_block_state143_pp0_stage1_iter11;
wire    ap_block_state148_pp0_stage1_iter12;
wire    ap_block_state153_pp0_stage1_iter13;
wire    ap_block_state158_pp0_stage1_iter14;
wire    ap_block_state163_pp0_stage1_iter15;
wire    ap_block_state168_pp0_stage1_iter16;
wire    ap_block_state173_pp0_stage1_iter17;
wire    ap_block_state178_pp0_stage1_iter18;
wire    ap_block_state183_pp0_stage1_iter19;
wire    ap_block_state188_pp0_stage1_iter20;
wire    ap_block_pp0_stage1_11001;
wire   [63:0] grp_fu_589_p4;
reg   [63:0] trunc_ln39_1_reg_3066;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] grp_fu_599_p4;
reg   [63:0] trunc_ln39_2_reg_3071;
wire   [0:0] icmp_ln42_fu_2298_p2;
reg   [0:0] icmp_ln42_reg_3076;
wire   [0:0] icmp_ln42_1_fu_2304_p2;
reg   [0:0] icmp_ln42_1_reg_3081;
wire   [0:0] icmp_ln42_4_fu_2320_p2;
reg   [0:0] icmp_ln42_4_reg_3086;
reg   [0:0] icmp_ln42_5_reg_3091;
wire   [0:0] icmp_ln42_8_fu_2336_p2;
reg   [0:0] icmp_ln42_8_reg_3096;
reg   [0:0] icmp_ln42_9_reg_3101;
wire   [63:0] q_y_fu_2342_p1;
reg   [63:0] q_y_reg_3106;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state89_pp0_stage2_iter0;
wire    ap_block_state94_pp0_stage2_iter1;
wire    ap_block_state99_pp0_stage2_iter2;
wire    ap_block_state104_pp0_stage2_iter3;
wire    ap_block_state109_pp0_stage2_iter4;
wire    ap_block_state114_pp0_stage2_iter5;
wire    ap_block_state119_pp0_stage2_iter6;
wire    ap_block_state124_pp0_stage2_iter7;
wire    ap_block_state129_pp0_stage2_iter8;
wire    ap_block_state134_pp0_stage2_iter9;
wire    ap_block_state139_pp0_stage2_iter10;
wire    ap_block_state144_pp0_stage2_iter11;
wire    ap_block_state149_pp0_stage2_iter12;
wire    ap_block_state154_pp0_stage2_iter13;
wire    ap_block_state159_pp0_stage2_iter14;
wire    ap_block_state164_pp0_stage2_iter15;
wire    ap_block_state169_pp0_stage2_iter16;
wire    ap_block_state174_pp0_stage2_iter17;
wire    ap_block_state179_pp0_stage2_iter18;
wire    ap_block_state184_pp0_stage2_iter19;
wire    ap_block_state189_pp0_stage2_iter20;
wire    ap_block_pp0_stage2_11001;
wire   [0:0] grp_fu_585_p2;
reg   [0:0] tmp_2_reg_3112;
wire   [63:0] q_z_fu_2346_p1;
reg   [63:0] q_z_reg_3117;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state90_pp0_stage3_iter0;
wire    ap_block_state95_pp0_stage3_iter1;
wire    ap_block_state100_pp0_stage3_iter2;
wire    ap_block_state105_pp0_stage3_iter3;
wire    ap_block_state110_pp0_stage3_iter4;
wire    ap_block_state115_pp0_stage3_iter5;
wire    ap_block_state120_pp0_stage3_iter6;
wire    ap_block_state125_pp0_stage3_iter7;
wire    ap_block_state130_pp0_stage3_iter8;
wire    ap_block_state135_pp0_stage3_iter9;
wire    ap_block_state140_pp0_stage3_iter10;
wire    ap_block_state145_pp0_stage3_iter11;
wire    ap_block_state150_pp0_stage3_iter12;
wire    ap_block_state155_pp0_stage3_iter13;
wire    ap_block_state160_pp0_stage3_iter14;
wire    ap_block_state165_pp0_stage3_iter15;
wire    ap_block_state170_pp0_stage3_iter16;
wire    ap_block_state175_pp0_stage3_iter17;
wire    ap_block_state180_pp0_stage3_iter18;
wire    ap_block_state185_pp0_stage3_iter19;
wire    ap_block_state190_pp0_stage3_iter20;
wire    ap_block_pp0_stage3_11001;
reg   [0:0] tmp_5_reg_3123;
wire   [31:0] add_ln39_fu_2350_p2;
reg   [31:0] add_ln39_reg_3128;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state91_pp0_stage4_iter0;
wire    ap_block_state96_pp0_stage4_iter1;
wire    ap_block_state101_pp0_stage4_iter2;
wire    ap_block_state106_pp0_stage4_iter3;
wire    ap_block_state111_pp0_stage4_iter4;
wire    ap_block_state116_pp0_stage4_iter5;
wire    ap_block_state121_pp0_stage4_iter6;
wire    ap_block_state126_pp0_stage4_iter7;
wire    ap_block_state131_pp0_stage4_iter8;
wire    ap_block_state136_pp0_stage4_iter9;
wire    ap_block_state141_pp0_stage4_iter10;
wire    ap_block_state146_pp0_stage4_iter11;
wire    ap_block_state151_pp0_stage4_iter12;
wire    ap_block_state156_pp0_stage4_iter13;
wire    ap_block_state161_pp0_stage4_iter14;
wire    ap_block_state166_pp0_stage4_iter15;
wire    ap_block_state171_pp0_stage4_iter16;
wire    ap_block_state176_pp0_stage4_iter17;
wire    ap_block_state181_pp0_stage4_iter18;
wire    ap_block_state186_pp0_stage4_iter19;
wire    ap_block_state191_pp0_stage4_iter20;
wire    ap_block_pp0_stage4_11001;
wire   [0:0] and_ln42_7_fu_2420_p2;
reg   [0:0] and_ln42_7_reg_3133;
reg   [0:0] and_ln42_7_reg_3133_pp0_iter1_reg;
reg   [0:0] and_ln42_7_reg_3133_pp0_iter2_reg;
reg   [0:0] and_ln42_7_reg_3133_pp0_iter3_reg;
reg   [0:0] and_ln42_7_reg_3133_pp0_iter4_reg;
reg   [0:0] and_ln42_7_reg_3133_pp0_iter5_reg;
reg   [0:0] and_ln42_7_reg_3133_pp0_iter6_reg;
reg   [0:0] and_ln42_7_reg_3133_pp0_iter7_reg;
reg   [0:0] and_ln42_7_reg_3133_pp0_iter8_reg;
reg   [0:0] and_ln42_7_reg_3133_pp0_iter9_reg;
reg   [0:0] and_ln42_7_reg_3133_pp0_iter10_reg;
reg   [0:0] and_ln42_7_reg_3133_pp0_iter11_reg;
reg   [0:0] and_ln42_7_reg_3133_pp0_iter12_reg;
reg   [0:0] and_ln42_7_reg_3133_pp0_iter13_reg;
reg   [0:0] and_ln42_7_reg_3133_pp0_iter14_reg;
reg   [0:0] and_ln42_7_reg_3133_pp0_iter15_reg;
reg   [0:0] and_ln42_7_reg_3133_pp0_iter16_reg;
reg   [0:0] and_ln42_7_reg_3133_pp0_iter17_reg;
reg   [0:0] and_ln42_7_reg_3133_pp0_iter18_reg;
reg   [0:0] and_ln42_7_reg_3133_pp0_iter19_reg;
reg   [0:0] and_ln42_7_reg_3133_pp0_iter20_reg;
wire   [63:0] grp_fu_548_p2;
reg   [63:0] dx_reg_3137;
reg    ap_enable_reg_pp0_iter1;
reg   [63:0] dx_reg_3137_pp0_iter2_reg;
reg   [63:0] dx_reg_3137_pp0_iter3_reg;
reg   [63:0] dx_reg_3137_pp0_iter4_reg;
reg   [63:0] dx_reg_3137_pp0_iter5_reg;
reg   [63:0] dx_reg_3137_pp0_iter6_reg;
reg   [63:0] dx_reg_3137_pp0_iter7_reg;
reg   [63:0] dx_reg_3137_pp0_iter8_reg;
reg   [63:0] dx_reg_3137_pp0_iter9_reg;
reg   [63:0] dx_reg_3137_pp0_iter10_reg;
reg   [63:0] dx_reg_3137_pp0_iter11_reg;
reg   [63:0] dx_reg_3137_pp0_iter12_reg;
reg   [63:0] dx_reg_3137_pp0_iter13_reg;
reg   [63:0] dx_reg_3137_pp0_iter14_reg;
reg   [63:0] dx_reg_3137_pp0_iter15_reg;
reg   [63:0] dx_reg_3137_pp0_iter16_reg;
reg   [63:0] dx_reg_3137_pp0_iter17_reg;
wire   [63:0] grp_fu_552_p2;
reg   [63:0] dy_reg_3144;
reg   [63:0] dy_reg_3144_pp0_iter2_reg;
reg   [63:0] dy_reg_3144_pp0_iter3_reg;
reg   [63:0] dy_reg_3144_pp0_iter4_reg;
reg   [63:0] dy_reg_3144_pp0_iter5_reg;
reg   [63:0] dy_reg_3144_pp0_iter6_reg;
reg   [63:0] dy_reg_3144_pp0_iter7_reg;
reg   [63:0] dy_reg_3144_pp0_iter8_reg;
reg   [63:0] dy_reg_3144_pp0_iter9_reg;
reg   [63:0] dy_reg_3144_pp0_iter10_reg;
reg   [63:0] dy_reg_3144_pp0_iter11_reg;
reg   [63:0] dy_reg_3144_pp0_iter12_reg;
reg   [63:0] dy_reg_3144_pp0_iter13_reg;
reg   [63:0] dy_reg_3144_pp0_iter14_reg;
reg   [63:0] dy_reg_3144_pp0_iter15_reg;
reg   [63:0] dy_reg_3144_pp0_iter16_reg;
reg   [63:0] dy_reg_3144_pp0_iter17_reg;
wire   [63:0] grp_fu_556_p2;
reg   [63:0] dz_reg_3151;
reg   [63:0] dz_reg_3151_pp0_iter2_reg;
reg   [63:0] dz_reg_3151_pp0_iter3_reg;
reg   [63:0] dz_reg_3151_pp0_iter4_reg;
reg   [63:0] dz_reg_3151_pp0_iter5_reg;
reg   [63:0] dz_reg_3151_pp0_iter6_reg;
reg   [63:0] dz_reg_3151_pp0_iter7_reg;
reg   [63:0] dz_reg_3151_pp0_iter8_reg;
reg   [63:0] dz_reg_3151_pp0_iter9_reg;
reg   [63:0] dz_reg_3151_pp0_iter10_reg;
reg   [63:0] dz_reg_3151_pp0_iter11_reg;
reg   [63:0] dz_reg_3151_pp0_iter12_reg;
reg   [63:0] dz_reg_3151_pp0_iter13_reg;
reg   [63:0] dz_reg_3151_pp0_iter14_reg;
reg   [63:0] dz_reg_3151_pp0_iter15_reg;
reg   [63:0] dz_reg_3151_pp0_iter16_reg;
reg   [63:0] dz_reg_3151_pp0_iter17_reg;
wire   [63:0] grp_fu_567_p2;
reg   [63:0] mul_reg_3158;
reg    ap_enable_reg_pp0_iter2;
wire   [63:0] grp_fu_571_p2;
reg   [63:0] mul1_reg_3163;
wire   [63:0] grp_fu_575_p2;
reg   [63:0] mul2_reg_3168;
reg   [63:0] mul2_reg_3168_pp0_iter3_reg;
reg   [63:0] add_reg_3173;
reg    ap_enable_reg_pp0_iter3;
reg   [63:0] add1_reg_3178;
reg    ap_enable_reg_pp0_iter4;
wire   [63:0] grp_fu_580_p2;
reg   [63:0] r2inv_reg_3183;
reg   [63:0] r2inv_reg_3183_pp0_iter12_reg;
reg   [63:0] r2inv_reg_3183_pp0_iter13_reg;
reg   [63:0] r2inv_reg_3183_pp0_iter14_reg;
reg   [63:0] r2inv_reg_3183_pp0_iter15_reg;
reg   [63:0] r2inv_reg_3183_pp0_iter16_reg;
reg   [63:0] r2inv_reg_3183_pp0_iter17_reg;
reg   [63:0] mul3_reg_3190;
reg    ap_enable_reg_pp0_iter12;
reg   [63:0] r6inv_reg_3195;
reg    ap_enable_reg_pp0_iter13;
reg   [63:0] r6inv_reg_3195_pp0_iter14_reg;
reg   [63:0] r6inv_reg_3195_pp0_iter15_reg;
reg   [63:0] mul5_reg_3200;
reg    ap_enable_reg_pp0_iter14;
reg   [63:0] sub_reg_3205;
reg    ap_enable_reg_pp0_iter15;
reg   [63:0] potential_reg_3210;
reg    ap_enable_reg_pp0_iter17;
reg   [63:0] f_reg_3215;
reg    ap_enable_reg_pp0_iter18;
reg   [63:0] mul8_reg_3221;
reg    ap_enable_reg_pp0_iter19;
reg   [63:0] mul9_reg_3226;
reg   [63:0] mul4_reg_3231;
wire    ap_block_pp0_stage4_subdone;
reg    ap_condition_pp0_flush_enable;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter20;
reg    ap_condition_pp0_exit_iter20_state188;
reg    ap_enable_reg_pp0_iter21;
reg   [6:0] indvar_flatten163_reg_316;
reg   [2:0] b0_x_reg_327;
reg   [2:0] indvars_iv68_reg_339;
reg   [5:0] indvar_flatten56_reg_350;
reg   [2:0] b0_y_reg_362;
reg   [2:0] indvars_iv63_reg_374;
reg   [2:0] b0_z_reg_385;
reg   [2:0] indvars_iv59_reg_397;
reg   [191:0] indvar_flatten18_reg_409;
reg   [63:0] b1_x_reg_420;
reg   [127:0] indvar_flatten_reg_429;
reg   [63:0] b1_y_reg_441;
reg   [63:0] b1_z_reg_450;
reg   [31:0] p_idx_reg_459;
wire    ap_CS_fsm_state195;
reg   [31:0] ap_phi_mux_q_idx_phi_fu_474_p4;
wire    ap_block_pp0_stage0;
reg   [63:0] ap_phi_mux_sum_z_1_phi_fu_540_p4;
reg   [63:0] ap_phi_mux_sum_y_1_phi_fu_528_p4;
reg   [63:0] ap_phi_mux_sum_x_1_phi_fu_516_p4;
reg   [63:0] ap_phi_reg_pp0_iter21_sum_x_1_reg_512;
wire   [63:0] ap_phi_reg_pp0_iter0_sum_x_1_reg_512;
reg   [63:0] ap_phi_reg_pp0_iter1_sum_x_1_reg_512;
reg   [63:0] ap_phi_reg_pp0_iter2_sum_x_1_reg_512;
reg   [63:0] ap_phi_reg_pp0_iter3_sum_x_1_reg_512;
reg   [63:0] ap_phi_reg_pp0_iter4_sum_x_1_reg_512;
reg   [63:0] ap_phi_reg_pp0_iter5_sum_x_1_reg_512;
reg   [63:0] ap_phi_reg_pp0_iter6_sum_x_1_reg_512;
reg   [63:0] ap_phi_reg_pp0_iter7_sum_x_1_reg_512;
reg   [63:0] ap_phi_reg_pp0_iter8_sum_x_1_reg_512;
reg   [63:0] ap_phi_reg_pp0_iter9_sum_x_1_reg_512;
reg   [63:0] ap_phi_reg_pp0_iter10_sum_x_1_reg_512;
reg   [63:0] ap_phi_reg_pp0_iter11_sum_x_1_reg_512;
reg   [63:0] ap_phi_reg_pp0_iter12_sum_x_1_reg_512;
reg   [63:0] ap_phi_reg_pp0_iter13_sum_x_1_reg_512;
reg   [63:0] ap_phi_reg_pp0_iter14_sum_x_1_reg_512;
reg   [63:0] ap_phi_reg_pp0_iter15_sum_x_1_reg_512;
reg   [63:0] ap_phi_reg_pp0_iter16_sum_x_1_reg_512;
reg   [63:0] ap_phi_reg_pp0_iter17_sum_x_1_reg_512;
reg   [63:0] ap_phi_reg_pp0_iter18_sum_x_1_reg_512;
reg   [63:0] ap_phi_reg_pp0_iter19_sum_x_1_reg_512;
reg   [63:0] ap_phi_reg_pp0_iter20_sum_x_1_reg_512;
reg   [63:0] ap_phi_reg_pp0_iter21_sum_y_1_reg_524;
wire   [63:0] ap_phi_reg_pp0_iter0_sum_y_1_reg_524;
reg   [63:0] ap_phi_reg_pp0_iter1_sum_y_1_reg_524;
reg   [63:0] ap_phi_reg_pp0_iter2_sum_y_1_reg_524;
reg   [63:0] ap_phi_reg_pp0_iter3_sum_y_1_reg_524;
reg   [63:0] ap_phi_reg_pp0_iter4_sum_y_1_reg_524;
reg   [63:0] ap_phi_reg_pp0_iter5_sum_y_1_reg_524;
reg   [63:0] ap_phi_reg_pp0_iter6_sum_y_1_reg_524;
reg   [63:0] ap_phi_reg_pp0_iter7_sum_y_1_reg_524;
reg   [63:0] ap_phi_reg_pp0_iter8_sum_y_1_reg_524;
reg   [63:0] ap_phi_reg_pp0_iter9_sum_y_1_reg_524;
reg   [63:0] ap_phi_reg_pp0_iter10_sum_y_1_reg_524;
reg   [63:0] ap_phi_reg_pp0_iter11_sum_y_1_reg_524;
reg   [63:0] ap_phi_reg_pp0_iter12_sum_y_1_reg_524;
reg   [63:0] ap_phi_reg_pp0_iter13_sum_y_1_reg_524;
reg   [63:0] ap_phi_reg_pp0_iter14_sum_y_1_reg_524;
reg   [63:0] ap_phi_reg_pp0_iter15_sum_y_1_reg_524;
reg   [63:0] ap_phi_reg_pp0_iter16_sum_y_1_reg_524;
reg   [63:0] ap_phi_reg_pp0_iter17_sum_y_1_reg_524;
reg   [63:0] ap_phi_reg_pp0_iter18_sum_y_1_reg_524;
reg   [63:0] ap_phi_reg_pp0_iter19_sum_y_1_reg_524;
reg   [63:0] ap_phi_reg_pp0_iter20_sum_y_1_reg_524;
reg   [63:0] ap_phi_reg_pp0_iter21_sum_z_1_reg_536;
wire   [63:0] ap_phi_reg_pp0_iter0_sum_z_1_reg_536;
reg   [63:0] ap_phi_reg_pp0_iter1_sum_z_1_reg_536;
reg   [63:0] ap_phi_reg_pp0_iter2_sum_z_1_reg_536;
reg   [63:0] ap_phi_reg_pp0_iter3_sum_z_1_reg_536;
reg   [63:0] ap_phi_reg_pp0_iter4_sum_z_1_reg_536;
reg   [63:0] ap_phi_reg_pp0_iter5_sum_z_1_reg_536;
reg   [63:0] ap_phi_reg_pp0_iter6_sum_z_1_reg_536;
reg   [63:0] ap_phi_reg_pp0_iter7_sum_z_1_reg_536;
reg   [63:0] ap_phi_reg_pp0_iter8_sum_z_1_reg_536;
reg   [63:0] ap_phi_reg_pp0_iter9_sum_z_1_reg_536;
reg   [63:0] ap_phi_reg_pp0_iter10_sum_z_1_reg_536;
reg   [63:0] ap_phi_reg_pp0_iter11_sum_z_1_reg_536;
reg   [63:0] ap_phi_reg_pp0_iter12_sum_z_1_reg_536;
reg   [63:0] ap_phi_reg_pp0_iter13_sum_z_1_reg_536;
reg   [63:0] ap_phi_reg_pp0_iter14_sum_z_1_reg_536;
reg   [63:0] ap_phi_reg_pp0_iter15_sum_z_1_reg_536;
reg   [63:0] ap_phi_reg_pp0_iter16_sum_z_1_reg_536;
reg   [63:0] ap_phi_reg_pp0_iter17_sum_z_1_reg_536;
reg   [63:0] ap_phi_reg_pp0_iter18_sum_z_1_reg_536;
reg   [63:0] ap_phi_reg_pp0_iter19_sum_z_1_reg_536;
reg   [63:0] ap_phi_reg_pp0_iter20_sum_z_1_reg_536;
wire   [63:0] p_cast73_fu_1492_p1;
wire   [63:0] zext_ln31_fu_1670_p1;
wire   [63:0] zext_ln34_16_fu_2135_p1;
wire   [63:0] zext_ln35_3_fu_2143_p1;
wire   [63:0] zext_ln33_fu_2147_p1;
wire   [63:0] zext_ln36_3_fu_2161_p1;
wire   [63:0] zext_ln39_fu_2225_p1;
wire    ap_CS_fsm_state193;
wire   [191:0] zext_ln57_fu_2430_p1;
wire    ap_CS_fsm_state194;
wire   [191:0] zext_ln58_fu_2447_p1;
wire   [191:0] shl_ln2_fu_2456_p3;
reg   [63:0] grp_fu_548_p0;
reg   [63:0] grp_fu_548_p1;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage1;
reg   [63:0] grp_fu_552_p0;
reg   [63:0] grp_fu_552_p1;
reg   [63:0] grp_fu_556_p0;
reg   [63:0] grp_fu_556_p1;
reg   [63:0] grp_fu_567_p0;
reg   [63:0] grp_fu_567_p1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
reg   [63:0] grp_fu_571_p0;
reg   [63:0] grp_fu_571_p1;
reg   [63:0] grp_fu_575_p0;
reg   [63:0] grp_fu_575_p1;
reg   [63:0] grp_fu_585_p0;
reg   [63:0] grp_fu_585_p1;
wire   [51:0] grp_fu_609_p4;
wire   [51:0] grp_fu_625_p4;
wire   [0:0] empty_26_fu_651_p2;
wire   [1:0] trunc_ln22_fu_647_p1;
wire   [1:0] smax70_fu_657_p3;
wire   [1:0] empty_27_fu_673_p1;
wire   [2:0] empty_28_fu_681_p2;
wire   [2:0] b0_x_cast_cast_fu_677_p1;
wire   [0:0] cmp13_fu_687_p2;
wire   [2:0] empty_29_fu_693_p2;
wire   [13:0] shl_ln_fu_707_p3;
wire   [9:0] shl_ln34_1_fu_719_p3;
wire   [14:0] zext_ln34_fu_715_p1;
wire   [14:0] zext_ln34_1_fu_727_p1;
wire   [2:0] smax70_cast62_fu_669_p1;
wire   [2:0] p_add15_fu_699_p3;
wire   [0:0] empty_30_fu_737_p2;
wire   [2:0] smax8_fu_743_p3;
wire   [3:0] zext_ln23_fu_751_p1;
wire   [3:0] smax70_cast63_fu_665_p1;
wire   [0:0] empty_31_fu_765_p2;
wire   [1:0] trunc_ln23_fu_761_p1;
wire   [1:0] empty_32_fu_787_p1;
wire   [2:0] empty_33_fu_795_p2;
wire   [2:0] b0_y_cast_cast_fu_791_p1;
wire   [0:0] cmp28_fu_801_p2;
wire   [2:0] empty_34_fu_807_p2;
wire   [11:0] shl_ln34_2_fu_821_p3;
wire   [7:0] shl_ln34_3_fu_833_p3;
wire   [12:0] zext_ln34_2_fu_829_p1;
wire   [12:0] zext_ln34_3_fu_841_p1;
wire   [2:0] smax65_cast64_fu_783_p1;
wire   [2:0] p_add30_fu_813_p3;
wire   [0:0] empty_35_fu_851_p2;
wire   [2:0] smax4_fu_857_p3;
wire   [3:0] zext_ln24_fu_865_p1;
wire   [3:0] smax65_cast65_fu_779_p1;
wire   [2:0] add_ln22_1_fu_881_p2;
wire   [0:0] p_mid179_fu_905_p2;
wire   [1:0] trunc_ln22_1_fu_901_p1;
wire   [0:0] icmp_ln24_fu_933_p2;
wire   [0:0] xor_ln22_fu_927_p2;
wire   [2:0] select_ln22_1_fu_893_p3;
wire   [2:0] add_ln23_1_fu_953_p2;
wire   [0:0] p_mid1_fu_963_p2;
wire   [1:0] trunc_ln23_1_fu_959_p1;
wire   [2:0] add_ln22_fu_985_p2;
wire   [1:0] empty_37_fu_1011_p1;
wire   [2:0] p_mid181_fu_1019_p2;
wire   [2:0] b0_x_cast_cast_mid1_fu_1015_p1;
wire   [0:0] cmp13_mid1_fu_1025_p2;
wire   [2:0] p_mid183_fu_1031_p2;
wire   [13:0] shl_ln34_mid1_fu_1045_p3;
wire   [9:0] shl_ln34_1_mid1_fu_1057_p3;
wire   [14:0] zext_ln34_8_fu_1053_p1;
wire   [14:0] zext_ln34_9_fu_1065_p1;
wire   [14:0] sub_ln34_4_fu_1069_p2;
wire   [2:0] zext_ln22_2_fu_1008_p1;
wire   [2:0] p_add15_mid1_fu_1037_p3;
wire   [0:0] p_mid197_fu_1081_p2;
wire   [2:0] smax8_mid1_fu_1087_p3;
wire   [3:0] zext_ln23_1_fu_1095_p1;
wire   [3:0] zext_ln22_1_fu_1005_p1;
wire   [3:0] sub_ln23_1_fu_1099_p2;
wire   [2:0] select_ln22_fu_991_p3;
wire   [0:0] or_ln23_fu_1135_p2;
wire   [2:0] add_ln23_fu_1129_p2;
wire   [1:0] select_ln22_6_fu_1111_p3;
wire   [1:0] empty_39_fu_1174_p1;
wire   [2:0] p_mid136_fu_1182_p2;
wire   [2:0] b0_y_cast_cast_mid1_fu_1178_p1;
wire   [0:0] cmp28_mid1_fu_1188_p2;
wire   [2:0] p_mid138_fu_1194_p2;
wire   [11:0] shl_ln34_2_mid1_fu_1208_p3;
wire   [7:0] shl_ln34_3_mid1_fu_1220_p3;
wire   [12:0] zext_ln34_10_fu_1216_p1;
wire   [12:0] zext_ln34_11_fu_1228_p1;
wire   [12:0] sub_ln34_5_fu_1232_p2;
wire   [12:0] select_ln22_7_fu_1117_p3;
wire   [2:0] zext_ln23_4_fu_1165_p1;
wire   [2:0] p_add30_mid1_fu_1200_p3;
wire   [0:0] p_mid152_fu_1245_p2;
wire   [2:0] smax4_mid1_fu_1251_p3;
wire   [3:0] zext_ln24_1_fu_1259_p1;
wire   [3:0] zext_ln23_3_fu_1162_p1;
wire   [3:0] sub_ln24_1_fu_1263_p2;
wire   [3:0] select_ln22_8_fu_1123_p3;
wire   [0:0] empty_41_fu_1280_p2;
wire   [1:0] trunc_ln24_fu_1276_p1;
wire   [1:0] empty_42_fu_1302_p1;
wire   [2:0] empty_43_fu_1310_p2;
wire   [2:0] b0_z_cast_cast_fu_1306_p1;
wire   [0:0] cmp43_fu_1316_p2;
wire   [2:0] empty_44_fu_1322_p2;
wire   [9:0] shl_ln34_4_fu_1336_p3;
wire   [5:0] shl_ln34_5_fu_1348_p3;
wire   [10:0] zext_ln34_4_fu_1344_p1;
wire   [10:0] zext_ln34_5_fu_1356_p1;
wire   [10:0] sub_ln34_2_fu_1360_p2;
wire   [14:0] select_ln22_4_fu_1075_p3;
wire  signed [14:0] sext_ln26_fu_1366_p1;
wire   [2:0] smax_cast68_fu_1298_p1;
wire   [0:0] empty_45_fu_1376_p2;
wire   [2:0] smax5_fu_1382_p3;
wire   [3:0] zext_ln26_1_fu_1390_p1;
wire   [3:0] smax_cast69_fu_1294_p1;
wire  signed [63:0] sext_ln16_fu_1406_p1;
wire  signed [63:0] sext_ln16_1_fu_1413_p1;
wire   [63:0] grp_fu_1420_p0;
wire   [63:0] grp_fu_1420_p1;
wire  signed [63:0] sext_ln16_2_fu_1426_p1;
wire   [63:0] grp_fu_1436_p0;
wire   [127:0] grp_fu_1436_p1;
wire   [4:0] tmp_s_fu_1442_p3;
wire   [5:0] zext_ln22_fu_1449_p1;
wire   [5:0] select_ln23_2_cast_fu_1456_p1;
wire   [5:0] empty_38_fu_1459_p2;
wire   [7:0] tmp_9_fu_1465_p3;
wire   [62:0] zext_ln23_2_fu_1473_p1;
wire   [62:0] select_ln23_cast_fu_1483_p1;
wire   [62:0] empty_40_fu_1486_p2;
wire   [6:0] trunc_ln33_fu_1497_p1;
wire   [8:0] trunc_ln33_3_fu_1509_p1;
wire   [9:0] p_shl_cast_fu_1501_p3;
wire   [9:0] p_shl1_cast_fu_1513_p3;
wire   [0:0] icmp_ln28_1_fu_1572_p2;
wire   [63:0] add_ln26_fu_1547_p2;
wire   [63:0] select_ln16_1_fu_1565_p3;
wire   [5:0] add_ln23_2_fu_1617_p2;
wire   [63:0] add_ln27_fu_1630_p2;
wire   [60:0] tmp_10_fu_1641_p3;
wire   [60:0] trunc_ln31_fu_1648_p1;
wire   [62:0] tmp_27_cast_fu_1658_p3;
wire   [62:0] add_ln31_1_fu_1665_p2;
wire   [6:0] trunc_ln39_fu_1675_p1;
wire   [8:0] trunc_ln39_3_fu_1687_p1;
wire   [9:0] p_shl2_cast_fu_1679_p3;
wire   [9:0] p_shl3_cast_fu_1691_p3;
wire   [9:0] trunc_ln33_4_fu_1716_p1;
wire   [36:0] shl_ln34_6_fu_1725_p3;
wire   [34:0] shl_ln34_7_fu_1737_p3;
wire   [37:0] zext_ln34_6_fu_1733_p1;
wire   [37:0] zext_ln34_7_fu_1745_p1;
wire   [37:0] sub_ln34_3_fu_1749_p2;
wire  signed [38:0] sext_ln34_fu_1755_p1;
wire   [38:0] add_ln34_1_fu_1759_p2;
wire   [127:0] add_ln27_1_fu_1774_p2;
wire  signed [63:0] sext_ln34_2_fu_1787_p1;
wire   [63:0] grp_fu_1794_p0;
wire   [65:0] grp_fu_1794_p1;
wire   [63:0] grp_fu_1804_p0;
wire   [65:0] grp_fu_1804_p1;
wire   [63:0] grp_fu_1814_p0;
wire   [65:0] grp_fu_1814_p1;
wire   [63:0] grp_fu_1820_p0;
wire   [65:0] grp_fu_1820_p1;
wire  signed [63:0] sext_ln35_fu_1836_p1;
wire   [63:0] grp_fu_1843_p0;
wire   [65:0] grp_fu_1843_p1;
wire   [63:0] grp_fu_1853_p0;
wire   [65:0] grp_fu_1853_p1;
wire   [63:0] grp_fu_1863_p0;
wire   [65:0] grp_fu_1863_p1;
wire  signed [63:0] sext_ln36_fu_1869_p1;
wire   [63:0] grp_fu_1876_p0;
wire   [65:0] grp_fu_1876_p1;
wire   [63:0] grp_fu_1886_p0;
wire   [65:0] grp_fu_1886_p1;
wire   [63:0] grp_fu_1896_p0;
wire   [65:0] grp_fu_1896_p1;
wire   [75:0] grp_fu_1804_p2;
wire   [73:0] grp_fu_1814_p2;
wire   [128:0] grp_fu_1794_p2;
wire   [128:0] grp_fu_1820_p2;
wire   [4:0] grp_fu_1952_p1;
wire   [75:0] grp_fu_1853_p2;
wire   [73:0] grp_fu_1863_p2;
wire   [128:0] grp_fu_1843_p2;
wire   [75:0] grp_fu_1886_p2;
wire   [73:0] grp_fu_1896_p2;
wire   [128:0] grp_fu_1876_p2;
wire   [9:0] p_shl6_cast_fu_2037_p5;
wire   [9:0] p_shl7_cast_fu_2046_p5;
wire   [3:0] grp_fu_1952_p2;
wire   [3:0] trunc_ln34_fu_2061_p1;
wire   [9:0] add_ln34_3_fu_2055_p2;
wire   [9:0] zext_ln34_15_fu_2065_p1;
wire   [9:0] p_shl8_cast_fu_2075_p5;
wire   [9:0] p_shl9_cast_fu_2084_p5;
wire   [9:0] add_ln35_1_fu_2093_p2;
wire   [9:0] p_shl4_cast_fu_2105_p5;
wire   [9:0] p_shl5_cast_fu_2114_p5;
wire   [9:0] add_ln36_1_fu_2123_p2;
wire   [63:0] trunc_ln33_5_fu_2165_p1;
wire   [63:0] trunc_ln6_fu_2187_p4;
wire   [51:0] trunc_ln42_fu_2201_p1;
wire   [9:0] trunc_ln39_4_fu_2216_p1;
wire   [9:0] add_ln39_2_fu_2220_p2;
wire   [10:0] tmp_1_fu_2230_p4;
wire   [10:0] tmp_4_fu_2245_p4;
wire   [10:0] tmp_7_fu_2260_p4;
wire   [63:0] trunc_ln39_5_fu_2275_p1;
wire   [10:0] tmp_fu_2284_p4;
wire   [51:0] trunc_ln42_1_fu_2294_p1;
wire   [10:0] tmp_3_fu_2310_p4;
wire   [10:0] tmp_6_fu_2326_p4;
wire   [0:0] or_ln42_fu_2356_p2;
wire   [0:0] or_ln42_1_fu_2360_p2;
wire   [0:0] and_ln42_fu_2364_p2;
wire   [0:0] or_ln42_2_fu_2375_p2;
wire   [0:0] or_ln42_3_fu_2379_p2;
wire   [0:0] and_ln42_2_fu_2383_p2;
wire   [0:0] or_ln42_4_fu_2394_p2;
wire   [0:0] or_ln42_5_fu_2398_p2;
wire   [0:0] and_ln42_4_fu_2402_p2;
wire   [0:0] and_ln42_3_fu_2389_p2;
wire   [0:0] and_ln42_5_fu_2408_p2;
wire   [0:0] and_ln42_6_fu_2414_p2;
wire   [0:0] and_ln42_1_fu_2370_p2;
wire   [63:0] bitcast_ln57_fu_2426_p1;
wire   [63:0] bitcast_ln58_fu_2435_p1;
wire   [127:0] shl_ln1_fu_2439_p3;
wire   [63:0] bitcast_ln59_fu_2452_p1;
reg   [1:0] grp_fu_548_opcode;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage4_00001;
reg   [1:0] grp_fu_552_opcode;
reg   [1:0] grp_fu_556_opcode;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage3_00001;
reg    grp_fu_1952_ap_start;
wire    grp_fu_1952_ap_done;
reg   [93:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [127:0] grp_fu_1420_p00;
wire   [127:0] grp_fu_1420_p10;
wire   [191:0] grp_fu_1436_p00;
wire   [191:0] grp_fu_1436_p10;
wire   [75:0] grp_fu_1804_p00;
wire   [73:0] grp_fu_1814_p00;
wire   [128:0] grp_fu_1843_p00;
wire   [75:0] grp_fu_1853_p00;
wire   [73:0] grp_fu_1863_p00;
wire   [128:0] grp_fu_1876_p00;
wire   [75:0] grp_fu_1886_p00;
wire   [73:0] grp_fu_1896_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 94'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
end

md_BUS_A_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_BUS_A_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_BUS_A_DATA_WIDTH ))
BUS_A_s_axi_U(
    .AWVALID(s_axi_BUS_A_AWVALID),
    .AWREADY(s_axi_BUS_A_AWREADY),
    .AWADDR(s_axi_BUS_A_AWADDR),
    .WVALID(s_axi_BUS_A_WVALID),
    .WREADY(s_axi_BUS_A_WREADY),
    .WDATA(s_axi_BUS_A_WDATA),
    .WSTRB(s_axi_BUS_A_WSTRB),
    .ARVALID(s_axi_BUS_A_ARVALID),
    .ARREADY(s_axi_BUS_A_ARREADY),
    .ARADDR(s_axi_BUS_A_ARADDR),
    .RVALID(s_axi_BUS_A_RVALID),
    .RREADY(s_axi_BUS_A_RREADY),
    .RDATA(s_axi_BUS_A_RDATA),
    .RRESP(s_axi_BUS_A_RRESP),
    .BVALID(s_axi_BUS_A_BVALID),
    .BREADY(s_axi_BUS_A_BREADY),
    .BRESP(s_axi_BUS_A_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .n_points_address0(n_points_address0),
    .n_points_ce0(n_points_ce0),
    .n_points_q0(n_points_q0),
    .force_r_address0(force_r_address0),
    .force_r_ce0(force_r_ce0),
    .force_r_we0(force_r_we0),
    .force_r_d0(force_r_d0),
    .force_r_q0(force_r_q0),
    .position_address0(position_address0),
    .position_ce0(position_ce0),
    .position_q0(position_q0),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

md_dadddsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_548_p0),
    .din1(grp_fu_548_p1),
    .opcode(grp_fu_548_opcode),
    .ce(1'b1),
    .dout(grp_fu_548_p2)
);

md_dadddsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_5_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_552_p0),
    .din1(grp_fu_552_p1),
    .opcode(grp_fu_552_opcode),
    .ce(1'b1),
    .dout(grp_fu_552_p2)
);

md_dadddsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_5_full_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_556_p0),
    .din1(grp_fu_556_p1),
    .opcode(grp_fu_556_opcode),
    .ce(1'b1),
    .dout(grp_fu_556_p2)
);

md_dmul_64ns_64ns_64_6_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_6_max_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_567_p0),
    .din1(grp_fu_567_p1),
    .ce(1'b1),
    .dout(grp_fu_567_p2)
);

md_dmul_64ns_64ns_64_6_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_6_max_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_571_p0),
    .din1(grp_fu_571_p1),
    .ce(1'b1),
    .dout(grp_fu_571_p2)
);

md_dmul_64ns_64ns_64_6_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_6_max_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_575_p0),
    .din1(grp_fu_575_p1),
    .ce(1'b1),
    .dout(grp_fu_575_p2)
);

md_ddiv_64ns_64ns_64_31_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_31_no_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(64'd4607182418800017408),
    .din1(add1_reg_3178),
    .ce(1'b1),
    .dout(grp_fu_580_p2)
);

md_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_585_p0),
    .din1(grp_fu_585_p1),
    .ce(1'b1),
    .opcode(5'd1),
    .dout(grp_fu_585_p2)
);

md_mul_64ns_64ns_128_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 128 ))
mul_64ns_64ns_128_3_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1420_p0),
    .din1(grp_fu_1420_p1),
    .ce(1'b1),
    .dout(grp_fu_1420_p2)
);

md_mul_64ns_128ns_192_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 128 ),
    .dout_WIDTH( 192 ))
mul_64ns_128ns_192_3_1_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1436_p0),
    .din1(grp_fu_1436_p1),
    .ce(1'b1),
    .dout(grp_fu_1436_p2)
);

md_mul_64ns_66ns_129_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 129 ))
mul_64ns_66ns_129_3_1_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1794_p0),
    .din1(grp_fu_1794_p1),
    .ce(1'b1),
    .dout(grp_fu_1794_p2)
);

md_mul_64ns_66ns_76_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 76 ))
mul_64ns_66ns_76_3_1_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1804_p0),
    .din1(grp_fu_1804_p1),
    .ce(1'b1),
    .dout(grp_fu_1804_p2)
);

md_mul_64ns_66ns_74_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 74 ))
mul_64ns_66ns_74_3_1_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1814_p0),
    .din1(grp_fu_1814_p1),
    .ce(1'b1),
    .dout(grp_fu_1814_p2)
);

md_mul_64ns_66ns_129_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 129 ))
mul_64ns_66ns_129_3_1_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1820_p0),
    .din1(grp_fu_1820_p1),
    .ce(1'b1),
    .dout(grp_fu_1820_p2)
);

md_mul_64ns_66ns_129_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 129 ))
mul_64ns_66ns_129_3_1_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1843_p0),
    .din1(grp_fu_1843_p1),
    .ce(1'b1),
    .dout(grp_fu_1843_p2)
);

md_mul_64ns_66ns_76_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 76 ))
mul_64ns_66ns_76_3_1_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1853_p0),
    .din1(grp_fu_1853_p1),
    .ce(1'b1),
    .dout(grp_fu_1853_p2)
);

md_mul_64ns_66ns_74_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 74 ))
mul_64ns_66ns_74_3_1_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1863_p0),
    .din1(grp_fu_1863_p1),
    .ce(1'b1),
    .dout(grp_fu_1863_p2)
);

md_mul_64ns_66ns_129_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 129 ))
mul_64ns_66ns_129_3_1_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1876_p0),
    .din1(grp_fu_1876_p1),
    .ce(1'b1),
    .dout(grp_fu_1876_p2)
);

md_mul_64ns_66ns_76_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 76 ))
mul_64ns_66ns_76_3_1_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1886_p0),
    .din1(grp_fu_1886_p1),
    .ce(1'b1),
    .dout(grp_fu_1886_p2)
);

md_mul_64ns_66ns_74_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 74 ))
mul_64ns_66ns_74_3_1_U20(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1896_p0),
    .din1(grp_fu_1896_p1),
    .ce(1'b1),
    .dout(grp_fu_1896_p2)
);

md_urem_60ns_5ns_4_64_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 64 ),
    .din0_WIDTH( 60 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 4 ))
urem_60ns_5ns_4_64_seq_1_U21(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_1952_ap_start),
    .done(grp_fu_1952_ap_done),
    .din0(trunc_ln34_3_reg_2887),
    .din1(grp_fu_1952_p1),
    .ce(1'b1),
    .dout(grp_fu_1952_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state86)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end else if (((1'b1 == ap_CS_fsm_state86) | ((ap_enable_reg_pp0_iter19 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_condition_pp0_exit_iter20_state188)))) begin
            ap_enable_reg_pp0_iter20 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter20_state188) & (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter20 == 1'b0)) | ((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter19;
        end else if ((((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter20 == 1'b0)) | ((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end else if ((1'b1 == ap_CS_fsm_state86)) begin
            ap_enable_reg_pp0_iter21 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln38_reg_3036_pp0_iter20_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln42_7_reg_3133_pp0_iter19_reg) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter20 == 1'b1))) begin
        ap_phi_reg_pp0_iter20_sum_x_1_reg_512 <= sum_x_2_reg_502;
    end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_reg_pp0_iter20_sum_x_1_reg_512 <= ap_phi_reg_pp0_iter19_sum_x_1_reg_512;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln38_reg_3036_pp0_iter20_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln42_7_reg_3133_pp0_iter19_reg) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter20 == 1'b1))) begin
        ap_phi_reg_pp0_iter20_sum_y_1_reg_524 <= sum_y_2_reg_492;
    end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_reg_pp0_iter20_sum_y_1_reg_524 <= ap_phi_reg_pp0_iter19_sum_y_1_reg_524;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln38_reg_3036_pp0_iter20_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln42_7_reg_3133_pp0_iter19_reg) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter20 == 1'b1))) begin
        ap_phi_reg_pp0_iter20_sum_z_1_reg_536 <= sum_z_2_reg_482;
    end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_reg_pp0_iter20_sum_z_1_reg_536 <= ap_phi_reg_pp0_iter19_sum_z_1_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln26_fu_1542_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        b0_x_reg_327 <= select_ln22_2_reg_2548;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        b0_x_reg_327 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln26_fu_1542_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        b0_y_reg_362 <= select_ln23_2_reg_2570;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        b0_y_reg_362 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln26_fu_1542_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        b0_z_reg_385 <= add_ln24_fu_1607_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        b0_z_reg_385 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        b1_x_reg_420 <= select_ln26_reg_2714;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        b1_x_reg_420 <= select_ln22_3_cast_fu_1453_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        b1_y_reg_441 <= select_ln27_reg_2749;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        b1_y_reg_441 <= select_ln23_3_cast_fu_1477_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        b1_z_reg_450 <= add_ln28_fu_1769_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        b1_z_reg_450 <= smax_cast_fu_1527_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln26_fu_1542_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        indvar_flatten163_reg_316 <= add_ln22_2_reg_2465;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten163_reg_316 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        indvar_flatten18_reg_409 <= add_ln26_1_reg_2690;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        indvar_flatten18_reg_409 <= 192'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln26_fu_1542_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        indvar_flatten56_reg_350 <= select_ln23_7_fu_1623_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten56_reg_350 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        indvar_flatten_reg_429 <= select_ln27_1_fu_1780_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        indvar_flatten_reg_429 <= 128'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln26_fu_1542_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        indvars_iv59_reg_397 <= add_ln24_1_fu_1612_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvars_iv59_reg_397 <= 3'd7;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln26_fu_1542_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        indvars_iv63_reg_374 <= select_ln23_6_reg_2543;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvars_iv63_reg_374 <= 3'd7;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln26_fu_1542_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        indvars_iv68_reg_339 <= select_ln22_9_reg_2531;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvars_iv68_reg_339 <= 3'd7;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        p_idx_reg_459 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state195)) begin
        p_idx_reg_459 <= add_ln33_reg_2779;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln38_reg_3036 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_idx_reg_470 <= add_ln39_reg_3128;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        q_idx_reg_470 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln38_reg_3036_pp0_iter20_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        sum_x_2_reg_502 <= ap_phi_mux_sum_x_1_phi_fu_516_p4;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        sum_x_2_reg_502 <= sum_x_fu_2181_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln38_reg_3036_pp0_iter20_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        sum_y_2_reg_492 <= ap_phi_mux_sum_y_1_phi_fu_528_p4;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        sum_y_2_reg_492 <= sum_y_fu_2184_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln38_reg_3036_pp0_iter20_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        sum_z_2_reg_482 <= ap_phi_mux_sum_z_1_phi_fu_540_p4;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        sum_z_2_reg_482 <= sum_z_fu_2197_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln38_reg_3036_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'd0 == and_ln42_7_reg_3133_pp0_iter3_reg) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add1_reg_3178 <= grp_fu_552_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln22_2_reg_2465 <= add_ln22_2_fu_641_p2;
        smax65_reg_2480 <= smax65_fu_771_p3;
        sub_ln23_reg_2475 <= sub_ln23_fu_755_p2;
        sub_ln24_reg_2490 <= sub_ln24_fu_869_p2;
        sub_ln34_1_reg_2485[12 : 6] <= sub_ln34_1_fu_845_p2[12 : 6];
        sub_ln34_reg_2470[14 : 8] <= sub_ln34_fu_731_p2[14 : 8];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln26_1_reg_2690 <= add_ln26_1_fu_1536_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln31_reg_2754 <= add_ln31_fu_1652_p2;
        select_ln27_reg_2749 <= select_ln27_fu_1635_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln33_1_reg_2663[9 : 1] <= add_ln33_1_fu_1521_p2[9 : 1];
        mul_ln16_1_reg_2685 <= grp_fu_1436_p2;
        n_points_addr_reg_2658 <= p_cast73_fu_1492_p1;
        select_ln23_3_cast_reg_2647[1 : 0] <= select_ln23_3_cast_fu_1477_p1[1 : 0];
        select_ln23_4_cast_reg_2653[38 : 6] <= select_ln23_4_cast_fu_1480_p1[38 : 6];
        sext_ln34_1_reg_2680[38 : 4] <= sext_ln34_1_fu_1533_p1[38 : 4];
        smax_cast_reg_2668[1 : 0] <= smax_cast_fu_1527_p1[1 : 0];
        zext_ln26_reg_2675[2 : 0] <= zext_ln26_fu_1530_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_1711_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        add_ln33_2_reg_2787 <= add_ln33_2_fu_1720_p2;
        add_ln34_2_reg_2792[38 : 3] <= add_ln34_2_fu_1764_p2[38 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add_ln33_reg_2779 <= add_ln33_fu_1705_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        add_ln34_4_reg_2936 <= add_ln34_4_fu_2069_p2;
        add_ln35_2_reg_2941 <= add_ln35_2_fu_2099_p2;
        add_ln36_2_reg_2946 <= add_ln36_2_fu_2129_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln34_reg_2601[14 : 4] <= add_ln34_fu_1370_p2[14 : 4];
        icmp_ln28_reg_2611 <= icmp_ln28_fu_1400_p2;
        p_add45_reg_2596 <= p_add45_fu_1328_p3;
        select_ln22_2_reg_2548 <= select_ln22_2_fu_998_p3;
        select_ln22_5_reg_2554 <= select_ln22_5_fu_1105_p3;
        select_ln23_1_reg_2565 <= select_ln23_1_fu_1147_p3;
        select_ln23_2_reg_2570 <= select_ln23_2_fu_1155_p3;
        select_ln23_3_reg_2576 <= select_ln23_3_fu_1168_p3;
        select_ln23_4_reg_2581[12 : 6] <= select_ln23_4_fu_1238_p3[12 : 6];
        select_ln23_5_reg_2586 <= select_ln23_5_fu_1269_p3;
        select_ln23_reg_2559 <= select_ln23_fu_1139_p3;
        smax_reg_2591 <= smax_fu_1286_p3;
        sub_ln26_reg_2606 <= sub_ln26_fu_1394_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        add_ln35_reg_2825[38 : 3] <= add_ln35_fu_1826_p2[38 : 3];
        add_ln36_reg_2830[38 : 3] <= add_ln36_fu_1831_p2[38 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln39_1_reg_2764[9 : 1] <= add_ln39_1_fu_1699_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln39_reg_3128 <= add_ln39_fu_2350_p2;
        ap_phi_reg_pp0_iter1_sum_x_1_reg_512 <= ap_phi_reg_pp0_iter0_sum_x_1_reg_512;
        ap_phi_reg_pp0_iter1_sum_y_1_reg_524 <= ap_phi_reg_pp0_iter0_sum_y_1_reg_524;
        ap_phi_reg_pp0_iter1_sum_z_1_reg_536 <= ap_phi_reg_pp0_iter0_sum_z_1_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln38_reg_3036_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'd0 == and_ln42_7_reg_3133_pp0_iter2_reg) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_reg_3173 <= grp_fu_548_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_fu_875_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        and_ln22_reg_2522 <= and_ln22_fu_939_p2;
        icmp_ln23_reg_2498 <= icmp_ln23_fu_887_p2;
        select_ln22_3_reg_2517 <= select_ln22_3_fu_919_p3;
        select_ln22_9_reg_2531 <= select_ln22_9_fu_945_p3;
        select_ln23_6_reg_2543 <= select_ln23_6_fu_977_p3;
        smax65_mid1_reg_2536 <= smax65_mid1_fu_969_p3;
        smax70_mid1_reg_2511 <= smax70_mid1_fu_911_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln38_reg_3036 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln42_7_reg_3133 <= and_ln42_7_fu_2420_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln42_7_reg_3133_pp0_iter10_reg <= and_ln42_7_reg_3133_pp0_iter9_reg;
        and_ln42_7_reg_3133_pp0_iter11_reg <= and_ln42_7_reg_3133_pp0_iter10_reg;
        and_ln42_7_reg_3133_pp0_iter12_reg <= and_ln42_7_reg_3133_pp0_iter11_reg;
        and_ln42_7_reg_3133_pp0_iter13_reg <= and_ln42_7_reg_3133_pp0_iter12_reg;
        and_ln42_7_reg_3133_pp0_iter14_reg <= and_ln42_7_reg_3133_pp0_iter13_reg;
        and_ln42_7_reg_3133_pp0_iter15_reg <= and_ln42_7_reg_3133_pp0_iter14_reg;
        and_ln42_7_reg_3133_pp0_iter16_reg <= and_ln42_7_reg_3133_pp0_iter15_reg;
        and_ln42_7_reg_3133_pp0_iter17_reg <= and_ln42_7_reg_3133_pp0_iter16_reg;
        and_ln42_7_reg_3133_pp0_iter18_reg <= and_ln42_7_reg_3133_pp0_iter17_reg;
        and_ln42_7_reg_3133_pp0_iter19_reg <= and_ln42_7_reg_3133_pp0_iter18_reg;
        and_ln42_7_reg_3133_pp0_iter1_reg <= and_ln42_7_reg_3133;
        and_ln42_7_reg_3133_pp0_iter20_reg <= and_ln42_7_reg_3133_pp0_iter19_reg;
        and_ln42_7_reg_3133_pp0_iter2_reg <= and_ln42_7_reg_3133_pp0_iter1_reg;
        and_ln42_7_reg_3133_pp0_iter3_reg <= and_ln42_7_reg_3133_pp0_iter2_reg;
        and_ln42_7_reg_3133_pp0_iter4_reg <= and_ln42_7_reg_3133_pp0_iter3_reg;
        and_ln42_7_reg_3133_pp0_iter5_reg <= and_ln42_7_reg_3133_pp0_iter4_reg;
        and_ln42_7_reg_3133_pp0_iter6_reg <= and_ln42_7_reg_3133_pp0_iter5_reg;
        and_ln42_7_reg_3133_pp0_iter7_reg <= and_ln42_7_reg_3133_pp0_iter6_reg;
        and_ln42_7_reg_3133_pp0_iter8_reg <= and_ln42_7_reg_3133_pp0_iter7_reg;
        and_ln42_7_reg_3133_pp0_iter9_reg <= and_ln42_7_reg_3133_pp0_iter8_reg;
        mul2_reg_3168_pp0_iter3_reg <= mul2_reg_3168;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        ap_phi_reg_pp0_iter10_sum_x_1_reg_512 <= ap_phi_reg_pp0_iter9_sum_x_1_reg_512;
        ap_phi_reg_pp0_iter10_sum_y_1_reg_524 <= ap_phi_reg_pp0_iter9_sum_y_1_reg_524;
        ap_phi_reg_pp0_iter10_sum_z_1_reg_536 <= ap_phi_reg_pp0_iter9_sum_z_1_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        ap_phi_reg_pp0_iter11_sum_x_1_reg_512 <= ap_phi_reg_pp0_iter10_sum_x_1_reg_512;
        ap_phi_reg_pp0_iter11_sum_y_1_reg_524 <= ap_phi_reg_pp0_iter10_sum_y_1_reg_524;
        ap_phi_reg_pp0_iter11_sum_z_1_reg_536 <= ap_phi_reg_pp0_iter10_sum_z_1_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        ap_phi_reg_pp0_iter12_sum_x_1_reg_512 <= ap_phi_reg_pp0_iter11_sum_x_1_reg_512;
        ap_phi_reg_pp0_iter12_sum_y_1_reg_524 <= ap_phi_reg_pp0_iter11_sum_y_1_reg_524;
        ap_phi_reg_pp0_iter12_sum_z_1_reg_536 <= ap_phi_reg_pp0_iter11_sum_z_1_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_reg_pp0_iter13_sum_x_1_reg_512 <= ap_phi_reg_pp0_iter12_sum_x_1_reg_512;
        ap_phi_reg_pp0_iter13_sum_y_1_reg_524 <= ap_phi_reg_pp0_iter12_sum_y_1_reg_524;
        ap_phi_reg_pp0_iter13_sum_z_1_reg_536 <= ap_phi_reg_pp0_iter12_sum_z_1_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_reg_pp0_iter14_sum_x_1_reg_512 <= ap_phi_reg_pp0_iter13_sum_x_1_reg_512;
        ap_phi_reg_pp0_iter14_sum_y_1_reg_524 <= ap_phi_reg_pp0_iter13_sum_y_1_reg_524;
        ap_phi_reg_pp0_iter14_sum_z_1_reg_536 <= ap_phi_reg_pp0_iter13_sum_z_1_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_reg_pp0_iter15_sum_x_1_reg_512 <= ap_phi_reg_pp0_iter14_sum_x_1_reg_512;
        ap_phi_reg_pp0_iter15_sum_y_1_reg_524 <= ap_phi_reg_pp0_iter14_sum_y_1_reg_524;
        ap_phi_reg_pp0_iter15_sum_z_1_reg_536 <= ap_phi_reg_pp0_iter14_sum_z_1_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_reg_pp0_iter16_sum_x_1_reg_512 <= ap_phi_reg_pp0_iter15_sum_x_1_reg_512;
        ap_phi_reg_pp0_iter16_sum_y_1_reg_524 <= ap_phi_reg_pp0_iter15_sum_y_1_reg_524;
        ap_phi_reg_pp0_iter16_sum_z_1_reg_536 <= ap_phi_reg_pp0_iter15_sum_z_1_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        ap_phi_reg_pp0_iter17_sum_x_1_reg_512 <= ap_phi_reg_pp0_iter16_sum_x_1_reg_512;
        ap_phi_reg_pp0_iter17_sum_y_1_reg_524 <= ap_phi_reg_pp0_iter16_sum_y_1_reg_524;
        ap_phi_reg_pp0_iter17_sum_z_1_reg_536 <= ap_phi_reg_pp0_iter16_sum_z_1_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_reg_pp0_iter18_sum_x_1_reg_512 <= ap_phi_reg_pp0_iter17_sum_x_1_reg_512;
        ap_phi_reg_pp0_iter18_sum_y_1_reg_524 <= ap_phi_reg_pp0_iter17_sum_y_1_reg_524;
        ap_phi_reg_pp0_iter18_sum_z_1_reg_536 <= ap_phi_reg_pp0_iter17_sum_z_1_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_reg_pp0_iter19_sum_x_1_reg_512 <= ap_phi_reg_pp0_iter18_sum_x_1_reg_512;
        ap_phi_reg_pp0_iter19_sum_y_1_reg_524 <= ap_phi_reg_pp0_iter18_sum_y_1_reg_524;
        ap_phi_reg_pp0_iter19_sum_z_1_reg_536 <= ap_phi_reg_pp0_iter18_sum_z_1_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter20 == 1'b1))) begin
        ap_phi_reg_pp0_iter21_sum_x_1_reg_512 <= ap_phi_reg_pp0_iter20_sum_x_1_reg_512;
        ap_phi_reg_pp0_iter21_sum_y_1_reg_524 <= ap_phi_reg_pp0_iter20_sum_y_1_reg_524;
        ap_phi_reg_pp0_iter21_sum_z_1_reg_536 <= ap_phi_reg_pp0_iter20_sum_z_1_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_reg_pp0_iter2_sum_x_1_reg_512 <= ap_phi_reg_pp0_iter1_sum_x_1_reg_512;
        ap_phi_reg_pp0_iter2_sum_y_1_reg_524 <= ap_phi_reg_pp0_iter1_sum_y_1_reg_524;
        ap_phi_reg_pp0_iter2_sum_z_1_reg_536 <= ap_phi_reg_pp0_iter1_sum_z_1_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_reg_pp0_iter3_sum_x_1_reg_512 <= ap_phi_reg_pp0_iter2_sum_x_1_reg_512;
        ap_phi_reg_pp0_iter3_sum_y_1_reg_524 <= ap_phi_reg_pp0_iter2_sum_y_1_reg_524;
        ap_phi_reg_pp0_iter3_sum_z_1_reg_536 <= ap_phi_reg_pp0_iter2_sum_z_1_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_reg_pp0_iter4_sum_x_1_reg_512 <= ap_phi_reg_pp0_iter3_sum_x_1_reg_512;
        ap_phi_reg_pp0_iter4_sum_y_1_reg_524 <= ap_phi_reg_pp0_iter3_sum_y_1_reg_524;
        ap_phi_reg_pp0_iter4_sum_z_1_reg_536 <= ap_phi_reg_pp0_iter3_sum_z_1_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_reg_pp0_iter5_sum_x_1_reg_512 <= ap_phi_reg_pp0_iter4_sum_x_1_reg_512;
        ap_phi_reg_pp0_iter5_sum_y_1_reg_524 <= ap_phi_reg_pp0_iter4_sum_y_1_reg_524;
        ap_phi_reg_pp0_iter5_sum_z_1_reg_536 <= ap_phi_reg_pp0_iter4_sum_z_1_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_reg_pp0_iter6_sum_x_1_reg_512 <= ap_phi_reg_pp0_iter5_sum_x_1_reg_512;
        ap_phi_reg_pp0_iter6_sum_y_1_reg_524 <= ap_phi_reg_pp0_iter5_sum_y_1_reg_524;
        ap_phi_reg_pp0_iter6_sum_z_1_reg_536 <= ap_phi_reg_pp0_iter5_sum_z_1_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_reg_pp0_iter7_sum_x_1_reg_512 <= ap_phi_reg_pp0_iter6_sum_x_1_reg_512;
        ap_phi_reg_pp0_iter7_sum_y_1_reg_524 <= ap_phi_reg_pp0_iter6_sum_y_1_reg_524;
        ap_phi_reg_pp0_iter7_sum_z_1_reg_536 <= ap_phi_reg_pp0_iter6_sum_z_1_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        ap_phi_reg_pp0_iter8_sum_x_1_reg_512 <= ap_phi_reg_pp0_iter7_sum_x_1_reg_512;
        ap_phi_reg_pp0_iter8_sum_y_1_reg_524 <= ap_phi_reg_pp0_iter7_sum_y_1_reg_524;
        ap_phi_reg_pp0_iter8_sum_z_1_reg_536 <= ap_phi_reg_pp0_iter7_sum_z_1_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        ap_phi_reg_pp0_iter9_sum_x_1_reg_512 <= ap_phi_reg_pp0_iter8_sum_x_1_reg_512;
        ap_phi_reg_pp0_iter9_sum_y_1_reg_524 <= ap_phi_reg_pp0_iter8_sum_y_1_reg_524;
        ap_phi_reg_pp0_iter9_sum_z_1_reg_536 <= ap_phi_reg_pp0_iter8_sum_z_1_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln38_reg_3036_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'd0 == and_ln42_7_reg_3133) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        dx_reg_3137 <= grp_fu_548_p2;
        dy_reg_3144 <= grp_fu_552_p2;
        dz_reg_3151 <= grp_fu_556_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        dx_reg_3137_pp0_iter10_reg <= dx_reg_3137_pp0_iter9_reg;
        dx_reg_3137_pp0_iter11_reg <= dx_reg_3137_pp0_iter10_reg;
        dx_reg_3137_pp0_iter12_reg <= dx_reg_3137_pp0_iter11_reg;
        dx_reg_3137_pp0_iter13_reg <= dx_reg_3137_pp0_iter12_reg;
        dx_reg_3137_pp0_iter14_reg <= dx_reg_3137_pp0_iter13_reg;
        dx_reg_3137_pp0_iter15_reg <= dx_reg_3137_pp0_iter14_reg;
        dx_reg_3137_pp0_iter16_reg <= dx_reg_3137_pp0_iter15_reg;
        dx_reg_3137_pp0_iter17_reg <= dx_reg_3137_pp0_iter16_reg;
        dx_reg_3137_pp0_iter2_reg <= dx_reg_3137;
        dx_reg_3137_pp0_iter3_reg <= dx_reg_3137_pp0_iter2_reg;
        dx_reg_3137_pp0_iter4_reg <= dx_reg_3137_pp0_iter3_reg;
        dx_reg_3137_pp0_iter5_reg <= dx_reg_3137_pp0_iter4_reg;
        dx_reg_3137_pp0_iter6_reg <= dx_reg_3137_pp0_iter5_reg;
        dx_reg_3137_pp0_iter7_reg <= dx_reg_3137_pp0_iter6_reg;
        dx_reg_3137_pp0_iter8_reg <= dx_reg_3137_pp0_iter7_reg;
        dx_reg_3137_pp0_iter9_reg <= dx_reg_3137_pp0_iter8_reg;
        dy_reg_3144_pp0_iter10_reg <= dy_reg_3144_pp0_iter9_reg;
        dy_reg_3144_pp0_iter11_reg <= dy_reg_3144_pp0_iter10_reg;
        dy_reg_3144_pp0_iter12_reg <= dy_reg_3144_pp0_iter11_reg;
        dy_reg_3144_pp0_iter13_reg <= dy_reg_3144_pp0_iter12_reg;
        dy_reg_3144_pp0_iter14_reg <= dy_reg_3144_pp0_iter13_reg;
        dy_reg_3144_pp0_iter15_reg <= dy_reg_3144_pp0_iter14_reg;
        dy_reg_3144_pp0_iter16_reg <= dy_reg_3144_pp0_iter15_reg;
        dy_reg_3144_pp0_iter17_reg <= dy_reg_3144_pp0_iter16_reg;
        dy_reg_3144_pp0_iter2_reg <= dy_reg_3144;
        dy_reg_3144_pp0_iter3_reg <= dy_reg_3144_pp0_iter2_reg;
        dy_reg_3144_pp0_iter4_reg <= dy_reg_3144_pp0_iter3_reg;
        dy_reg_3144_pp0_iter5_reg <= dy_reg_3144_pp0_iter4_reg;
        dy_reg_3144_pp0_iter6_reg <= dy_reg_3144_pp0_iter5_reg;
        dy_reg_3144_pp0_iter7_reg <= dy_reg_3144_pp0_iter6_reg;
        dy_reg_3144_pp0_iter8_reg <= dy_reg_3144_pp0_iter7_reg;
        dy_reg_3144_pp0_iter9_reg <= dy_reg_3144_pp0_iter8_reg;
        dz_reg_3151_pp0_iter10_reg <= dz_reg_3151_pp0_iter9_reg;
        dz_reg_3151_pp0_iter11_reg <= dz_reg_3151_pp0_iter10_reg;
        dz_reg_3151_pp0_iter12_reg <= dz_reg_3151_pp0_iter11_reg;
        dz_reg_3151_pp0_iter13_reg <= dz_reg_3151_pp0_iter12_reg;
        dz_reg_3151_pp0_iter14_reg <= dz_reg_3151_pp0_iter13_reg;
        dz_reg_3151_pp0_iter15_reg <= dz_reg_3151_pp0_iter14_reg;
        dz_reg_3151_pp0_iter16_reg <= dz_reg_3151_pp0_iter15_reg;
        dz_reg_3151_pp0_iter17_reg <= dz_reg_3151_pp0_iter16_reg;
        dz_reg_3151_pp0_iter2_reg <= dz_reg_3151;
        dz_reg_3151_pp0_iter3_reg <= dz_reg_3151_pp0_iter2_reg;
        dz_reg_3151_pp0_iter4_reg <= dz_reg_3151_pp0_iter3_reg;
        dz_reg_3151_pp0_iter5_reg <= dz_reg_3151_pp0_iter4_reg;
        dz_reg_3151_pp0_iter6_reg <= dz_reg_3151_pp0_iter5_reg;
        dz_reg_3151_pp0_iter7_reg <= dz_reg_3151_pp0_iter6_reg;
        dz_reg_3151_pp0_iter8_reg <= dz_reg_3151_pp0_iter7_reg;
        dz_reg_3151_pp0_iter9_reg <= dz_reg_3151_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (icmp_ln38_reg_3036_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'd0 == and_ln42_7_reg_3133_pp0_iter17_reg) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        f_reg_3215 <= grp_fu_571_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        force_addr_1_reg_2961 <= zext_ln35_3_fu_2143_p1;
        trunc_ln34_4_reg_2956 <= trunc_ln34_4_fu_2139_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        force_addr_2_reg_2976 <= zext_ln36_3_fu_2161_p1;
        trunc_ln5_reg_2971 <= {{force_r_q0[127:64]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        force_addr_reg_2951 <= zext_ln34_16_fu_2135_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln26_fu_1542_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        icmp_ln27_reg_2698 <= icmp_ln27_fu_1553_p2;
        select_ln16_2_reg_2709 <= select_ln16_2_fu_1577_p3;
        select_ln16_3_reg_2724 <= select_ln16_3_fu_1596_p3;
        select_ln16_reg_2703 <= select_ln16_fu_1558_p3;
        select_ln26_reg_2714 <= select_ln26_fu_1584_p3;
        trunc_ln27_1_reg_2729 <= trunc_ln27_1_fu_1603_p1;
        trunc_ln27_reg_2719 <= trunc_ln27_fu_1592_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln38_reg_3036 <= icmp_ln38_fu_2211_p2;
        icmp_ln38_reg_3036_pp0_iter10_reg <= icmp_ln38_reg_3036_pp0_iter9_reg;
        icmp_ln38_reg_3036_pp0_iter11_reg <= icmp_ln38_reg_3036_pp0_iter10_reg;
        icmp_ln38_reg_3036_pp0_iter12_reg <= icmp_ln38_reg_3036_pp0_iter11_reg;
        icmp_ln38_reg_3036_pp0_iter13_reg <= icmp_ln38_reg_3036_pp0_iter12_reg;
        icmp_ln38_reg_3036_pp0_iter14_reg <= icmp_ln38_reg_3036_pp0_iter13_reg;
        icmp_ln38_reg_3036_pp0_iter15_reg <= icmp_ln38_reg_3036_pp0_iter14_reg;
        icmp_ln38_reg_3036_pp0_iter16_reg <= icmp_ln38_reg_3036_pp0_iter15_reg;
        icmp_ln38_reg_3036_pp0_iter17_reg <= icmp_ln38_reg_3036_pp0_iter16_reg;
        icmp_ln38_reg_3036_pp0_iter18_reg <= icmp_ln38_reg_3036_pp0_iter17_reg;
        icmp_ln38_reg_3036_pp0_iter19_reg <= icmp_ln38_reg_3036_pp0_iter18_reg;
        icmp_ln38_reg_3036_pp0_iter1_reg <= icmp_ln38_reg_3036;
        icmp_ln38_reg_3036_pp0_iter20_reg <= icmp_ln38_reg_3036_pp0_iter19_reg;
        icmp_ln38_reg_3036_pp0_iter2_reg <= icmp_ln38_reg_3036_pp0_iter1_reg;
        icmp_ln38_reg_3036_pp0_iter3_reg <= icmp_ln38_reg_3036_pp0_iter2_reg;
        icmp_ln38_reg_3036_pp0_iter4_reg <= icmp_ln38_reg_3036_pp0_iter3_reg;
        icmp_ln38_reg_3036_pp0_iter5_reg <= icmp_ln38_reg_3036_pp0_iter4_reg;
        icmp_ln38_reg_3036_pp0_iter6_reg <= icmp_ln38_reg_3036_pp0_iter5_reg;
        icmp_ln38_reg_3036_pp0_iter7_reg <= icmp_ln38_reg_3036_pp0_iter6_reg;
        icmp_ln38_reg_3036_pp0_iter8_reg <= icmp_ln38_reg_3036_pp0_iter7_reg;
        icmp_ln38_reg_3036_pp0_iter9_reg <= icmp_ln38_reg_3036_pp0_iter8_reg;
        r2inv_reg_3183_pp0_iter12_reg <= r2inv_reg_3183;
        r2inv_reg_3183_pp0_iter13_reg <= r2inv_reg_3183_pp0_iter12_reg;
        r2inv_reg_3183_pp0_iter14_reg <= r2inv_reg_3183_pp0_iter13_reg;
        r2inv_reg_3183_pp0_iter15_reg <= r2inv_reg_3183_pp0_iter14_reg;
        r2inv_reg_3183_pp0_iter16_reg <= r2inv_reg_3183_pp0_iter15_reg;
        r2inv_reg_3183_pp0_iter17_reg <= r2inv_reg_3183_pp0_iter16_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln38_fu_2211_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln42_10_reg_3055 <= icmp_ln42_10_fu_2269_p2;
        icmp_ln42_2_reg_3045 <= icmp_ln42_2_fu_2239_p2;
        icmp_ln42_6_reg_3050 <= icmp_ln42_6_fu_2254_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        icmp_ln42_11_reg_3031 <= grp_fu_635_p2;
        icmp_ln42_3_reg_3021 <= icmp_ln42_3_fu_2205_p2;
        icmp_ln42_7_reg_3026 <= grp_fu_619_p2;
        p_x_reg_2988 <= p_x_fu_2169_p1;
        p_y_reg_2994 <= p_y_fu_2173_p1;
        p_z_reg_3000 <= p_z_fu_2177_p1;
        position_load_reg_2981 <= position_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln38_reg_3036 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln42_1_reg_3081 <= icmp_ln42_1_fu_2304_p2;
        icmp_ln42_4_reg_3086 <= icmp_ln42_4_fu_2320_p2;
        icmp_ln42_8_reg_3096 <= icmp_ln42_8_fu_2336_p2;
        icmp_ln42_reg_3076 <= icmp_ln42_fu_2298_p2;
        q_x_reg_3060 <= q_x_fu_2279_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln38_reg_3036 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln42_5_reg_3091 <= grp_fu_619_p2;
        icmp_ln42_9_reg_3101 <= grp_fu_635_p2;
        trunc_ln39_1_reg_3066 <= {{position_q0[127:64]}};
        trunc_ln39_2_reg_3071 <= {{position_q0[191:128]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln38_reg_3036_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'd0 == and_ln42_7_reg_3133_pp0_iter1_reg) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul1_reg_3163 <= grp_fu_571_p2;
        mul2_reg_3168 <= grp_fu_575_p2;
        mul_reg_3158 <= grp_fu_567_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (icmp_ln38_reg_3036_pp0_iter12_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'd0 == and_ln42_7_reg_3133_pp0_iter11_reg) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul3_reg_3190 <= grp_fu_567_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (icmp_ln38_reg_3036_pp0_iter19_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'd0 == and_ln42_7_reg_3133_pp0_iter18_reg) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul4_reg_3231 <= grp_fu_571_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (icmp_ln38_reg_3036_pp0_iter14_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'd0 == and_ln42_7_reg_3133_pp0_iter13_reg) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul5_reg_3200 <= grp_fu_567_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (icmp_ln38_reg_3036_pp0_iter19_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'd0 == and_ln42_7_reg_3133_pp0_iter18_reg) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul8_reg_3221 <= grp_fu_571_p2;
        mul9_reg_3226 <= grp_fu_575_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        mul_ln16_reg_2626 <= grp_fu_1420_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        n_points_load_reg_2774 <= n_points_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (icmp_ln38_reg_3036_pp0_iter16_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln42_7_reg_3133_pp0_iter16_reg) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        potential_reg_3210 <= grp_fu_567_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        q_idx_range_reg_2769 <= n_points_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln38_reg_3036 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        q_y_reg_3106 <= q_y_fu_2342_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln38_reg_3036 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        q_z_reg_3117 <= q_z_fu_2346_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln38_reg_3036_pp0_iter10_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln42_7_reg_3133_pp0_iter10_reg) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        r2inv_reg_3183 <= grp_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (icmp_ln38_reg_3036_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'd0 == and_ln42_7_reg_3133_pp0_iter12_reg) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        r6inv_reg_3195 <= grp_fu_567_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        r6inv_reg_3195_pp0_iter14_reg <= r6inv_reg_3195;
        r6inv_reg_3195_pp0_iter15_reg <= r6inv_reg_3195_pp0_iter14_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (icmp_ln38_reg_3036_pp0_iter15_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'd0 == and_ln42_7_reg_3133_pp0_iter14_reg) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        sub_reg_3205 <= grp_fu_556_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_11_reg_2877 <= {{grp_fu_1794_p2[78:76]}};
        tmp_12_reg_2882 <= {{grp_fu_1794_p2[80:76]}};
        trunc_ln34_1_reg_2865 <= {{grp_fu_1804_p2[75:74]}};
        trunc_ln34_2_reg_2871 <= {{grp_fu_1814_p2[73:72]}};
        trunc_ln34_3_reg_2887 <= {{grp_fu_1820_p2[128:69]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_13_reg_2904 <= {{grp_fu_1843_p2[78:76]}};
        tmp_14_reg_2909 <= {{grp_fu_1843_p2[80:76]}};
        tmp_15_reg_2926 <= {{grp_fu_1876_p2[78:76]}};
        tmp_16_reg_2931 <= {{grp_fu_1876_p2[80:76]}};
        trunc_ln35_1_reg_2892 <= {{grp_fu_1853_p2[75:74]}};
        trunc_ln35_2_reg_2898 <= {{grp_fu_1863_p2[73:72]}};
        trunc_ln36_1_reg_2914 <= {{grp_fu_1886_p2[75:74]}};
        trunc_ln36_2_reg_2920 <= {{grp_fu_1896_p2[73:72]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln38_reg_3036 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_2_reg_3112 <= grp_fu_585_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln38_reg_3036 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_5_reg_3123 <= grp_fu_585_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b1))) begin
        ap_condition_pp0_exit_iter20_state188 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter20_state188 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (icmp_ln38_reg_3036 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln22_fu_875_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln38_reg_3036 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_q_idx_phi_fu_474_p4 = add_ln39_reg_3128;
    end else begin
        ap_phi_mux_q_idx_phi_fu_474_p4 = q_idx_reg_470;
    end
end

always @ (*) begin
    if (((icmp_ln38_reg_3036_pp0_iter20_reg == 1'd0) & (1'd0 == and_ln42_7_reg_3133_pp0_iter20_reg))) begin
        ap_phi_mux_sum_x_1_phi_fu_516_p4 = grp_fu_548_p2;
    end else begin
        ap_phi_mux_sum_x_1_phi_fu_516_p4 = ap_phi_reg_pp0_iter21_sum_x_1_reg_512;
    end
end

always @ (*) begin
    if (((icmp_ln38_reg_3036_pp0_iter20_reg == 1'd0) & (1'd0 == and_ln42_7_reg_3133_pp0_iter20_reg))) begin
        ap_phi_mux_sum_y_1_phi_fu_528_p4 = grp_fu_552_p2;
    end else begin
        ap_phi_mux_sum_y_1_phi_fu_528_p4 = ap_phi_reg_pp0_iter21_sum_y_1_reg_524;
    end
end

always @ (*) begin
    if (((icmp_ln38_reg_3036_pp0_iter20_reg == 1'd0) & (1'd0 == and_ln42_7_reg_3133_pp0_iter20_reg))) begin
        ap_phi_mux_sum_z_1_phi_fu_540_p4 = grp_fu_556_p2;
    end else begin
        ap_phi_mux_sum_z_1_phi_fu_540_p4 = ap_phi_reg_pp0_iter21_sum_z_1_reg_536;
    end
end

always @ (*) begin
    if (((icmp_ln22_fu_875_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state195)) begin
        force_r_address0 = force_addr_2_reg_2976;
    end else if ((1'b1 == ap_CS_fsm_state194)) begin
        force_r_address0 = force_addr_1_reg_2961;
    end else if ((1'b1 == ap_CS_fsm_state193)) begin
        force_r_address0 = force_addr_reg_2951;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        force_r_address0 = zext_ln36_3_fu_2161_p1;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        force_r_address0 = zext_ln35_3_fu_2143_p1;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        force_r_address0 = zext_ln34_16_fu_2135_p1;
    end else begin
        force_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state194) | (1'b1 == ap_CS_fsm_state193) | (1'b1 == ap_CS_fsm_state195))) begin
        force_r_ce0 = 1'b1;
    end else begin
        force_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state195)) begin
        force_r_d0 = shl_ln2_fu_2456_p3;
    end else if ((1'b1 == ap_CS_fsm_state194)) begin
        force_r_d0 = zext_ln58_fu_2447_p1;
    end else if ((1'b1 == ap_CS_fsm_state193)) begin
        force_r_d0 = zext_ln57_fu_2430_p1;
    end else begin
        force_r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state195)) begin
        force_r_we0 = 24'd16711680;
    end else if ((1'b1 == ap_CS_fsm_state194)) begin
        force_r_we0 = 24'd65280;
    end else if ((1'b1 == ap_CS_fsm_state193)) begin
        force_r_we0 = 24'd255;
    end else begin
        force_r_we0 = 24'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1952_ap_start = 1'b1;
    end else begin
        grp_fu_1952_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_00001) & (icmp_ln38_reg_3036 == 1'd0) & (1'd0 == and_ln42_7_fu_2420_p2) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_548_opcode = 2'd1;
    end else if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln38_reg_3036_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_00001) & (1'd0 == and_ln42_7_reg_3133_pp0_iter2_reg) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln38_reg_3036_pp0_iter20_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_00001) & (1'd0 == and_ln42_7_reg_3133_pp0_iter19_reg) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter20 == 1'b1)))) begin
        grp_fu_548_opcode = 2'd0;
    end else begin
        grp_fu_548_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter20 == 1'b1))) begin
        grp_fu_548_p0 = sum_x_2_reg_502;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_548_p0 = mul_reg_3158;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_548_p0 = p_x_reg_2988;
    end else begin
        grp_fu_548_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter20 == 1'b1))) begin
        grp_fu_548_p1 = mul8_reg_3221;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_548_p1 = mul1_reg_3163;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_548_p1 = q_x_reg_3060;
    end else begin
        grp_fu_548_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_00001) & (icmp_ln38_reg_3036 == 1'd0) & (1'd0 == and_ln42_7_fu_2420_p2) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_552_opcode = 2'd1;
    end else if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln38_reg_3036_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_00001) & (1'd0 == and_ln42_7_reg_3133_pp0_iter3_reg) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln38_reg_3036_pp0_iter20_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_00001) & (1'd0 == and_ln42_7_reg_3133_pp0_iter19_reg) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter20 == 1'b1)))) begin
        grp_fu_552_opcode = 2'd0;
    end else begin
        grp_fu_552_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter20 == 1'b1))) begin
        grp_fu_552_p0 = sum_y_2_reg_492;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_552_p0 = add_reg_3173;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_552_p0 = p_y_reg_2994;
    end else begin
        grp_fu_552_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter20 == 1'b1))) begin
        grp_fu_552_p1 = mul9_reg_3226;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_552_p1 = mul2_reg_3168_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_552_p1 = q_y_reg_3106;
    end else begin
        grp_fu_552_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_00001) & (icmp_ln38_reg_3036 == 1'd0) & (1'd0 == and_ln42_7_fu_2420_p2) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_556_opcode = 2'd1;
    end else if ((((ap_enable_reg_pp0_iter15 == 1'b1) & (icmp_ln38_reg_3036_pp0_iter14_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_00001) & (1'd0 == and_ln42_7_reg_3133_pp0_iter14_reg) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln38_reg_3036_pp0_iter20_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_00001) & (1'd0 == and_ln42_7_reg_3133_pp0_iter19_reg) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter20 == 1'b1)))) begin
        grp_fu_556_opcode = 2'd0;
    end else begin
        grp_fu_556_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter20 == 1'b1))) begin
        grp_fu_556_p0 = sum_z_2_reg_482;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_556_p0 = mul5_reg_3200;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_556_p0 = p_z_reg_3000;
    end else begin
        grp_fu_556_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter20 == 1'b1))) begin
        grp_fu_556_p1 = mul4_reg_3231;
    end else if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_556_p1 = 64'd13835058055282163712;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_556_p1 = q_z_reg_3117;
    end else begin
        grp_fu_556_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        grp_fu_567_p0 = r6inv_reg_3195_pp0_iter15_reg;
    end else if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_567_p0 = r6inv_reg_3195;
    end else if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_567_p0 = mul3_reg_3190;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        grp_fu_567_p0 = r2inv_reg_3183;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_567_p0 = dx_reg_3137;
    end else begin
        grp_fu_567_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        grp_fu_567_p1 = sub_reg_3205;
    end else if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_567_p1 = 64'd4609434218613702656;
    end else if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_567_p1 = r2inv_reg_3183_pp0_iter12_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        grp_fu_567_p1 = r2inv_reg_3183;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_567_p1 = dx_reg_3137;
    end else begin
        grp_fu_567_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_571_p0 = f_reg_3215;
    end else if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_571_p0 = r2inv_reg_3183_pp0_iter17_reg;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_571_p0 = dy_reg_3144;
    end else begin
        grp_fu_571_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_571_p1 = dz_reg_3151_pp0_iter17_reg;
    end else if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_571_p1 = dx_reg_3137_pp0_iter17_reg;
    end else if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_571_p1 = potential_reg_3210;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_571_p1 = dy_reg_3144;
    end else begin
        grp_fu_571_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_575_p0 = f_reg_3215;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_575_p0 = dz_reg_3151;
    end else begin
        grp_fu_575_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_575_p1 = dy_reg_3144_pp0_iter17_reg;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_575_p1 = dz_reg_3151;
    end else begin
        grp_fu_575_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_585_p0 = q_z_fu_2346_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_585_p0 = q_y_fu_2342_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_585_p0 = q_x_fu_2279_p1;
        end else begin
            grp_fu_585_p0 = 'bx;
        end
    end else begin
        grp_fu_585_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_585_p1 = p_z_reg_3000;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_585_p1 = p_y_reg_2994;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_585_p1 = p_x_reg_2988;
        end else begin
            grp_fu_585_p1 = 'bx;
        end
    end else begin
        grp_fu_585_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        n_points_address0 = n_points_addr_reg_2658;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        n_points_address0 = zext_ln31_fu_1670_p1;
    end else begin
        n_points_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        n_points_ce0 = 1'b1;
    end else begin
        n_points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        position_address0 = zext_ln39_fu_2225_p1;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        position_address0 = zext_ln33_fu_2147_p1;
    end else begin
        position_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        position_ce0 = 1'b1;
    end else begin
        position_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln22_fu_875_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln26_fu_1542_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln32_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter19 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter20 == 1'b1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((ap_enable_reg_pp0_iter19 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter20 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state193;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state193 : begin
            ap_NS_fsm = ap_ST_fsm_state194;
        end
        ap_ST_fsm_state194 : begin
            ap_NS_fsm = ap_ST_fsm_state195;
        end
        ap_ST_fsm_state195 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln22_1_fu_881_p2 = (indvars_iv68_reg_339 + 3'd1);

assign add_ln22_2_fu_641_p2 = (indvar_flatten163_reg_316 + 7'd1);

assign add_ln22_fu_985_p2 = (b0_x_reg_327 + 3'd1);

assign add_ln23_1_fu_953_p2 = (select_ln22_1_fu_893_p3 + 3'd1);

assign add_ln23_2_fu_1617_p2 = (indvar_flatten56_reg_350 + 6'd1);

assign add_ln23_fu_1129_p2 = (select_ln22_fu_991_p3 + 3'd1);

assign add_ln24_1_fu_1612_p2 = (select_ln23_1_reg_2565 + 3'd1);

assign add_ln24_fu_1607_p2 = (select_ln23_reg_2559 + 3'd1);

assign add_ln26_1_fu_1536_p2 = (indvar_flatten18_reg_409 + 192'd1);

assign add_ln26_fu_1547_p2 = (b1_x_reg_420 + 64'd1);

assign add_ln27_1_fu_1774_p2 = (indvar_flatten_reg_429 + 128'd1);

assign add_ln27_fu_1630_p2 = (select_ln16_reg_2703 + 64'd1);

assign add_ln28_fu_1769_p2 = (select_ln16_3_reg_2724 + 64'd1);

assign add_ln31_1_fu_1665_p2 = (tmp_27_cast_fu_1658_p3 + trunc_ln27_1_reg_2729);

assign add_ln31_fu_1652_p2 = (tmp_10_fu_1641_p3 + trunc_ln31_fu_1648_p1);

assign add_ln33_1_fu_1521_p2 = (p_shl_cast_fu_1501_p3 + p_shl1_cast_fu_1513_p3);

assign add_ln33_2_fu_1720_p2 = (add_ln33_1_reg_2663 + trunc_ln33_4_fu_1716_p1);

assign add_ln33_fu_1705_p2 = (p_idx_reg_459 + 32'd1);

assign add_ln34_1_fu_1759_p2 = ($signed(select_ln23_4_cast_reg_2653) + $signed(sext_ln34_fu_1755_p1));

assign add_ln34_2_fu_1764_p2 = ($signed(add_ln34_1_fu_1759_p2) + $signed(sext_ln34_1_reg_2680));

assign add_ln34_3_fu_2055_p2 = (p_shl6_cast_fu_2037_p5 + p_shl7_cast_fu_2046_p5);

assign add_ln34_4_fu_2069_p2 = (add_ln34_3_fu_2055_p2 + zext_ln34_15_fu_2065_p1);

assign add_ln34_fu_1370_p2 = ($signed(select_ln22_4_fu_1075_p3) + $signed(sext_ln26_fu_1366_p1));

assign add_ln35_1_fu_2093_p2 = (p_shl8_cast_fu_2075_p5 + p_shl9_cast_fu_2084_p5);

assign add_ln35_2_fu_2099_p2 = (add_ln35_1_fu_2093_p2 + zext_ln34_15_fu_2065_p1);

assign add_ln35_fu_1826_p2 = ($signed(add_ln34_2_reg_2792) + $signed(39'd8));

assign add_ln36_1_fu_2123_p2 = (p_shl4_cast_fu_2105_p5 + p_shl5_cast_fu_2114_p5);

assign add_ln36_2_fu_2129_p2 = (add_ln36_1_fu_2123_p2 + zext_ln34_15_fu_2065_p1);

assign add_ln36_fu_1831_p2 = ($signed(add_ln34_2_reg_2792) + $signed(39'd16));

assign add_ln39_1_fu_1699_p2 = (p_shl2_cast_fu_1679_p3 + p_shl3_cast_fu_1691_p3);

assign add_ln39_2_fu_2220_p2 = (add_ln39_1_reg_2764 + trunc_ln39_4_fu_2216_p1);

assign add_ln39_fu_2350_p2 = (q_idx_reg_470 + 32'd1);

assign and_ln22_fu_939_p2 = (xor_ln22_fu_927_p2 & icmp_ln24_fu_933_p2);

assign and_ln42_1_fu_2370_p2 = (tmp_2_reg_3112 & and_ln42_fu_2364_p2);

assign and_ln42_2_fu_2383_p2 = (or_ln42_3_fu_2379_p2 & or_ln42_2_fu_2375_p2);

assign and_ln42_3_fu_2389_p2 = (tmp_5_reg_3123 & and_ln42_2_fu_2383_p2);

assign and_ln42_4_fu_2402_p2 = (or_ln42_5_fu_2398_p2 & or_ln42_4_fu_2394_p2);

assign and_ln42_5_fu_2408_p2 = (grp_fu_585_p2 & and_ln42_4_fu_2402_p2);

assign and_ln42_6_fu_2414_p2 = (and_ln42_5_fu_2408_p2 & and_ln42_3_fu_2389_p2);

assign and_ln42_7_fu_2420_p2 = (and_ln42_6_fu_2414_p2 & and_ln42_1_fu_2370_p2);

assign and_ln42_fu_2364_p2 = (or_ln42_fu_2356_p2 & or_ln42_1_fu_2360_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state193 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state194 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state195 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state100_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state118_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state119_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state120_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state122_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state123_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state125_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state126_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state127_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state128_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state129_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state130_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state131_pp0_stage4_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state132_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state133_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state134_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state135_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state136_pp0_stage4_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state137_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state138_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state139_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state140_pp0_stage3_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state141_pp0_stage4_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state142_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state143_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state144_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state145_pp0_stage3_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state146_pp0_stage4_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state147_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state148_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state149_pp0_stage2_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state150_pp0_stage3_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state151_pp0_stage4_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state152_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state153_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state154_pp0_stage2_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state155_pp0_stage3_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state156_pp0_stage4_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state157_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state158_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state159_pp0_stage2_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state160_pp0_stage3_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state161_pp0_stage4_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state162_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state163_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state164_pp0_stage2_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state165_pp0_stage3_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state166_pp0_stage4_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state167_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state168_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state169_pp0_stage2_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state170_pp0_stage3_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state171_pp0_stage4_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state172_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state173_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state174_pp0_stage2_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state175_pp0_stage3_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state176_pp0_stage4_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state177_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state178_pp0_stage1_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state179_pp0_stage2_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state180_pp0_stage3_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state181_pp0_stage4_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state182_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state183_pp0_stage1_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state184_pp0_stage2_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state185_pp0_stage3_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state186_pp0_stage4_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state187_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state188_pp0_stage1_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state189_pp0_stage2_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state190_pp0_stage3_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state191_pp0_stage4_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state192_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_sum_x_1_reg_512 = 'bx;

assign ap_phi_reg_pp0_iter0_sum_y_1_reg_524 = 'bx;

assign ap_phi_reg_pp0_iter0_sum_z_1_reg_536 = 'bx;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign b0_x_cast_cast_fu_677_p1 = empty_27_fu_673_p1;

assign b0_x_cast_cast_mid1_fu_1015_p1 = empty_37_fu_1011_p1;

assign b0_y_cast_cast_fu_791_p1 = empty_32_fu_787_p1;

assign b0_y_cast_cast_mid1_fu_1178_p1 = empty_39_fu_1174_p1;

assign b0_z_cast_cast_fu_1306_p1 = empty_42_fu_1302_p1;

assign bitcast_ln57_fu_2426_p1 = sum_x_2_reg_502;

assign bitcast_ln58_fu_2435_p1 = sum_y_2_reg_492;

assign bitcast_ln59_fu_2452_p1 = sum_z_2_reg_482;

assign cmp13_fu_687_p2 = ((empty_28_fu_681_p2 > 3'd4) ? 1'b1 : 1'b0);

assign cmp13_mid1_fu_1025_p2 = ((p_mid181_fu_1019_p2 > 3'd4) ? 1'b1 : 1'b0);

assign cmp28_fu_801_p2 = ((empty_33_fu_795_p2 > 3'd4) ? 1'b1 : 1'b0);

assign cmp28_mid1_fu_1188_p2 = ((p_mid136_fu_1182_p2 > 3'd4) ? 1'b1 : 1'b0);

assign cmp43_fu_1316_p2 = ((empty_43_fu_1310_p2 > 3'd4) ? 1'b1 : 1'b0);

assign empty_26_fu_651_p2 = (($signed(indvars_iv68_reg_339) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign empty_27_fu_673_p1 = b0_x_reg_327[1:0];

assign empty_28_fu_681_p2 = (b0_x_reg_327 + 3'd2);

assign empty_29_fu_693_p2 = (b0_x_cast_cast_fu_677_p1 + 3'd2);

assign empty_30_fu_737_p2 = ((smax70_cast62_fu_669_p1 > p_add15_fu_699_p3) ? 1'b1 : 1'b0);

assign empty_31_fu_765_p2 = (($signed(indvars_iv63_reg_374) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign empty_32_fu_787_p1 = b0_y_reg_362[1:0];

assign empty_33_fu_795_p2 = (b0_y_reg_362 + 3'd2);

assign empty_34_fu_807_p2 = (b0_y_cast_cast_fu_791_p1 + 3'd2);

assign empty_35_fu_851_p2 = ((smax65_cast64_fu_783_p1 > p_add30_fu_813_p3) ? 1'b1 : 1'b0);

assign empty_37_fu_1011_p1 = add_ln22_fu_985_p2[1:0];

assign empty_38_fu_1459_p2 = (zext_ln22_fu_1449_p1 + select_ln23_2_cast_fu_1456_p1);

assign empty_39_fu_1174_p1 = add_ln23_fu_1129_p2[1:0];

assign empty_40_fu_1486_p2 = (zext_ln23_2_fu_1473_p1 + select_ln23_cast_fu_1483_p1);

assign empty_41_fu_1280_p2 = (($signed(select_ln23_1_fu_1147_p3) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign empty_42_fu_1302_p1 = select_ln23_fu_1139_p3[1:0];

assign empty_43_fu_1310_p2 = (select_ln23_fu_1139_p3 + 3'd2);

assign empty_44_fu_1322_p2 = (b0_z_cast_cast_fu_1306_p1 + 3'd2);

assign empty_45_fu_1376_p2 = ((smax_cast68_fu_1298_p1 > p_add45_fu_1328_p3) ? 1'b1 : 1'b0);

assign grp_fu_1420_p0 = grp_fu_1420_p00;

assign grp_fu_1420_p00 = $unsigned(sext_ln16_fu_1406_p1);

assign grp_fu_1420_p1 = grp_fu_1420_p10;

assign grp_fu_1420_p10 = $unsigned(sext_ln16_1_fu_1413_p1);

assign grp_fu_1436_p0 = grp_fu_1436_p00;

assign grp_fu_1436_p00 = $unsigned(sext_ln16_2_fu_1426_p1);

assign grp_fu_1436_p1 = grp_fu_1436_p10;

assign grp_fu_1436_p10 = mul_ln16_reg_2626;

assign grp_fu_1794_p0 = zext_ln34_12_fu_1790_p1;

assign grp_fu_1794_p1 = 129'd19676527011956855058;

assign grp_fu_1804_p0 = grp_fu_1804_p00;

assign grp_fu_1804_p00 = $unsigned(sext_ln34_2_fu_1787_p1);

assign grp_fu_1804_p1 = 76'd19676527011956855058;

assign grp_fu_1814_p0 = grp_fu_1814_p00;

assign grp_fu_1814_p00 = $unsigned(sext_ln34_2_fu_1787_p1);

assign grp_fu_1814_p1 = 74'd19676527011956855058;

assign grp_fu_1820_p0 = zext_ln34_12_fu_1790_p1;

assign grp_fu_1820_p1 = 129'd24595658764946068822;

assign grp_fu_1843_p0 = grp_fu_1843_p00;

assign grp_fu_1843_p00 = $unsigned(sext_ln35_fu_1836_p1);

assign grp_fu_1843_p1 = 129'd19676527011956855058;

assign grp_fu_1853_p0 = grp_fu_1853_p00;

assign grp_fu_1853_p00 = $unsigned(sext_ln35_fu_1836_p1);

assign grp_fu_1853_p1 = 76'd19676527011956855058;

assign grp_fu_1863_p0 = grp_fu_1863_p00;

assign grp_fu_1863_p00 = $unsigned(sext_ln35_fu_1836_p1);

assign grp_fu_1863_p1 = 74'd19676527011956855058;

assign grp_fu_1876_p0 = grp_fu_1876_p00;

assign grp_fu_1876_p00 = $unsigned(sext_ln36_fu_1869_p1);

assign grp_fu_1876_p1 = 129'd19676527011956855058;

assign grp_fu_1886_p0 = grp_fu_1886_p00;

assign grp_fu_1886_p00 = $unsigned(sext_ln36_fu_1869_p1);

assign grp_fu_1886_p1 = 76'd19676527011956855058;

assign grp_fu_1896_p0 = grp_fu_1896_p00;

assign grp_fu_1896_p00 = $unsigned(sext_ln36_fu_1869_p1);

assign grp_fu_1896_p1 = 74'd19676527011956855058;

assign grp_fu_1952_p1 = 60'd10;

assign grp_fu_589_p4 = {{position_q0[127:64]}};

assign grp_fu_599_p4 = {{position_q0[191:128]}};

assign grp_fu_609_p4 = {{position_q0[115:64]}};

assign grp_fu_619_p2 = ((grp_fu_609_p4 == 52'd0) ? 1'b1 : 1'b0);

assign grp_fu_625_p4 = {{position_q0[179:128]}};

assign grp_fu_635_p2 = ((grp_fu_625_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_875_p2 = ((indvar_flatten163_reg_316 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_887_p2 = ((indvar_flatten56_reg_350 == 6'd16) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_933_p2 = ((b0_z_reg_385 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_1542_p2 = ((indvar_flatten18_reg_409 == mul_ln16_1_reg_2685) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_1553_p2 = ((indvar_flatten_reg_429 == mul_ln16_reg_2626) ? 1'b1 : 1'b0);

assign icmp_ln28_1_fu_1572_p2 = (($signed(b1_z_reg_450) < $signed(zext_ln26_reg_2675)) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_1400_p2 = ((smax_cast68_fu_1298_p1 < p_add45_fu_1328_p3) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_1711_p2 = ((p_idx_reg_459 == n_points_load_reg_2774) ? 1'b1 : 1'b0);

assign icmp_ln38_fu_2211_p2 = ((ap_phi_mux_q_idx_phi_fu_474_p4 == q_idx_range_reg_2769) ? 1'b1 : 1'b0);

assign icmp_ln42_10_fu_2269_p2 = ((tmp_7_fu_2260_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln42_1_fu_2304_p2 = ((trunc_ln42_1_fu_2294_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_2_fu_2239_p2 = ((tmp_1_fu_2230_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln42_3_fu_2205_p2 = ((trunc_ln42_fu_2201_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_4_fu_2320_p2 = ((tmp_3_fu_2310_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln42_6_fu_2254_p2 = ((tmp_4_fu_2245_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln42_8_fu_2336_p2 = ((tmp_6_fu_2326_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_2298_p2 = ((tmp_fu_2284_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign or_ln23_fu_1135_p2 = (icmp_ln23_reg_2498 | and_ln22_reg_2522);

assign or_ln42_1_fu_2360_p2 = (icmp_ln42_3_reg_3021 | icmp_ln42_2_reg_3045);

assign or_ln42_2_fu_2375_p2 = (icmp_ln42_5_reg_3091 | icmp_ln42_4_reg_3086);

assign or_ln42_3_fu_2379_p2 = (icmp_ln42_7_reg_3026 | icmp_ln42_6_reg_3050);

assign or_ln42_4_fu_2394_p2 = (icmp_ln42_9_reg_3101 | icmp_ln42_8_reg_3096);

assign or_ln42_5_fu_2398_p2 = (icmp_ln42_11_reg_3031 | icmp_ln42_10_reg_3055);

assign or_ln42_fu_2356_p2 = (icmp_ln42_reg_3076 | icmp_ln42_1_reg_3081);

assign p_add15_fu_699_p3 = ((cmp13_fu_687_p2[0:0] == 1'b1) ? 3'd4 : empty_29_fu_693_p2);

assign p_add15_mid1_fu_1037_p3 = ((cmp13_mid1_fu_1025_p2[0:0] == 1'b1) ? 3'd4 : p_mid183_fu_1031_p2);

assign p_add30_fu_813_p3 = ((cmp28_fu_801_p2[0:0] == 1'b1) ? 3'd4 : empty_34_fu_807_p2);

assign p_add30_mid1_fu_1200_p3 = ((cmp28_mid1_fu_1188_p2[0:0] == 1'b1) ? 3'd4 : p_mid138_fu_1194_p2);

assign p_add45_fu_1328_p3 = ((cmp43_fu_1316_p2[0:0] == 1'b1) ? 3'd4 : empty_44_fu_1322_p2);

assign p_cast73_fu_1492_p1 = empty_40_fu_1486_p2;

assign p_mid136_fu_1182_p2 = (select_ln22_fu_991_p3 + 3'd3);

assign p_mid138_fu_1194_p2 = (b0_y_cast_cast_mid1_fu_1178_p1 + 3'd2);

assign p_mid152_fu_1245_p2 = ((zext_ln23_4_fu_1165_p1 > p_add30_mid1_fu_1200_p3) ? 1'b1 : 1'b0);

assign p_mid179_fu_905_p2 = (($signed(add_ln22_1_fu_881_p2) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign p_mid181_fu_1019_p2 = (b0_x_reg_327 + 3'd3);

assign p_mid183_fu_1031_p2 = (b0_x_cast_cast_mid1_fu_1015_p1 + 3'd2);

assign p_mid197_fu_1081_p2 = ((zext_ln22_2_fu_1008_p1 > p_add15_mid1_fu_1037_p3) ? 1'b1 : 1'b0);

assign p_mid1_fu_963_p2 = (($signed(add_ln23_1_fu_953_p2) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign p_shl1_cast_fu_1513_p3 = {{trunc_ln33_3_fu_1509_p1}, {1'd0}};

assign p_shl2_cast_fu_1679_p3 = {{trunc_ln39_fu_1675_p1}, {3'd0}};

assign p_shl3_cast_fu_1691_p3 = {{trunc_ln39_3_fu_1687_p1}, {1'd0}};

assign p_shl4_cast_fu_2105_p5 = {{{{tmp_15_reg_2926}, {trunc_ln36_1_reg_2914}}, {trunc_ln36_2_reg_2920}}, {3'd0}};

assign p_shl5_cast_fu_2114_p5 = {{{{tmp_16_reg_2931}, {trunc_ln36_1_reg_2914}}, {trunc_ln36_2_reg_2920}}, {1'd0}};

assign p_shl6_cast_fu_2037_p5 = {{{{tmp_11_reg_2877}, {trunc_ln34_1_reg_2865}}, {trunc_ln34_2_reg_2871}}, {3'd0}};

assign p_shl7_cast_fu_2046_p5 = {{{{tmp_12_reg_2882}, {trunc_ln34_1_reg_2865}}, {trunc_ln34_2_reg_2871}}, {1'd0}};

assign p_shl8_cast_fu_2075_p5 = {{{{tmp_13_reg_2904}, {trunc_ln35_1_reg_2892}}, {trunc_ln35_2_reg_2898}}, {3'd0}};

assign p_shl9_cast_fu_2084_p5 = {{{{tmp_14_reg_2909}, {trunc_ln35_1_reg_2892}}, {trunc_ln35_2_reg_2898}}, {1'd0}};

assign p_shl_cast_fu_1501_p3 = {{trunc_ln33_fu_1497_p1}, {3'd0}};

assign p_x_fu_2169_p1 = trunc_ln33_5_fu_2165_p1;

assign p_y_fu_2173_p1 = grp_fu_589_p4;

assign p_z_fu_2177_p1 = grp_fu_599_p4;

assign q_x_fu_2279_p1 = trunc_ln39_5_fu_2275_p1;

assign q_y_fu_2342_p1 = trunc_ln39_1_reg_3066;

assign q_z_fu_2346_p1 = trunc_ln39_2_reg_3071;

assign select_ln16_1_fu_1565_p3 = ((icmp_ln27_fu_1553_p2[0:0] == 1'b1) ? smax_cast_reg_2668 : b1_z_reg_450);

assign select_ln16_2_fu_1577_p3 = ((icmp_ln27_fu_1553_p2[0:0] == 1'b1) ? icmp_ln28_reg_2611 : icmp_ln28_1_fu_1572_p2);

assign select_ln16_3_fu_1596_p3 = ((select_ln16_2_fu_1577_p3[0:0] == 1'b1) ? select_ln16_1_fu_1565_p3 : smax_cast_reg_2668);

assign select_ln16_fu_1558_p3 = ((icmp_ln27_fu_1553_p2[0:0] == 1'b1) ? select_ln23_3_cast_reg_2647 : b1_y_reg_441);

assign select_ln22_1_fu_893_p3 = ((icmp_ln23_fu_887_p2[0:0] == 1'b1) ? 3'd7 : indvars_iv63_reg_374);

assign select_ln22_2_fu_998_p3 = ((icmp_ln23_reg_2498[0:0] == 1'b1) ? add_ln22_fu_985_p2 : b0_x_reg_327);

assign select_ln22_3_cast_fu_1453_p1 = select_ln22_3_reg_2517;

assign select_ln22_3_fu_919_p3 = ((icmp_ln23_fu_887_p2[0:0] == 1'b1) ? smax70_mid1_fu_911_p3 : smax70_fu_657_p3);

assign select_ln22_4_fu_1075_p3 = ((icmp_ln23_reg_2498[0:0] == 1'b1) ? sub_ln34_4_fu_1069_p2 : sub_ln34_reg_2470);

assign select_ln22_5_fu_1105_p3 = ((icmp_ln23_reg_2498[0:0] == 1'b1) ? sub_ln23_1_fu_1099_p2 : sub_ln23_reg_2475);

assign select_ln22_6_fu_1111_p3 = ((icmp_ln23_reg_2498[0:0] == 1'b1) ? 2'd0 : smax65_reg_2480);

assign select_ln22_7_fu_1117_p3 = ((icmp_ln23_reg_2498[0:0] == 1'b1) ? 13'd0 : sub_ln34_1_reg_2485);

assign select_ln22_8_fu_1123_p3 = ((icmp_ln23_reg_2498[0:0] == 1'b1) ? 4'd2 : sub_ln24_reg_2490);

assign select_ln22_9_fu_945_p3 = ((icmp_ln23_fu_887_p2[0:0] == 1'b1) ? add_ln22_1_fu_881_p2 : indvars_iv68_reg_339);

assign select_ln22_fu_991_p3 = ((icmp_ln23_reg_2498[0:0] == 1'b1) ? 3'd0 : b0_y_reg_362);

assign select_ln23_1_fu_1147_p3 = ((or_ln23_fu_1135_p2[0:0] == 1'b1) ? 3'd7 : indvars_iv59_reg_397);

assign select_ln23_2_cast_fu_1456_p1 = select_ln23_2_reg_2570;

assign select_ln23_2_fu_1155_p3 = ((and_ln22_reg_2522[0:0] == 1'b1) ? add_ln23_fu_1129_p2 : select_ln22_fu_991_p3);

assign select_ln23_3_cast_fu_1477_p1 = select_ln23_3_reg_2576;

assign select_ln23_3_fu_1168_p3 = ((and_ln22_reg_2522[0:0] == 1'b1) ? smax65_mid1_reg_2536 : select_ln22_6_fu_1111_p3);

assign select_ln23_4_cast_fu_1480_p1 = $signed(select_ln23_4_reg_2581);

assign select_ln23_4_fu_1238_p3 = ((and_ln22_reg_2522[0:0] == 1'b1) ? sub_ln34_5_fu_1232_p2 : select_ln22_7_fu_1117_p3);

assign select_ln23_5_fu_1269_p3 = ((and_ln22_reg_2522[0:0] == 1'b1) ? sub_ln24_1_fu_1263_p2 : select_ln22_8_fu_1123_p3);

assign select_ln23_6_fu_977_p3 = ((and_ln22_fu_939_p2[0:0] == 1'b1) ? add_ln23_1_fu_953_p2 : select_ln22_1_fu_893_p3);

assign select_ln23_7_fu_1623_p3 = ((icmp_ln23_reg_2498[0:0] == 1'b1) ? 6'd1 : add_ln23_2_fu_1617_p2);

assign select_ln23_cast_fu_1483_p1 = select_ln23_reg_2559;

assign select_ln23_fu_1139_p3 = ((or_ln23_fu_1135_p2[0:0] == 1'b1) ? 3'd0 : b0_z_reg_385);

assign select_ln26_fu_1584_p3 = ((icmp_ln27_fu_1553_p2[0:0] == 1'b1) ? add_ln26_fu_1547_p2 : b1_x_reg_420);

assign select_ln27_1_fu_1780_p3 = ((icmp_ln27_reg_2698[0:0] == 1'b1) ? 128'd1 : add_ln27_1_fu_1774_p2);

assign select_ln27_fu_1635_p3 = ((select_ln16_2_reg_2709[0:0] == 1'b1) ? select_ln16_reg_2703 : add_ln27_fu_1630_p2);

assign sext_ln16_1_fu_1413_p1 = $signed(sub_ln26_reg_2606);

assign sext_ln16_2_fu_1426_p1 = $signed(select_ln22_5_reg_2554);

assign sext_ln16_fu_1406_p1 = $signed(select_ln23_5_reg_2586);

assign sext_ln26_fu_1366_p1 = $signed(sub_ln34_2_fu_1360_p2);

assign sext_ln34_1_fu_1533_p1 = $signed(add_ln34_reg_2601);

assign sext_ln34_2_fu_1787_p1 = add_ln34_2_reg_2792;

assign sext_ln34_fu_1755_p1 = $signed(sub_ln34_3_fu_1749_p2);

assign sext_ln35_fu_1836_p1 = $signed(add_ln35_reg_2825);

assign sext_ln36_fu_1869_p1 = $signed(add_ln36_reg_2830);

assign shl_ln1_fu_2439_p3 = {{bitcast_ln58_fu_2435_p1}, {64'd0}};

assign shl_ln2_fu_2456_p3 = {{bitcast_ln59_fu_2452_p1}, {128'd0}};

assign shl_ln34_1_fu_719_p3 = {{empty_27_fu_673_p1}, {8'd0}};

assign shl_ln34_1_mid1_fu_1057_p3 = {{empty_37_fu_1011_p1}, {8'd0}};

assign shl_ln34_2_fu_821_p3 = {{empty_32_fu_787_p1}, {10'd0}};

assign shl_ln34_2_mid1_fu_1208_p3 = {{empty_39_fu_1174_p1}, {10'd0}};

assign shl_ln34_3_fu_833_p3 = {{empty_32_fu_787_p1}, {6'd0}};

assign shl_ln34_3_mid1_fu_1220_p3 = {{empty_39_fu_1174_p1}, {6'd0}};

assign shl_ln34_4_fu_1336_p3 = {{empty_42_fu_1302_p1}, {8'd0}};

assign shl_ln34_5_fu_1348_p3 = {{empty_42_fu_1302_p1}, {4'd0}};

assign shl_ln34_6_fu_1725_p3 = {{p_idx_reg_459}, {5'd0}};

assign shl_ln34_7_fu_1737_p3 = {{p_idx_reg_459}, {3'd0}};

assign shl_ln34_mid1_fu_1045_p3 = {{empty_37_fu_1011_p1}, {12'd0}};

assign shl_ln_fu_707_p3 = {{empty_27_fu_673_p1}, {12'd0}};

assign smax4_fu_857_p3 = ((empty_35_fu_851_p2[0:0] == 1'b1) ? smax65_cast64_fu_783_p1 : p_add30_fu_813_p3);

assign smax4_mid1_fu_1251_p3 = ((p_mid152_fu_1245_p2[0:0] == 1'b1) ? zext_ln23_4_fu_1165_p1 : p_add30_mid1_fu_1200_p3);

assign smax5_fu_1382_p3 = ((empty_45_fu_1376_p2[0:0] == 1'b1) ? smax_cast68_fu_1298_p1 : p_add45_fu_1328_p3);

assign smax65_cast64_fu_783_p1 = smax65_fu_771_p3;

assign smax65_cast65_fu_779_p1 = smax65_fu_771_p3;

assign smax65_fu_771_p3 = ((empty_31_fu_765_p2[0:0] == 1'b1) ? trunc_ln23_fu_761_p1 : 2'd0);

assign smax65_mid1_fu_969_p3 = ((p_mid1_fu_963_p2[0:0] == 1'b1) ? trunc_ln23_1_fu_959_p1 : 2'd0);

assign smax70_cast62_fu_669_p1 = smax70_fu_657_p3;

assign smax70_cast63_fu_665_p1 = smax70_fu_657_p3;

assign smax70_fu_657_p3 = ((empty_26_fu_651_p2[0:0] == 1'b1) ? trunc_ln22_fu_647_p1 : 2'd0);

assign smax70_mid1_fu_911_p3 = ((p_mid179_fu_905_p2[0:0] == 1'b1) ? trunc_ln22_1_fu_901_p1 : 2'd0);

assign smax8_fu_743_p3 = ((empty_30_fu_737_p2[0:0] == 1'b1) ? smax70_cast62_fu_669_p1 : p_add15_fu_699_p3);

assign smax8_mid1_fu_1087_p3 = ((p_mid197_fu_1081_p2[0:0] == 1'b1) ? zext_ln22_2_fu_1008_p1 : p_add15_mid1_fu_1037_p3);

assign smax_cast68_fu_1298_p1 = smax_fu_1286_p3;

assign smax_cast69_fu_1294_p1 = smax_fu_1286_p3;

assign smax_cast_fu_1527_p1 = smax_reg_2591;

assign smax_fu_1286_p3 = ((empty_41_fu_1280_p2[0:0] == 1'b1) ? trunc_ln24_fu_1276_p1 : 2'd0);

assign sub_ln23_1_fu_1099_p2 = (zext_ln23_1_fu_1095_p1 - zext_ln22_1_fu_1005_p1);

assign sub_ln23_fu_755_p2 = (zext_ln23_fu_751_p1 - smax70_cast63_fu_665_p1);

assign sub_ln24_1_fu_1263_p2 = (zext_ln24_1_fu_1259_p1 - zext_ln23_3_fu_1162_p1);

assign sub_ln24_fu_869_p2 = (zext_ln24_fu_865_p1 - smax65_cast65_fu_779_p1);

assign sub_ln26_fu_1394_p2 = (zext_ln26_1_fu_1390_p1 - smax_cast69_fu_1294_p1);

assign sub_ln34_1_fu_845_p2 = (zext_ln34_2_fu_829_p1 - zext_ln34_3_fu_841_p1);

assign sub_ln34_2_fu_1360_p2 = (zext_ln34_4_fu_1344_p1 - zext_ln34_5_fu_1356_p1);

assign sub_ln34_3_fu_1749_p2 = (zext_ln34_6_fu_1733_p1 - zext_ln34_7_fu_1745_p1);

assign sub_ln34_4_fu_1069_p2 = (zext_ln34_8_fu_1053_p1 - zext_ln34_9_fu_1065_p1);

assign sub_ln34_5_fu_1232_p2 = (zext_ln34_10_fu_1216_p1 - zext_ln34_11_fu_1228_p1);

assign sub_ln34_fu_731_p2 = (zext_ln34_fu_715_p1 - zext_ln34_1_fu_727_p1);

assign sum_x_fu_2181_p1 = trunc_ln34_4_reg_2956;

assign sum_y_fu_2184_p1 = trunc_ln5_reg_2971;

assign sum_z_fu_2197_p1 = trunc_ln6_fu_2187_p4;

assign tmp_10_fu_1641_p3 = {{trunc_ln27_reg_2719}, {2'd0}};

assign tmp_1_fu_2230_p4 = {{position_load_reg_2981[62:52]}};

assign tmp_27_cast_fu_1658_p3 = {{add_ln31_reg_2754}, {2'd0}};

assign tmp_3_fu_2310_p4 = {{position_q0[126:116]}};

assign tmp_4_fu_2245_p4 = {{position_load_reg_2981[126:116]}};

assign tmp_6_fu_2326_p4 = {{position_q0[190:180]}};

assign tmp_7_fu_2260_p4 = {{position_load_reg_2981[190:180]}};

assign tmp_9_fu_1465_p3 = {{empty_38_fu_1459_p2}, {2'd0}};

assign tmp_fu_2284_p4 = {{position_q0[62:52]}};

assign tmp_s_fu_1442_p3 = {{select_ln22_2_reg_2548}, {2'd0}};

assign trunc_ln22_1_fu_901_p1 = add_ln22_1_fu_881_p2[1:0];

assign trunc_ln22_fu_647_p1 = indvars_iv68_reg_339[1:0];

assign trunc_ln23_1_fu_959_p1 = add_ln23_1_fu_953_p2[1:0];

assign trunc_ln23_fu_761_p1 = indvars_iv63_reg_374[1:0];

assign trunc_ln24_fu_1276_p1 = select_ln23_1_fu_1147_p3[1:0];

assign trunc_ln27_1_fu_1603_p1 = select_ln16_3_fu_1596_p3[62:0];

assign trunc_ln27_fu_1592_p1 = select_ln26_fu_1584_p3[58:0];

assign trunc_ln31_fu_1648_p1 = select_ln27_fu_1635_p3[60:0];

assign trunc_ln33_3_fu_1509_p1 = empty_40_fu_1486_p2[8:0];

assign trunc_ln33_4_fu_1716_p1 = p_idx_reg_459[9:0];

assign trunc_ln33_5_fu_2165_p1 = position_q0[63:0];

assign trunc_ln33_fu_1497_p1 = empty_40_fu_1486_p2[6:0];

assign trunc_ln34_4_fu_2139_p1 = force_r_q0[63:0];

assign trunc_ln34_fu_2061_p1 = grp_fu_1952_p2[3:0];

assign trunc_ln39_3_fu_1687_p1 = add_ln31_1_fu_1665_p2[8:0];

assign trunc_ln39_4_fu_2216_p1 = ap_phi_mux_q_idx_phi_fu_474_p4[9:0];

assign trunc_ln39_5_fu_2275_p1 = position_q0[63:0];

assign trunc_ln39_fu_1675_p1 = add_ln31_1_fu_1665_p2[6:0];

assign trunc_ln42_1_fu_2294_p1 = position_q0[51:0];

assign trunc_ln42_fu_2201_p1 = position_q0[51:0];

assign trunc_ln6_fu_2187_p4 = {{force_r_q0[191:128]}};

assign xor_ln22_fu_927_p2 = (icmp_ln23_fu_887_p2 ^ 1'd1);

assign zext_ln22_1_fu_1005_p1 = smax70_mid1_reg_2511;

assign zext_ln22_2_fu_1008_p1 = smax70_mid1_reg_2511;

assign zext_ln22_fu_1449_p1 = tmp_s_fu_1442_p3;

assign zext_ln23_1_fu_1095_p1 = smax8_mid1_fu_1087_p3;

assign zext_ln23_2_fu_1473_p1 = tmp_9_fu_1465_p3;

assign zext_ln23_3_fu_1162_p1 = smax65_mid1_reg_2536;

assign zext_ln23_4_fu_1165_p1 = smax65_mid1_reg_2536;

assign zext_ln23_fu_751_p1 = smax8_fu_743_p3;

assign zext_ln24_1_fu_1259_p1 = smax4_mid1_fu_1251_p3;

assign zext_ln24_fu_865_p1 = smax4_fu_857_p3;

assign zext_ln26_1_fu_1390_p1 = smax5_fu_1382_p3;

assign zext_ln26_fu_1530_p1 = p_add45_reg_2596;

assign zext_ln31_fu_1670_p1 = add_ln31_1_fu_1665_p2;

assign zext_ln33_fu_2147_p1 = add_ln33_2_reg_2787;

assign zext_ln34_10_fu_1216_p1 = shl_ln34_2_mid1_fu_1208_p3;

assign zext_ln34_11_fu_1228_p1 = shl_ln34_3_mid1_fu_1220_p3;

assign zext_ln34_12_fu_1790_p1 = $unsigned(sext_ln34_2_fu_1787_p1);

assign zext_ln34_15_fu_2065_p1 = trunc_ln34_fu_2061_p1;

assign zext_ln34_16_fu_2135_p1 = add_ln34_4_reg_2936;

assign zext_ln34_1_fu_727_p1 = shl_ln34_1_fu_719_p3;

assign zext_ln34_2_fu_829_p1 = shl_ln34_2_fu_821_p3;

assign zext_ln34_3_fu_841_p1 = shl_ln34_3_fu_833_p3;

assign zext_ln34_4_fu_1344_p1 = shl_ln34_4_fu_1336_p3;

assign zext_ln34_5_fu_1356_p1 = shl_ln34_5_fu_1348_p3;

assign zext_ln34_6_fu_1733_p1 = shl_ln34_6_fu_1725_p3;

assign zext_ln34_7_fu_1745_p1 = shl_ln34_7_fu_1737_p3;

assign zext_ln34_8_fu_1053_p1 = shl_ln34_mid1_fu_1045_p3;

assign zext_ln34_9_fu_1065_p1 = shl_ln34_1_mid1_fu_1057_p3;

assign zext_ln34_fu_715_p1 = shl_ln_fu_707_p3;

assign zext_ln35_3_fu_2143_p1 = add_ln35_2_reg_2941;

assign zext_ln36_3_fu_2161_p1 = add_ln36_2_reg_2946;

assign zext_ln39_fu_2225_p1 = add_ln39_2_fu_2220_p2;

assign zext_ln57_fu_2430_p1 = bitcast_ln57_fu_2426_p1;

assign zext_ln58_fu_2447_p1 = shl_ln1_fu_2439_p3;

always @ (posedge ap_clk) begin
    sub_ln34_reg_2470[7:0] <= 8'b00000000;
    sub_ln34_1_reg_2485[5:0] <= 6'b000000;
    select_ln23_4_reg_2581[5:0] <= 6'b000000;
    add_ln34_reg_2601[3:0] <= 4'b0000;
    select_ln23_3_cast_reg_2647[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    select_ln23_4_cast_reg_2653[5:0] <= 6'b000000;
    add_ln33_1_reg_2663[0] <= 1'b0;
    smax_cast_reg_2668[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    zext_ln26_reg_2675[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    sext_ln34_1_reg_2680[3:0] <= 4'b0000;
    add_ln39_1_reg_2764[0] <= 1'b0;
    add_ln34_2_reg_2792[2:0] <= 3'b000;
    add_ln35_reg_2825[2:0] <= 3'b000;
    add_ln36_reg_2830[2:0] <= 3'b000;
end

endmodule //md
