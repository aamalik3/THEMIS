-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity needwun is
generic (
    C_S_AXI_BUS_A_ADDR_WIDTH : INTEGER := 18;
    C_S_AXI_BUS_A_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    s_axi_BUS_A_AWVALID : IN STD_LOGIC;
    s_axi_BUS_A_AWREADY : OUT STD_LOGIC;
    s_axi_BUS_A_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_BUS_A_ADDR_WIDTH-1 downto 0);
    s_axi_BUS_A_WVALID : IN STD_LOGIC;
    s_axi_BUS_A_WREADY : OUT STD_LOGIC;
    s_axi_BUS_A_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_BUS_A_DATA_WIDTH-1 downto 0);
    s_axi_BUS_A_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_BUS_A_DATA_WIDTH/8-1 downto 0);
    s_axi_BUS_A_ARVALID : IN STD_LOGIC;
    s_axi_BUS_A_ARREADY : OUT STD_LOGIC;
    s_axi_BUS_A_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_BUS_A_ADDR_WIDTH-1 downto 0);
    s_axi_BUS_A_RVALID : OUT STD_LOGIC;
    s_axi_BUS_A_RREADY : IN STD_LOGIC;
    s_axi_BUS_A_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_BUS_A_DATA_WIDTH-1 downto 0);
    s_axi_BUS_A_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_BUS_A_BVALID : OUT STD_LOGIC;
    s_axi_BUS_A_BREADY : IN STD_LOGIC;
    s_axi_BUS_A_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of needwun is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "needwun_needwun,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.574000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=88,HLS_SYN_DSP=0,HLS_SYN_FF=1228,HLS_SYN_LUT=1899,HLS_VERSION=2020_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_pp2_stage1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_pp2_stage2 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_3C : STD_LOGIC_VECTOR (7 downto 0) := "00111100";
    constant ap_const_lv8_5C : STD_LOGIC_VECTOR (7 downto 0) := "01011100";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv8_5E : STD_LOGIC_VECTOR (7 downto 0) := "01011110";
    constant ap_const_lv8_2D : STD_LOGIC_VECTOR (7 downto 0) := "00101101";
    constant ap_const_lv8_5F : STD_LOGIC_VECTOR (7 downto 0) := "01011111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv8_81 : STD_LOGIC_VECTOR (7 downto 0) := "10000001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv9_81 : STD_LOGIC_VECTOR (8 downto 0) := "010000001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv24_1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal SEQA_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal SEQA_ce0 : STD_LOGIC;
    signal SEQA_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal SEQB_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal SEQB_ce0 : STD_LOGIC;
    signal SEQB_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal alignedA_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal alignedA_ce0 : STD_LOGIC;
    signal alignedA_we0 : STD_LOGIC;
    signal alignedA_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal alignedB_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal alignedB_ce0 : STD_LOGIC;
    signal alignedB_we0 : STD_LOGIC;
    signal alignedB_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal M_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal M_ce0 : STD_LOGIC;
    signal M_we0 : STD_LOGIC;
    signal M_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal M_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ptr_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal ptr_ce0 : STD_LOGIC;
    signal ptr_we0 : STD_LOGIC;
    signal ptr_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ptr_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_idx_2_reg_396 : STD_LOGIC_VECTOR (7 downto 0);
    signal store_forwarded_reg_408 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_str_idx_2_reg_417 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln31_fu_473_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln34_fu_501_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal add_ln39_1_fu_547_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln39_1_reg_957 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln39_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_36_fu_627_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_36_reg_966 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln39_fu_643_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln39_reg_995 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal p_cast4_fu_647_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_cast4_reg_1000 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl1_fu_650_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl1_reg_1006 : STD_LOGIC_VECTOR (14 downto 0);
    signal SEQB_load_reg_1011 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln40_fu_658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_1021 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state8_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state11_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln40_reg_1021_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln41_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln41_reg_1035 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage1 : signal is "none";
    signal ap_block_state9_pp2_stage1_iter0 : BOOLEAN;
    signal ap_block_state12_pp2_stage1_iter1 : BOOLEAN;
    signal ap_block_pp2_stage1_11001 : BOOLEAN;
    signal M_load_1_reg_1040 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal up_left_fu_719_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal up_left_reg_1050 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp2_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage2 : signal is "none";
    signal ap_block_state10_pp2_stage2_iter0 : BOOLEAN;
    signal ap_block_state13_pp2_stage2_iter1 : BOOLEAN;
    signal ap_block_pp2_stage2_11001 : BOOLEAN;
    signal up_fu_724_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal up_reg_1056 : STD_LOGIC_VECTOR (31 downto 0);
    signal left_fu_730_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal left_reg_1062 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln54_fu_736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln54_reg_1068 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln56_1_fu_742_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln56_1_reg_1073 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln40_fu_747_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln40_reg_1078 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_fu_763_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_reg_1083 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal zext_ln56_1_fu_778_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln56_1_reg_1089 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln39_fu_794_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal b_idx_4_reg_1105 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_block_state15_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state16_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state17_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal a_idx_4_reg_1110 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln73_fu_818_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln73_reg_1115 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln73_reg_1115_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln77_fu_861_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln77_reg_1124 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ptr_load_reg_1129 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln29_fu_887_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln29_reg_1153 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal icmp_ln94_fu_901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln94_fu_918_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal icmp_ln94_1_fu_907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln97_fu_935_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal icmp_ln97_fu_924_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp2_stage2_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state10 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_flush_enable : STD_LOGIC;
    signal ap_condition_pp3_exit_iter1_state16 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal a_idx_reg_351 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln31_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_idx_reg_362 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln34_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal indvar_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal b_idx_1_reg_384 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_a_idx_2_phi_fu_400_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_phi_mux_store_forwarded_phi_fu_411_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp2_stage2 : BOOLEAN;
    signal ap_phi_mux_b_str_idx_2_phi_fu_427_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal a_str_idx_1_reg_435 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_str_idx_reg_444 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal trunc_ln32_cast_fu_485_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln35_fu_531_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8_fu_606_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast7_fu_595_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln41_fu_670_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln50_fu_684_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln51_fu_703_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage1 : BOOLEAN;
    signal icmp_ln57_fu_784_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ptr_addr_1_gep_fu_214_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln75_fu_856_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln82_fu_867_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln76_fu_872_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_fu_877_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln88_fu_882_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal alignedA_addr_1_gep_fu_299_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal alignedB_addr_1_gep_fu_307_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal alignedA_addr_gep_fu_316_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal alignedB_addr_gep_fu_325_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_str_idx_1_cast_fu_913_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_str_idx_cast_fu_930_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_idx_2_fu_120 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_463_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_b_idx_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_idx_1_fu_124 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_453_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_a_idx_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln32_fu_496_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln35_fu_542_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln59_fu_789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln32_fu_490_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln_fu_517_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln35_cast_fu_513_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln35_fu_525_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln35_fu_536_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_32_fu_563_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl3_fu_567_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln39_1_fu_559_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_579_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_cast_fu_585_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl3_cast_fu_575_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_33_fu_589_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_34_fu_600_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_35_fu_615_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl2_fu_619_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_cast_fu_611_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln41_fu_664_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln41_1_fu_675_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln50_fu_679_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal a_idx_2_cast_fu_689_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln51_fu_698_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln50_fu_712_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_idx_2_cast6_fu_708_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln54_fu_753_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln54_1_fu_758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln56_fu_770_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln56_fu_773_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln73_fu_806_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln73_1_fu_812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln74_fu_832_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_39_fu_828_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_38_fu_824_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln75_1_fu_844_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1_fu_836_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln75_fu_850_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_1_fu_891_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_block_pp2_stage1_subdone : BOOLEAN;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_condition_400 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component needwun_BUS_A_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        SEQA_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        SEQA_ce0 : IN STD_LOGIC;
        SEQA_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        SEQB_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        SEQB_ce0 : IN STD_LOGIC;
        SEQB_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        alignedA_address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        alignedA_ce0 : IN STD_LOGIC;
        alignedA_we0 : IN STD_LOGIC;
        alignedA_d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        alignedB_address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        alignedB_ce0 : IN STD_LOGIC;
        alignedB_we0 : IN STD_LOGIC;
        alignedB_d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ptr_address0 : IN STD_LOGIC_VECTOR (14 downto 0);
        ptr_ce0 : IN STD_LOGIC;
        ptr_we0 : IN STD_LOGIC;
        ptr_d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ptr_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        M_address0 : IN STD_LOGIC_VECTOR (14 downto 0);
        M_ce0 : IN STD_LOGIC;
        M_we0 : IN STD_LOGIC;
        M_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        M_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    BUS_A_s_axi_U : component needwun_BUS_A_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_BUS_A_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_BUS_A_DATA_WIDTH)
    port map (
        AWVALID => s_axi_BUS_A_AWVALID,
        AWREADY => s_axi_BUS_A_AWREADY,
        AWADDR => s_axi_BUS_A_AWADDR,
        WVALID => s_axi_BUS_A_WVALID,
        WREADY => s_axi_BUS_A_WREADY,
        WDATA => s_axi_BUS_A_WDATA,
        WSTRB => s_axi_BUS_A_WSTRB,
        ARVALID => s_axi_BUS_A_ARVALID,
        ARREADY => s_axi_BUS_A_ARREADY,
        ARADDR => s_axi_BUS_A_ARADDR,
        RVALID => s_axi_BUS_A_RVALID,
        RREADY => s_axi_BUS_A_RREADY,
        RDATA => s_axi_BUS_A_RDATA,
        RRESP => s_axi_BUS_A_RRESP,
        BVALID => s_axi_BUS_A_BVALID,
        BREADY => s_axi_BUS_A_BREADY,
        BRESP => s_axi_BUS_A_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        SEQA_address0 => SEQA_address0,
        SEQA_ce0 => SEQA_ce0,
        SEQA_q0 => SEQA_q0,
        SEQB_address0 => SEQB_address0,
        SEQB_ce0 => SEQB_ce0,
        SEQB_q0 => SEQB_q0,
        alignedA_address0 => alignedA_address0,
        alignedA_ce0 => alignedA_ce0,
        alignedA_we0 => alignedA_we0,
        alignedA_d0 => alignedA_d0,
        alignedB_address0 => alignedB_address0,
        alignedB_ce0 => alignedB_ce0,
        alignedB_we0 => alignedB_we0,
        alignedB_d0 => alignedB_d0,
        ptr_address0 => ptr_address0,
        ptr_ce0 => ptr_ce0,
        ptr_we0 => ptr_we0,
        ptr_d0 => ptr_d0,
        ptr_q0 => ptr_q0,
        M_address0 => M_address0,
        M_ce0 => M_ce0,
        M_we0 => M_we0,
        M_d0 => M_d0,
        M_q0 => M_q0,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state10) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2_subdone))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state10) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2_subdone))) then 
                    ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state10);
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2_subdone))) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp3_flush_enable)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln39_fu_553_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                elsif ((((ap_enable_reg_pp3_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_condition_pp3_exit_iter1_state16) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln39_fu_553_p2 = ap_const_lv1_1)))) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp3_exit_iter1_state16) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter0;
                elsif ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln39_fu_553_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    a_idx_1_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln39_fu_553_p2 = ap_const_lv1_1))) then 
                a_idx_1_fu_124 <= ap_const_lv32_80;
            elsif ((((ptr_q0 = ap_const_lv8_5C) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (or_ln73_reg_1115 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ptr_q0 = ap_const_lv8_3C) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (or_ln73_reg_1115 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
                a_idx_1_fu_124 <= grp_fu_453_p2;
            end if; 
        end if;
    end process;

    a_idx_2_reg_396_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln40_reg_1021 = ap_const_lv1_0))) then 
                a_idx_2_reg_396 <= add_ln40_reg_1078;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                a_idx_2_reg_396 <= ap_const_lv8_1;
            end if; 
        end if;
    end process;

    a_idx_reg_351_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                a_idx_reg_351 <= ap_const_lv8_0;
            elsif (((icmp_ln31_fu_479_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                a_idx_reg_351 <= add_ln31_fu_473_p2;
            end if; 
        end if;
    end process;

    a_str_idx_1_reg_435_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln94_fu_901_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                a_str_idx_1_reg_435 <= trunc_ln29_fu_887_p1;
            elsif (((icmp_ln94_1_fu_907_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                a_str_idx_1_reg_435 <= add_ln94_fu_918_p2;
            end if; 
        end if;
    end process;

    b_idx_1_reg_384_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                b_idx_1_reg_384 <= ap_const_lv8_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                b_idx_1_reg_384 <= add_ln39_fu_794_p2;
            end if; 
        end if;
    end process;

    b_idx_2_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln39_fu_553_p2 = ap_const_lv1_1))) then 
                b_idx_2_fu_120 <= ap_const_lv32_80;
            elsif (((not((ptr_q0 = ap_const_lv8_5C)) and not((ptr_q0 = ap_const_lv8_3C)) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (or_ln73_reg_1115 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ptr_q0 = ap_const_lv8_5C) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (or_ln73_reg_1115 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
                b_idx_2_fu_120 <= grp_fu_463_p2;
            end if; 
        end if;
    end process;

    b_idx_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                b_idx_reg_362 <= ap_const_lv8_0;
            elsif (((icmp_ln34_fu_507_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                b_idx_reg_362 <= add_ln34_fu_501_p2;
            end if; 
        end if;
    end process;

    b_str_idx_2_reg_417_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln39_fu_553_p2 = ap_const_lv1_1))) then 
                b_str_idx_2_reg_417 <= ap_const_lv64_0;
            elsif (((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (or_ln73_reg_1115_pp3_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                b_str_idx_2_reg_417 <= add_ln77_reg_1124;
            end if; 
        end if;
    end process;

    b_str_idx_reg_444_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                b_str_idx_reg_444 <= trunc_ln29_reg_1153;
            elsif (((icmp_ln97_fu_924_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                b_str_idx_reg_444 <= add_ln97_fu_935_p2;
            end if; 
        end if;
    end process;

    indvar_reg_373_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                indvar_reg_373 <= ap_const_lv8_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                indvar_reg_373 <= add_ln39_1_reg_957;
            end if; 
        end if;
    end process;

    store_forwarded_reg_408_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (icmp_ln40_reg_1021_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage2_11001))) then 
                store_forwarded_reg_408 <= max_reg_1083;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                store_forwarded_reg_408 <= M_q0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (icmp_ln40_reg_1021 = ap_const_lv1_0))) then
                M_load_1_reg_1040 <= M_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                SEQB_load_reg_1011 <= SEQB_q0;
                    p_cast4_reg_1000(13 downto 0) <= p_cast4_fu_647_p1(13 downto 0);
                    p_shl1_reg_1006(14 downto 7) <= p_shl1_fu_650_p3(14 downto 7);
                    zext_ln39_reg_995(7 downto 0) <= zext_ln39_fu_643_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                a_idx_4_reg_1110 <= ap_sig_allocacmp_a_idx_4;
                b_idx_4_reg_1105 <= ap_sig_allocacmp_b_idx_4;
                or_ln73_reg_1115 <= or_ln73_fu_818_p2;
                or_ln73_reg_1115_pp3_iter1_reg <= or_ln73_reg_1115;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln39_1_reg_957 <= add_ln39_1_fu_547_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (icmp_ln40_reg_1021 = ap_const_lv1_0))) then
                add_ln40_reg_1078 <= add_ln40_fu_747_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (icmp_ln40_reg_1021 = ap_const_lv1_0))) then
                add_ln56_1_reg_1073 <= add_ln56_1_fu_742_p2;
                icmp_ln54_reg_1068 <= icmp_ln54_fu_736_p2;
                left_reg_1062 <= left_fu_730_p2;
                up_left_reg_1050 <= up_left_fu_719_p2;
                up_reg_1056 <= up_fu_724_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                add_ln77_reg_1124 <= add_ln77_fu_861_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln39_fu_553_p2 = ap_const_lv1_0))) then
                empty_36_reg_966 <= empty_36_fu_627_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                icmp_ln40_reg_1021 <= icmp_ln40_fu_658_p2;
                icmp_ln40_reg_1021_pp2_iter1_reg <= icmp_ln40_reg_1021;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (icmp_ln40_reg_1021 = ap_const_lv1_0))) then
                icmp_ln41_reg_1035 <= icmp_ln41_fu_693_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln40_reg_1021 = ap_const_lv1_0))) then
                max_reg_1083 <= max_fu_763_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (or_ln73_reg_1115 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                ptr_load_reg_1129 <= ptr_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                trunc_ln29_reg_1153 <= trunc_ln29_fu_887_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln40_reg_1021 = ap_const_lv1_0))) then
                    zext_ln56_1_reg_1089(14 downto 0) <= zext_ln56_1_fu_778_p1(14 downto 0);
            end if;
        end if;
    end process;
    zext_ln39_reg_995(8) <= '0';
    p_cast4_reg_1000(14) <= '0';
    p_shl1_reg_1006(6 downto 0) <= "0000000";
    zext_ln56_1_reg_1089(63 downto 15) <= "0000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, icmp_ln39_fu_553_p2, icmp_ln40_reg_1021, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_state18, icmp_ln94_fu_901_p2, ap_CS_fsm_state19, icmp_ln94_1_fu_907_p2, ap_CS_fsm_state21, icmp_ln97_fu_924_p2, ap_block_pp2_stage2_subdone, ap_enable_reg_pp3_iter0, ap_block_pp3_stage0_subdone, icmp_ln31_fu_479_p2, icmp_ln34_fu_507_p2, ap_block_pp2_stage0_subdone, ap_block_pp2_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln31_fu_479_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln34_fu_507_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln39_fu_553_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                end if;
            when ap_ST_fsm_pp2_stage2 => 
                if ((not(((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2_subdone) and (icmp_ln40_reg_1021 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp2_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2_subdone) and (icmp_ln40_reg_1021 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_pp3_stage0 => 
                if (not(((ap_enable_reg_pp3_iter0 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state18 => 
                if (((icmp_ln94_fu_901_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state19 => 
                if (((icmp_ln94_1_fu_907_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((icmp_ln97_fu_924_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;

    M_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage2, ap_enable_reg_pp2_iter1, zext_ln56_1_reg_1089, ap_block_pp2_stage0, ap_block_pp2_stage2, trunc_ln32_cast_fu_485_p1, zext_ln35_fu_531_p1, p_cast7_fu_595_p1, zext_ln50_fu_684_p1, zext_ln51_fu_703_p1, ap_block_pp2_stage1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2))) then 
            M_address0 <= zext_ln56_1_reg_1089(15 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
            M_address0 <= zext_ln51_fu_703_p1(15 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            M_address0 <= zext_ln50_fu_684_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            M_address0 <= p_cast7_fu_595_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            M_address0 <= zext_ln35_fu_531_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            M_address0 <= trunc_ln32_cast_fu_485_p1(15 - 1 downto 0);
        else 
            M_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    M_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            M_ce0 <= ap_const_logic_1;
        else 
            M_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    M_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_pp2_stage2, max_reg_1083, ap_enable_reg_pp2_iter1, ap_block_pp2_stage2, sext_ln32_fu_496_p1, sext_ln35_fu_542_p1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2))) then 
            M_d0 <= max_reg_1083;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            M_d0 <= sext_ln35_fu_542_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            M_d0 <= sext_ln32_fu_496_p1;
        else 
            M_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    M_we0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, icmp_ln40_reg_1021_pp2_iter1_reg, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_enable_reg_pp2_iter1, icmp_ln31_fu_479_p2, icmp_ln34_fu_507_p2)
    begin
        if ((((icmp_ln34_fu_507_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((icmp_ln31_fu_479_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (icmp_ln40_reg_1021_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage2_11001)))) then 
            M_we0 <= ap_const_logic_1;
        else 
            M_we0 <= ap_const_logic_0;
        end if; 
    end process;


    SEQA_address0_assign_proc : process(ptr_q0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage0, or_ln73_reg_1115, ap_enable_reg_pp3_iter1, ap_block_pp2_stage0, ap_block_pp3_stage0, zext_ln41_fu_670_p1, zext_ln82_fu_867_p1, zext_ln76_fu_872_p1)
    begin
        if (((ptr_q0 = ap_const_lv8_5C) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (or_ln73_reg_1115 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            SEQA_address0 <= zext_ln76_fu_872_p1(7 - 1 downto 0);
        elsif (((ptr_q0 = ap_const_lv8_3C) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (or_ln73_reg_1115 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            SEQA_address0 <= zext_ln82_fu_867_p1(7 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            SEQA_address0 <= zext_ln41_fu_670_p1(7 - 1 downto 0);
        else 
            SEQA_address0 <= "XXXXXXX";
        end if; 
    end process;


    SEQA_ce0_assign_proc : process(ptr_q0, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, or_ln73_reg_1115, ap_enable_reg_pp3_iter1)
    begin
        if ((((ptr_q0 = ap_const_lv8_5C) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (or_ln73_reg_1115 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ptr_q0 = ap_const_lv8_3C) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (or_ln73_reg_1115 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            SEQA_ce0 <= ap_const_logic_1;
        else 
            SEQA_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    SEQB_address0_assign_proc : process(ptr_q0, ap_CS_fsm_state6, ap_CS_fsm_pp3_stage0, or_ln73_reg_1115, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, p_cast8_fu_606_p1, zext_ln77_fu_877_p1, zext_ln88_fu_882_p1)
    begin
        if ((not((ptr_q0 = ap_const_lv8_5C)) and not((ptr_q0 = ap_const_lv8_3C)) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (or_ln73_reg_1115 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            SEQB_address0 <= zext_ln88_fu_882_p1(7 - 1 downto 0);
        elsif (((ptr_q0 = ap_const_lv8_5C) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (or_ln73_reg_1115 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            SEQB_address0 <= zext_ln77_fu_877_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            SEQB_address0 <= p_cast8_fu_606_p1(7 - 1 downto 0);
        else 
            SEQB_address0 <= "XXXXXXX";
        end if; 
    end process;


    SEQB_ce0_assign_proc : process(ptr_q0, ap_CS_fsm_state6, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, or_ln73_reg_1115, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (not((ptr_q0 = ap_const_lv8_5C)) and not((ptr_q0 = ap_const_lv8_3C)) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (or_ln73_reg_1115 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ptr_q0 = ap_const_lv8_5C) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (or_ln73_reg_1115 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            SEQB_ce0 <= ap_const_logic_1;
        else 
            SEQB_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    a_idx_2_cast6_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_idx_2_reg_396),9));
    a_idx_2_cast_fu_689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_idx_2_reg_396),15));
    a_str_idx_1_cast_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_str_idx_1_reg_435),64));
    add_ln31_fu_473_p2 <= std_logic_vector(unsigned(a_idx_reg_351) + unsigned(ap_const_lv8_1));
    add_ln34_fu_501_p2 <= std_logic_vector(unsigned(b_idx_reg_362) + unsigned(ap_const_lv8_1));
    add_ln35_fu_525_p2 <= std_logic_vector(unsigned(shl_ln_fu_517_p3) + unsigned(trunc_ln35_cast_fu_513_p1));
    add_ln39_1_fu_547_p2 <= std_logic_vector(unsigned(indvar_reg_373) + unsigned(ap_const_lv8_1));
    add_ln39_fu_794_p2 <= std_logic_vector(unsigned(b_idx_1_reg_384) + unsigned(ap_const_lv8_1));
    add_ln40_fu_747_p2 <= std_logic_vector(unsigned(a_idx_2_reg_396) + unsigned(ap_const_lv8_1));
    add_ln41_fu_664_p2 <= std_logic_vector(unsigned(ap_phi_mux_a_idx_2_phi_fu_400_p4) + unsigned(ap_const_lv8_FF));
    add_ln50_fu_679_p2 <= std_logic_vector(unsigned(zext_ln41_1_fu_675_p1) + unsigned(p_cast4_reg_1000));
    add_ln51_fu_698_p2 <= std_logic_vector(unsigned(a_idx_2_cast_fu_689_p1) + unsigned(p_cast4_reg_1000));
    add_ln56_1_fu_742_p2 <= std_logic_vector(unsigned(zext_ln39_reg_995) + unsigned(a_idx_2_cast6_fu_708_p1));
    add_ln56_fu_773_p2 <= std_logic_vector(unsigned(zext_ln56_fu_770_p1) + unsigned(p_shl1_reg_1006));
    add_ln75_1_fu_844_p2 <= std_logic_vector(unsigned(empty_39_fu_828_p1) + unsigned(empty_38_fu_824_p1));
    add_ln75_fu_850_p2 <= std_logic_vector(unsigned(add_ln75_1_fu_844_p2) + unsigned(shl_ln1_fu_836_p3));
    add_ln77_fu_861_p2 <= std_logic_vector(unsigned(ap_phi_mux_b_str_idx_2_phi_fu_427_p4) + unsigned(ap_const_lv64_1));
    add_ln94_fu_918_p2 <= std_logic_vector(unsigned(a_str_idx_1_reg_435) + unsigned(ap_const_lv32_1));
    add_ln97_fu_935_p2 <= std_logic_vector(unsigned(b_str_idx_reg_444) + unsigned(ap_const_lv32_1));
    alignedA_addr_1_gep_fu_299_p3 <= b_str_idx_2_reg_417(8 - 1 downto 0);
    alignedA_addr_gep_fu_316_p3 <= b_str_idx_2_reg_417(8 - 1 downto 0);

    alignedA_address0_assign_proc : process(b_str_idx_2_reg_417, ptr_load_reg_1129, ap_CS_fsm_state19, ap_enable_reg_pp3_iter2, ap_block_pp3_stage0, alignedA_addr_1_gep_fu_299_p3, alignedA_addr_gep_fu_316_p3, a_str_idx_1_cast_fu_913_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            alignedA_address0 <= a_str_idx_1_cast_fu_913_p1(8 - 1 downto 0);
        elsif ((not((ptr_load_reg_1129 = ap_const_lv8_5C)) and not((ptr_load_reg_1129 = ap_const_lv8_3C)) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            alignedA_address0 <= alignedA_addr_gep_fu_316_p3;
        elsif (((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ptr_load_reg_1129 = ap_const_lv8_5C) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            alignedA_address0 <= alignedA_addr_1_gep_fu_299_p3;
        elsif (((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ptr_load_reg_1129 = ap_const_lv8_3C) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            alignedA_address0 <= b_str_idx_2_reg_417(8 - 1 downto 0);
        else 
            alignedA_address0 <= "XXXXXXXX";
        end if; 
    end process;


    alignedA_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ptr_load_reg_1129, ap_CS_fsm_state19, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (not((ptr_load_reg_1129 = ap_const_lv8_5C)) and not((ptr_load_reg_1129 = ap_const_lv8_3C)) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ptr_load_reg_1129 = ap_const_lv8_5C) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ptr_load_reg_1129 = ap_const_lv8_3C) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            alignedA_ce0 <= ap_const_logic_1;
        else 
            alignedA_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    alignedA_d0_assign_proc : process(SEQA_q0, ptr_load_reg_1129, ap_CS_fsm_state19, ap_enable_reg_pp3_iter2, ap_block_pp3_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            alignedA_d0 <= ap_const_lv8_5F;
        elsif ((not((ptr_load_reg_1129 = ap_const_lv8_5C)) and not((ptr_load_reg_1129 = ap_const_lv8_3C)) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            alignedA_d0 <= ap_const_lv8_2D;
        elsif ((((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ptr_load_reg_1129 = ap_const_lv8_5C) and (ap_const_boolean_0 = ap_block_pp3_stage0)) or ((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ptr_load_reg_1129 = ap_const_lv8_3C) and (ap_const_boolean_0 = ap_block_pp3_stage0)))) then 
            alignedA_d0 <= SEQA_q0;
        else 
            alignedA_d0 <= "XXXXXXXX";
        end if; 
    end process;


    alignedA_we0_assign_proc : process(ap_block_pp3_stage0_11001, ptr_load_reg_1129, ap_CS_fsm_state19, icmp_ln94_1_fu_907_p2, ap_enable_reg_pp3_iter2)
    begin
        if (((not((ptr_load_reg_1129 = ap_const_lv8_5C)) and not((ptr_load_reg_1129 = ap_const_lv8_3C)) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ptr_load_reg_1129 = ap_const_lv8_5C) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ptr_load_reg_1129 = ap_const_lv8_3C) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((icmp_ln94_1_fu_907_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            alignedA_we0 <= ap_const_logic_1;
        else 
            alignedA_we0 <= ap_const_logic_0;
        end if; 
    end process;

    alignedB_addr_1_gep_fu_307_p3 <= b_str_idx_2_reg_417(8 - 1 downto 0);
    alignedB_addr_gep_fu_325_p3 <= b_str_idx_2_reg_417(8 - 1 downto 0);

    alignedB_address0_assign_proc : process(b_str_idx_2_reg_417, ptr_load_reg_1129, ap_CS_fsm_state21, ap_enable_reg_pp3_iter2, ap_block_pp3_stage0, alignedB_addr_1_gep_fu_307_p3, alignedB_addr_gep_fu_325_p3, b_str_idx_cast_fu_930_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            alignedB_address0 <= b_str_idx_cast_fu_930_p1(8 - 1 downto 0);
        elsif ((not((ptr_load_reg_1129 = ap_const_lv8_5C)) and not((ptr_load_reg_1129 = ap_const_lv8_3C)) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            alignedB_address0 <= alignedB_addr_gep_fu_325_p3;
        elsif (((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ptr_load_reg_1129 = ap_const_lv8_5C) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            alignedB_address0 <= alignedB_addr_1_gep_fu_307_p3;
        elsif (((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ptr_load_reg_1129 = ap_const_lv8_3C) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            alignedB_address0 <= b_str_idx_2_reg_417(8 - 1 downto 0);
        else 
            alignedB_address0 <= "XXXXXXXX";
        end if; 
    end process;


    alignedB_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ptr_load_reg_1129, ap_CS_fsm_state21, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (not((ptr_load_reg_1129 = ap_const_lv8_5C)) and not((ptr_load_reg_1129 = ap_const_lv8_3C)) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ptr_load_reg_1129 = ap_const_lv8_5C) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ptr_load_reg_1129 = ap_const_lv8_3C) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            alignedB_ce0 <= ap_const_logic_1;
        else 
            alignedB_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    alignedB_d0_assign_proc : process(SEQB_q0, ptr_load_reg_1129, ap_CS_fsm_state21, ap_enable_reg_pp3_iter2, ap_block_pp3_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            alignedB_d0 <= ap_const_lv8_5F;
        elsif (((not((ptr_load_reg_1129 = ap_const_lv8_5C)) and not((ptr_load_reg_1129 = ap_const_lv8_3C)) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0)) or ((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ptr_load_reg_1129 = ap_const_lv8_5C) and (ap_const_boolean_0 = ap_block_pp3_stage0)))) then 
            alignedB_d0 <= SEQB_q0;
        elsif (((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ptr_load_reg_1129 = ap_const_lv8_3C) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            alignedB_d0 <= ap_const_lv8_2D;
        else 
            alignedB_d0 <= "XXXXXXXX";
        end if; 
    end process;


    alignedB_we0_assign_proc : process(ap_block_pp3_stage0_11001, ptr_load_reg_1129, ap_CS_fsm_state21, icmp_ln97_fu_924_p2, ap_enable_reg_pp3_iter2)
    begin
        if (((not((ptr_load_reg_1129 = ap_const_lv8_5C)) and not((ptr_load_reg_1129 = ap_const_lv8_3C)) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ptr_load_reg_1129 = ap_const_lv8_5C) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ptr_load_reg_1129 = ap_const_lv8_3C) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((icmp_ln97_fu_924_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21)))) then 
            alignedB_we0 <= ap_const_logic_1;
        else 
            alignedB_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_pp2_stage1 <= ap_CS_fsm(8);
    ap_CS_fsm_pp2_stage2 <= ap_CS_fsm(9);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(11);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state14 <= ap_CS_fsm(10);
    ap_CS_fsm_state18 <= ap_CS_fsm(12);
    ap_CS_fsm_state19 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(14);
    ap_CS_fsm_state21 <= ap_CS_fsm(15);
    ap_CS_fsm_state22 <= ap_CS_fsm(16);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp2_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp2_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp2_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp2_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_400_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
                ap_condition_400 <= ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0));
    end process;


    ap_condition_pp2_exit_iter0_state10_assign_proc : process(icmp_ln40_reg_1021)
    begin
        if ((icmp_ln40_reg_1021 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state10 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter1_state16_assign_proc : process(ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter0)
    begin
        if (((ap_enable_reg_pp3_iter0 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1))) then 
            ap_condition_pp3_exit_iter1_state16 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter1_state16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_flush_enable_assign_proc : process(ap_CS_fsm_pp3_stage0, or_ln73_fu_818_p2, ap_block_pp3_stage0_subdone)
    begin
        if (((or_ln73_fu_818_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then 
            ap_condition_pp3_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp3_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_a_idx_2_phi_fu_400_p4_assign_proc : process(a_idx_2_reg_396, icmp_ln40_reg_1021, ap_CS_fsm_pp2_stage0, add_ln40_reg_1078, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (icmp_ln40_reg_1021 = ap_const_lv1_0))) then 
            ap_phi_mux_a_idx_2_phi_fu_400_p4 <= add_ln40_reg_1078;
        else 
            ap_phi_mux_a_idx_2_phi_fu_400_p4 <= a_idx_2_reg_396;
        end if; 
    end process;


    ap_phi_mux_b_str_idx_2_phi_fu_427_p4_assign_proc : process(b_str_idx_2_reg_417, or_ln73_reg_1115_pp3_iter1_reg, add_ln77_reg_1124, ap_enable_reg_pp3_iter2, ap_block_pp3_stage0)
    begin
        if (((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (or_ln73_reg_1115_pp3_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            ap_phi_mux_b_str_idx_2_phi_fu_427_p4 <= add_ln77_reg_1124;
        else 
            ap_phi_mux_b_str_idx_2_phi_fu_427_p4 <= b_str_idx_2_reg_417;
        end if; 
    end process;


    ap_phi_mux_store_forwarded_phi_fu_411_p4_assign_proc : process(store_forwarded_reg_408, icmp_ln40_reg_1021_pp2_iter1_reg, ap_CS_fsm_pp2_stage2, max_reg_1083, ap_enable_reg_pp2_iter1, ap_block_pp2_stage2)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (icmp_ln40_reg_1021_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage2))) then 
            ap_phi_mux_store_forwarded_phi_fu_411_p4 <= max_reg_1083;
        else 
            ap_phi_mux_store_forwarded_phi_fu_411_p4 <= store_forwarded_reg_408;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_allocacmp_a_idx_4_assign_proc : process(ptr_q0, ap_CS_fsm_pp3_stage0, or_ln73_reg_1115, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, a_idx_1_fu_124, grp_fu_453_p2)
    begin
        if ((((ptr_q0 = ap_const_lv8_5C) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (or_ln73_reg_1115 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0)) or ((ptr_q0 = ap_const_lv8_3C) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (or_ln73_reg_1115 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0)))) then 
            ap_sig_allocacmp_a_idx_4 <= grp_fu_453_p2;
        else 
            ap_sig_allocacmp_a_idx_4 <= a_idx_1_fu_124;
        end if; 
    end process;


    ap_sig_allocacmp_b_idx_4_assign_proc : process(ptr_q0, ap_CS_fsm_pp3_stage0, or_ln73_reg_1115, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, b_idx_2_fu_120, grp_fu_463_p2)
    begin
        if (((not((ptr_q0 = ap_const_lv8_5C)) and not((ptr_q0 = ap_const_lv8_3C)) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (or_ln73_reg_1115 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0)) or ((ptr_q0 = ap_const_lv8_5C) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (or_ln73_reg_1115 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0)))) then 
            ap_sig_allocacmp_b_idx_4 <= grp_fu_463_p2;
        else 
            ap_sig_allocacmp_b_idx_4 <= b_idx_2_fu_120;
        end if; 
    end process;

    b_str_idx_cast_fu_930_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_str_idx_reg_444),64));
    empty_32_fu_563_p1 <= indvar_reg_373(7 - 1 downto 0);
    empty_33_fu_589_p2 <= std_logic_vector(unsigned(tmp_cast_fu_585_p1) + unsigned(p_shl3_cast_fu_575_p1));
    empty_34_fu_600_p2 <= std_logic_vector(unsigned(b_idx_1_reg_384) + unsigned(ap_const_lv8_FF));
    empty_35_fu_615_p1 <= empty_34_fu_600_p2(7 - 1 downto 0);
    empty_36_fu_627_p2 <= std_logic_vector(unsigned(p_shl2_fu_619_p3) + unsigned(p_cast_fu_611_p1));
    empty_38_fu_824_p1 <= ap_sig_allocacmp_a_idx_4(15 - 1 downto 0);
    empty_39_fu_828_p1 <= ap_sig_allocacmp_b_idx_4(15 - 1 downto 0);
    grp_fu_453_p2 <= std_logic_vector(unsigned(a_idx_4_reg_1110) + unsigned(ap_const_lv32_FFFFFFFF));
    grp_fu_463_p2 <= std_logic_vector(unsigned(b_idx_4_reg_1105) + unsigned(ap_const_lv32_FFFFFFFF));
    icmp_ln31_fu_479_p2 <= "1" when (a_idx_reg_351 = ap_const_lv8_81) else "0";
    icmp_ln34_fu_507_p2 <= "1" when (b_idx_reg_362 = ap_const_lv8_81) else "0";
    icmp_ln39_fu_553_p2 <= "1" when (b_idx_1_reg_384 = ap_const_lv8_81) else "0";
    icmp_ln40_fu_658_p2 <= "1" when (ap_phi_mux_a_idx_2_phi_fu_400_p4 = ap_const_lv8_81) else "0";
    icmp_ln41_fu_693_p2 <= "1" when (SEQA_q0 = SEQB_load_reg_1011) else "0";
    icmp_ln54_1_fu_758_p2 <= "1" when (signed(up_left_reg_1050) > signed(select_ln54_fu_753_p3)) else "0";
    icmp_ln54_fu_736_p2 <= "1" when (signed(up_fu_724_p2) > signed(left_fu_730_p2)) else "0";
    icmp_ln57_fu_784_p2 <= "1" when (max_fu_763_p3 = left_reg_1062) else "0";
    icmp_ln59_fu_789_p2 <= "1" when (max_fu_763_p3 = up_reg_1056) else "0";
    icmp_ln73_1_fu_812_p2 <= "1" when (signed(ap_sig_allocacmp_b_idx_4) > signed(ap_const_lv32_0)) else "0";
    icmp_ln73_fu_806_p2 <= "1" when (signed(ap_sig_allocacmp_a_idx_4) > signed(ap_const_lv32_0)) else "0";
    icmp_ln94_1_fu_907_p2 <= "1" when (a_str_idx_1_reg_435 = ap_const_lv32_100) else "0";
    icmp_ln94_fu_901_p2 <= "1" when (signed(tmp_1_fu_891_p4) < signed(ap_const_lv24_1)) else "0";
    icmp_ln97_fu_924_p2 <= "1" when (b_str_idx_reg_444 = ap_const_lv32_100) else "0";
    left_fu_730_p2 <= std_logic_vector(unsigned(ap_phi_mux_store_forwarded_phi_fu_411_p4) + unsigned(ap_const_lv32_FFFFFFFF));
    max_fu_763_p3 <= 
        up_left_reg_1050 when (icmp_ln54_1_fu_758_p2(0) = '1') else 
        select_ln54_fu_753_p3;
    or_ln73_fu_818_p2 <= (icmp_ln73_fu_806_p2 or icmp_ln73_1_fu_812_p2);
    p_cast4_fu_647_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_36_reg_966),15));
    p_cast7_fu_595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_33_fu_589_p2),64));
    p_cast8_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_34_fu_600_p2),64));
    p_cast_fu_611_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_34_fu_600_p2),14));
    p_shl1_fu_650_p3 <= (b_idx_1_reg_384 & ap_const_lv7_0);
    p_shl2_fu_619_p3 <= (empty_35_fu_615_p1 & ap_const_lv7_0);
    p_shl3_cast_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_fu_567_p3),15));
    p_shl3_fu_567_p3 <= (empty_32_fu_563_p1 & ap_const_lv7_0);
    ptr_addr_1_gep_fu_214_p3 <= zext_ln56_1_fu_778_p1(15 - 1 downto 0);

    ptr_address0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, zext_ln56_1_fu_778_p1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_block_pp2_stage0, ap_block_pp3_stage0, icmp_ln57_fu_784_p2, ptr_addr_1_gep_fu_214_p3, zext_ln75_fu_856_p1, icmp_ln59_fu_789_p2)
    begin
        if (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            ptr_address0 <= zext_ln75_fu_856_p1(15 - 1 downto 0);
        elsif (((icmp_ln57_fu_784_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            ptr_address0 <= ptr_addr_1_gep_fu_214_p3;
        elsif ((((icmp_ln59_fu_789_p2 = ap_const_lv1_1) and (icmp_ln57_fu_784_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0)) or ((icmp_ln59_fu_789_p2 = ap_const_lv1_0) and (icmp_ln57_fu_784_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            ptr_address0 <= zext_ln56_1_fu_778_p1(15 - 1 downto 0);
        else 
            ptr_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    ptr_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, icmp_ln57_fu_784_p2, icmp_ln59_fu_789_p2)
    begin
        if ((((icmp_ln59_fu_789_p2 = ap_const_lv1_1) and (icmp_ln57_fu_784_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((icmp_ln59_fu_789_p2 = ap_const_lv1_0) and (icmp_ln57_fu_784_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((icmp_ln57_fu_784_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            ptr_ce0 <= ap_const_logic_1;
        else 
            ptr_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ptr_d0_assign_proc : process(icmp_ln57_fu_784_p2, icmp_ln59_fu_789_p2, ap_condition_400)
    begin
        if ((ap_const_boolean_1 = ap_condition_400)) then
            if ((icmp_ln57_fu_784_p2 = ap_const_lv1_1)) then 
                ptr_d0 <= ap_const_lv8_3C;
            elsif (((icmp_ln59_fu_789_p2 = ap_const_lv1_1) and (icmp_ln57_fu_784_p2 = ap_const_lv1_0))) then 
                ptr_d0 <= ap_const_lv8_5E;
            elsif (((icmp_ln59_fu_789_p2 = ap_const_lv1_0) and (icmp_ln57_fu_784_p2 = ap_const_lv1_0))) then 
                ptr_d0 <= ap_const_lv8_5C;
            else 
                ptr_d0 <= "XXXXXXXX";
            end if;
        else 
            ptr_d0 <= "XXXXXXXX";
        end if; 
    end process;


    ptr_we0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1, icmp_ln57_fu_784_p2, icmp_ln59_fu_789_p2)
    begin
        if ((((icmp_ln59_fu_789_p2 = ap_const_lv1_1) and (icmp_ln57_fu_784_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((icmp_ln59_fu_789_p2 = ap_const_lv1_0) and (icmp_ln57_fu_784_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((icmp_ln57_fu_784_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            ptr_we0 <= ap_const_logic_1;
        else 
            ptr_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln50_fu_712_p3 <= 
        ap_const_lv32_1 when (icmp_ln41_reg_1035(0) = '1') else 
        ap_const_lv32_FFFFFFFF;
    select_ln54_fu_753_p3 <= 
        up_reg_1056 when (icmp_ln54_reg_1068(0) = '1') else 
        left_reg_1062;
        sext_ln32_fu_496_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln32_fu_490_p2),32));

        sext_ln35_fu_542_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln35_fu_536_p2),32));

    shl_ln1_fu_836_p3 <= (trunc_ln74_fu_832_p1 & ap_const_lv7_0);
    shl_ln_fu_517_p3 <= (b_idx_reg_362 & ap_const_lv7_0);
    sub_ln32_fu_490_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(a_idx_reg_351));
    sub_ln35_fu_536_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(b_idx_reg_362));
    tmp_1_fu_891_p4 <= b_str_idx_2_reg_417(31 downto 8);
    tmp_cast_fu_585_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_579_p2),15));
    tmp_fu_579_p2 <= std_logic_vector(unsigned(zext_ln39_1_fu_559_p1) + unsigned(ap_const_lv9_81));
    trunc_ln29_fu_887_p1 <= b_str_idx_2_reg_417(32 - 1 downto 0);
    trunc_ln32_cast_fu_485_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_idx_reg_351),64));
    trunc_ln35_cast_fu_513_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_idx_reg_362),15));
    trunc_ln74_fu_832_p1 <= ap_sig_allocacmp_b_idx_4(8 - 1 downto 0);
    up_fu_724_p2 <= std_logic_vector(unsigned(M_q0) + unsigned(ap_const_lv32_FFFFFFFF));
    up_left_fu_719_p2 <= std_logic_vector(unsigned(M_load_1_reg_1040) + unsigned(select_ln50_fu_712_p3));
    zext_ln35_fu_531_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln35_fu_525_p2),64));
    zext_ln39_1_fu_559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indvar_reg_373),9));
    zext_ln39_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_idx_1_reg_384),9));
    zext_ln41_1_fu_675_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_fu_664_p2),15));
    zext_ln41_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_fu_664_p2),64));
    zext_ln50_fu_684_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln50_fu_679_p2),64));
    zext_ln51_fu_703_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln51_fu_698_p2),64));
    zext_ln56_1_fu_778_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln56_fu_773_p2),64));
    zext_ln56_fu_770_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln56_1_reg_1073),15));
    zext_ln75_fu_856_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln75_fu_850_p2),64));
    zext_ln76_fu_872_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_453_p2),64));
    zext_ln77_fu_877_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_463_p2),64));
    zext_ln82_fu_867_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_453_p2),64));
    zext_ln88_fu_882_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_463_p2),64));
end behav;
