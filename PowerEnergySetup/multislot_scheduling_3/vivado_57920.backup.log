#-----------------------------------------------------------
# Vivado v2017.4 (64-bit)
# SW Build 2086221 on Fri Dec 15 20:55:39 MST 2017
# IP Build 2085800 on Fri Dec 15 22:25:07 MST 2017
# Start of session at: Mon Sep 19 13:57:54 2022
# Process ID: 57920
# Current directory: C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling
# Command line: vivado.exe C:\Users\aamalik3\Desktop\GitHub\Scheduling-PR\multislot_scheduling\multislot_scheduling.xpr
# Log file: C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/vivado.log
# Journal file: C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling\vivado.jou
#-----------------------------------------------------------
start_gui
open_project C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/multislot_scheduling.xpr
INFO: [Project 1-313] Project file moved from 'C:/Users/ekarabu/Desktop/Aydin_amro/github_files/Scheduling-PR/multislot_scheduling' since last save.
Scanning sources...
Finished scanning sources
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository 'c:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/ip_repo'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2017.4/data/ip'.
open_project: Time (s): cpu = 00:00:11 ; elapsed = 00:00:05 . Memory (MB): peak = 1004.422 ; gain = 244.180
update_compile_order -fileset sources_1
file mkdir C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/multislot_scheduling.sdk
write_hwdef -force  -file C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/multislot_scheduling.sdk/design_1_wrapper.hdf
zip_exception: Failed to open zip archive C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/multislot_scheduling.sdk/design_1_wrapper.hdf. This may indicate that the file is corrupt, that there is insufficient free disk space available to uncompress it, or that you do not have permission to create fileszip_exception: Failed to open zip archive C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/multislot_scheduling.sdk/design_1_wrapper.hdf. This may indicate that the file is corrupt, that there is insufficient free disk space available to uncompress it, or that you do not have permission to create fileszip_exception: Failed to open zip archive C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/multislot_scheduling.sdk/design_1_wrapper.hdf. This may indicate that the file is corrupt, that there is insufficient free disk space available to uncompress it, or that you do not have permission to create fileszip_exception: Failed to open zip archive C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/multislot_scheduling.sdk/design_1_wrapper.hdf. This may indicate that the file is corrupt, that there is insufficient free disk space available to uncompress it, or that you do not have permission to create fileszip_exception: Failed to open zip archive C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/multislot_scheduling.sdk/design_1_wrapper.hdf. This may indicate that the file is corrupt, that there is insufficient free disk space available to uncompress it, or that you do not have permission to create fileszip_exception: Failed to open zip archive C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/multislot_scheduling.sdk/design_1_wrapper.hdf. This may indicate that the file is corrupt, that there is insufficient free disk space available to uncompress it, or that you do not have permission to create fileszip_exception: Failed to open zip archive C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/multislot_scheduling.sdk/design_1_wrapper.hdf. This may indicate that the file is corrupt, that there is insufficient free disk space available to uncompress it, or that you do not have permission to create fileszip_exception: Failed to open zip archive C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/multislot_scheduling.sdk/design_1_wrapper.hdf. This may indicate that the file is corrupt, that there is insufficient free disk space available to uncompress it, or that you do not have permission to create fileszip_exception: Failed to open zip archive C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/multislot_scheduling.sdk/design_1_wrapper.hdf. This may indicate that the file is corrupt, that there is insufficient free disk space available to uncompress it, or that you do not have permission to create fileszip_exception: Failed to open zip archive C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/multislot_scheduling.sdk/design_1_wrapper.hdf. This may indicate that the file is corrupt, that there is insufficient free disk space available to uncompress it, or that you do not have permission to create fileszip_exception: Failed to open zip archive C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/multislot_scheduling.sdk/design_1_wrapper.hdf. This may indicate that the file is corrupt, that there is insufficient free disk space available to uncompress it, or that you do not have permission to create fileszip_exception: Failed to open zip archive C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/multislot_scheduling.sdk/design_1_wrapper.hdf. This may indicate that the file is corrupt, that there is insufficient free disk space available to uncompress it, or that you do not have permission to create fileslaunch_sdk -workspace C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/multislot_scheduling.sdk -hwspec C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/multislot_scheduling.sdk/design_1_wrapper.hdf
INFO: [Vivado 12-393] Launching SDK...
INFO: [Vivado 12-417] Running xsdk -workspace C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/multislot_scheduling.sdk -hwspec C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/multislot_scheduling.sdk/design_1_wrapper.hdf
INFO: [Vivado 12-3157] SDK launch initiated. Please check console for any further messages.
open_run impl_1
INFO: [Netlist 29-17] Analyzing 141 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2017.4
INFO: [Device 21-403] Loading part xc7z020clg484-1
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/.Xil/Vivado-57920-diomedes/dcp20/design_1_wrapper_board.xdc]
Finished Parsing XDC File [C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/.Xil/Vivado-57920-diomedes/dcp20/design_1_wrapper_board.xdc]
Parsing XDC File [C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/.Xil/Vivado-57920-diomedes/dcp20/design_1_wrapper_early.xdc]
Finished Parsing XDC File [C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/.Xil/Vivado-57920-diomedes/dcp20/design_1_wrapper_early.xdc]
Parsing XDC File [C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/.Xil/Vivado-57920-diomedes/dcp20/design_1_wrapper.xdc]
Finished Parsing XDC File [C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/.Xil/Vivado-57920-diomedes/dcp20/design_1_wrapper.xdc]
Parsing XDC File [C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/.Xil/Vivado-57920-diomedes/dcp20/design_1_wrapper_late.xdc]
Finished Parsing XDC File [C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/.Xil/Vivado-57920-diomedes/dcp20/design_1_wrapper_late.xdc]
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF File: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.921 . Memory (MB): peak = 1473.160 ; gain = 17.184
Restored from archive | CPU: 1.000000 secs | Memory: 0.000000 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.922 . Memory (MB): peak = 1473.160 ; gain = 17.184
INFO: [Project 1-111] Unisim Transformation Summary:
No Unisim elements were transformed.

open_run: Time (s): cpu = 00:00:19 ; elapsed = 00:00:13 . Memory (MB): peak = 1598.621 ; gain = 536.750
export_ip_user_files -of_objects  [get_files C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/IPs/viterbi/custom_IP.dcp] -no_script -reset -force -quiet
remove_files  C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/IPs/viterbi/custom_IP.dcp
update_design -cell [get_cell design_1_i/IP_wrapper_0/inst/custom_IP] -black_box 
INFO: [Designutils 20-2277] Running 'update_design -black_box' on cell design_1_i/IP_wrapper_0/inst/custom_IP. The cell has HD.RECONFIGURABLE property set to true and it will be turned into a black-box cell after this command.
update_design -cell [get_cell design_1_i/IP_wrapper_1/inst/custom_IP] -black_box 
INFO: [Designutils 20-2277] Running 'update_design -black_box' on cell design_1_i/IP_wrapper_1/inst/custom_IP. The cell has HD.RECONFIGURABLE property set to true and it will be turned into a black-box cell after this command.
update_design -cell [get_cell design_1_i/IP_wrapper_2/inst/custom_IP] -black_box
INFO: [Designutils 20-2277] Running 'update_design -black_box' on cell design_1_i/IP_wrapper_2/inst/custom_IP. The cell has HD.RECONFIGURABLE property set to true and it will be turned into a black-box cell after this command.
lock_design -level routing
Locking Netlist...
Locking Placement...
Locking Routing...
cd C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/IPs/stencil/
export_ip_user_files -of_objects  [get_files C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/IPs/stencil/custom_IP.dcp] -no_script -reset -force -quiet
remove_files  C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/IPs/stencil/custom_IP.dcp
pwd
C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/IPs/stencil
read_checkpoint -cell [get_cell design_1_i/IP_wrapper_0/inst/custom_IP] custom_IP.dcp
Command: read_checkpoint -cell [get_cells design_1_i/IP_wrapper_0/inst/custom_IP] custom_IP.dcp
INFO: [Netlist 29-17] Analyzing 145 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
impl_1
read_checkpoint -cell [get_cell design_1_i/IP_wrapper_1/inst/custom_IP] custom_IP.dcp
Command: read_checkpoint -cell [get_cells design_1_i/IP_wrapper_1/inst/custom_IP] custom_IP.dcp
WARNING: [filemgmt 56-12] File 'C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/IPs/stencil/custom_IP.dcp' cannot be added to the project because it already exists in the project, skipping this file
INFO: [Netlist 29-17] Analyzing 145 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
impl_1
read_checkpoint -cell [get_cell design_1_i/IP_wrapper_2/inst/custom_IP] custom_IP.dcp
Command: read_checkpoint -cell [get_cells design_1_i/IP_wrapper_2/inst/custom_IP] custom_IP.dcp
WARNING: [filemgmt 56-12] File 'C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/IPs/stencil/custom_IP.dcp' cannot be added to the project because it already exists in the project, skipping this file
INFO: [Netlist 29-17] Analyzing 145 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
impl_1
update_compile_order -fileset sources_1
opt_design
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Attempting to get a license: PartialReconfiguration
Feature available: PartialReconfiguration
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.464 . Memory (MB): peak = 2150.520 ; gain = 0.000
INFO: [Timing 38-35] Done setting XDC timing constraints.

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 2baf7ae6a

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.549 . Memory (MB): peak = 2248.457 ; gain = 0.000
INFO: [Opt 31-389] Phase Retarget created 0 cells and removed 0 cells

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Phase 2 Constant propagation | Checksum: 2794fd9e2

Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.762 . Memory (MB): peak = 2248.457 ; gain = 0.000
INFO: [Opt 31-389] Phase Constant propagation created 0 cells and removed 0 cells

Phase 3 Sweep
Phase 3 Sweep | Checksum: 28dfeb076

Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 2248.457 ; gain = 0.000
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 9 cells

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: 28dfeb076

Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 2248.457 ; gain = 0.000
INFO: [Opt 31-389] Phase BUFG optimization created 0 cells and removed 0 cells

Phase 5 Shift Register Optimization
Phase 5 Shift Register Optimization | Checksum: 28dfeb076

Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 2248.457 ; gain = 0.000
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Starting Connectivity Check Task

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.013 . Memory (MB): peak = 2248.457 ; gain = 0.000
Ending Logic Optimization Task | Checksum: 35643ac20

Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 2248.457 ; gain = 0.000

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Pwropt 34-232] Skipping BRAM gating because all BRAMs are in high frequency (i.e. period < 3.12 ns) clock domains.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=9.244 | TNS=0.000 |
INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 53 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
Ending Power Optimization Task | Checksum: 32332f53d

Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 2259.078 ; gain = 10.621
INFO: [Common 17-83] Releasing license: Implementation
19 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:00:10 ; elapsed = 00:00:06 . Memory (MB): peak = 2259.078 ; gain = 108.559
place_design
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 2 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.014 . Memory (MB): peak = 2277.750 ; gain = 0.000
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 1d9237dc1

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.040 . Memory (MB): peak = 2277.750 ; gain = 0.000
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.013 . Memory (MB): peak = 2277.750 ; gain = 0.000

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
INFO: [Timing 38-35] Done setting XDC timing constraints.
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 118310e6d

Time (s): cpu = 00:00:05 ; elapsed = 00:00:04 . Memory (MB): peak = 2278.879 ; gain = 1.129

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 23320733e

Time (s): cpu = 00:00:08 ; elapsed = 00:00:06 . Memory (MB): peak = 2278.879 ; gain = 1.129

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 23320733e

Time (s): cpu = 00:00:08 ; elapsed = 00:00:06 . Memory (MB): peak = 2278.879 ; gain = 1.129
Phase 1 Placer Initialization | Checksum: 23320733e

Time (s): cpu = 00:00:08 ; elapsed = 00:00:06 . Memory (MB): peak = 2278.879 ; gain = 1.129

Phase 2 Global Placement
Phase 2 Global Placement | Checksum: 1f5334128

Time (s): cpu = 00:00:18 ; elapsed = 00:00:13 . Memory (MB): peak = 2278.879 ; gain = 1.129

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 1f5334128

Time (s): cpu = 00:00:18 ; elapsed = 00:00:13 . Memory (MB): peak = 2278.879 ; gain = 1.129

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 165ded628

Time (s): cpu = 00:00:19 ; elapsed = 00:00:14 . Memory (MB): peak = 2278.879 ; gain = 1.129

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 18654cf35

Time (s): cpu = 00:00:19 ; elapsed = 00:00:14 . Memory (MB): peak = 2278.879 ; gain = 1.129

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 198db986c

Time (s): cpu = 00:00:19 ; elapsed = 00:00:14 . Memory (MB): peak = 2278.879 ; gain = 1.129

Phase 3.5 Small Shape Detail Placement
Phase 3.5 Small Shape Detail Placement | Checksum: 2406357dd

Time (s): cpu = 00:00:20 ; elapsed = 00:00:14 . Memory (MB): peak = 2278.879 ; gain = 1.129

Phase 3.6 Re-assign LUT pins
Phase 3.6 Re-assign LUT pins | Checksum: 1c108641b

Time (s): cpu = 00:00:20 ; elapsed = 00:00:15 . Memory (MB): peak = 2278.879 ; gain = 1.129

Phase 3.7 Pipeline Register Optimization
Phase 3.7 Pipeline Register Optimization | Checksum: 1c108641b

Time (s): cpu = 00:00:20 ; elapsed = 00:00:15 . Memory (MB): peak = 2278.879 ; gain = 1.129
Phase 3 Detail Placement | Checksum: 1c108641b

Time (s): cpu = 00:00:21 ; elapsed = 00:00:15 . Memory (MB): peak = 2278.879 ; gain = 1.129

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 10d134a21

Phase 4.1.1.1 BUFG Insertion
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 2 CPUs
INFO: [Place 46-31] BUFG insertion identified 0 candidate nets, 0 success, 0 skipped for placement/routing, 0 skipped for timing, 0 skipped for netlist change reason.
Phase 4.1.1.1 BUFG Insertion | Checksum: 10d134a21

Time (s): cpu = 00:00:23 ; elapsed = 00:00:17 . Memory (MB): peak = 2297.930 ; gain = 20.180
INFO: [Place 30-746] Post Placement Timing Summary WNS=9.036. For the most accurate timing information please run report_timing.
Phase 4.1.1 Post Placement Optimization | Checksum: 1568f50db

Time (s): cpu = 00:00:23 ; elapsed = 00:00:17 . Memory (MB): peak = 2297.930 ; gain = 20.180
Phase 4.1 Post Commit Optimization | Checksum: 1568f50db

Time (s): cpu = 00:00:24 ; elapsed = 00:00:17 . Memory (MB): peak = 2297.930 ; gain = 20.180

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 1568f50db

Time (s): cpu = 00:00:24 ; elapsed = 00:00:17 . Memory (MB): peak = 2297.930 ; gain = 20.180

Phase 4.3 Placer Reporting
Phase 4.3 Placer Reporting | Checksum: 2059e9654

Time (s): cpu = 00:00:24 ; elapsed = 00:00:17 . Memory (MB): peak = 2297.930 ; gain = 20.180

Phase 4.4 Final Placement Cleanup
Phase 4.4 Final Placement Cleanup | Checksum: 241ef08fd

Time (s): cpu = 00:00:24 ; elapsed = 00:00:18 . Memory (MB): peak = 2297.930 ; gain = 20.180
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 241ef08fd

Time (s): cpu = 00:00:24 ; elapsed = 00:00:18 . Memory (MB): peak = 2297.930 ; gain = 20.180
Ending Placer Task | Checksum: 1858e052f

Time (s): cpu = 00:00:24 ; elapsed = 00:00:18 . Memory (MB): peak = 2297.930 ; gain = 20.180
INFO: [Common 17-83] Releasing license: Implementation
15 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:00:26 ; elapsed = 00:00:19 . Memory (MB): peak = 2297.930 ; gain = 38.852
route_design
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 2 CPUs
Checksum: PlaceDB: 3bdc6fe6 ConstDB: 0 ShapeSum: 9aa24fd0 RouteDB: af0f4579

Phase 1 Build RT Design
Phase 1 Build RT Design | Checksum: ebe52d43

Time (s): cpu = 00:00:24 ; elapsed = 00:00:21 . Memory (MB): peak = 2418.672 ; gain = 118.281
Post Restoration Checksum: NetGraph: 220949de NumContArr: d964160b Constraints: 6875f9f4 Timing: 0

Phase 2 Router Initialization

Phase 2.1 Create Timer
Phase 2.1 Create Timer | Checksum: 163e359dd

Time (s): cpu = 00:00:25 ; elapsed = 00:00:22 . Memory (MB): peak = 2418.672 ; gain = 118.281

Phase 2.2 Fix Topology Constraints
Phase 2.2 Fix Topology Constraints | Checksum: 163e359dd

Time (s): cpu = 00:00:25 ; elapsed = 00:00:22 . Memory (MB): peak = 2418.672 ; gain = 118.281

Phase 2.3 Pre Route Cleanup
Phase 2.3 Pre Route Cleanup | Checksum: 163e359dd

Time (s): cpu = 00:00:25 ; elapsed = 00:00:22 . Memory (MB): peak = 2418.672 ; gain = 118.281
 Number of Nodes with overlaps = 0

Phase 2.4 Update Timing
Phase 2.4 Update Timing | Checksum: 1aa31cc19

Time (s): cpu = 00:00:28 ; elapsed = 00:00:24 . Memory (MB): peak = 2421.977 ; gain = 121.586
INFO: [Route 35-416] Intermediate Timing Summary | WNS=8.776  | TNS=0.000  | WHS=-0.180 | THS=-53.680|

Phase 2 Router Initialization | Checksum: 13a4e8f82

Time (s): cpu = 00:00:29 ; elapsed = 00:00:24 . Memory (MB): peak = 2452.770 ; gain = 152.379

Phase 3 Initial Routing
Phase 3 Initial Routing | Checksum: 188d044f2

Time (s): cpu = 00:00:32 ; elapsed = 00:00:26 . Memory (MB): peak = 2452.770 ; gain = 152.379

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 228
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=7.874  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.1 Global Iteration 0 | Checksum: 3c74e7db6

Time (s): cpu = 00:00:36 ; elapsed = 00:00:28 . Memory (MB): peak = 2452.770 ; gain = 152.379

Phase 4.2 Global Iteration 1
 Number of Nodes with overlaps = 3
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=7.874  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.2 Global Iteration 1 | Checksum: 140b8971e

Time (s): cpu = 00:00:37 ; elapsed = 00:00:28 . Memory (MB): peak = 2452.770 ; gain = 152.379
Phase 4 Rip-up And Reroute | Checksum: 140b8971e

Time (s): cpu = 00:00:37 ; elapsed = 00:00:28 . Memory (MB): peak = 2452.770 ; gain = 152.379

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp
Phase 5.1 Delay CleanUp | Checksum: 140b8971e

Time (s): cpu = 00:00:37 ; elapsed = 00:00:28 . Memory (MB): peak = 2452.770 ; gain = 152.379

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 140b8971e

Time (s): cpu = 00:00:37 ; elapsed = 00:00:28 . Memory (MB): peak = 2452.770 ; gain = 152.379
Phase 5 Delay and Skew Optimization | Checksum: 140b8971e

Time (s): cpu = 00:00:37 ; elapsed = 00:00:28 . Memory (MB): peak = 2452.770 ; gain = 152.379

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 16d27a6e3

Time (s): cpu = 00:00:38 ; elapsed = 00:00:29 . Memory (MB): peak = 2452.770 ; gain = 152.379
INFO: [Route 35-416] Intermediate Timing Summary | WNS=7.989  | TNS=0.000  | WHS=0.035  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 1befab2a2

Time (s): cpu = 00:00:38 ; elapsed = 00:00:29 . Memory (MB): peak = 2452.770 ; gain = 152.379
Phase 6 Post Hold Fix | Checksum: 1befab2a2

Time (s): cpu = 00:00:38 ; elapsed = 00:00:29 . Memory (MB): peak = 2452.770 ; gain = 152.379

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 1.74537 %
  Global Horizontal Routing Utilization  = 2.04564 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 1a3114b4a

Time (s): cpu = 00:00:38 ; elapsed = 00:00:29 . Memory (MB): peak = 2452.770 ; gain = 152.379

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 1a3114b4a

Time (s): cpu = 00:00:38 ; elapsed = 00:00:29 . Memory (MB): peak = 2452.770 ; gain = 152.379

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 1649f2c58

Time (s): cpu = 00:00:39 ; elapsed = 00:00:30 . Memory (MB): peak = 2452.770 ; gain = 152.379

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=7.989  | TNS=0.000  | WHS=0.035  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 10 Post Router Timing | Checksum: 1649f2c58

Time (s): cpu = 00:00:39 ; elapsed = 00:00:30 . Memory (MB): peak = 2452.770 ; gain = 152.379
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:00:41 ; elapsed = 00:00:32 . Memory (MB): peak = 2452.770 ; gain = 152.379

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
13 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:00:44 ; elapsed = 00:00:34 . Memory (MB): peak = 2452.770 ; gain = 154.840
write_bitstream -file ../../multislot_scheduling/Full_Partial_Bitfiles/stencil2.bit
Command: write_bitstream -file ../../multislot_scheduling/Full_Partial_Bitfiles/stencil2.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository 'c:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/ip_repo'.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U1/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U1/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U2/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U2/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U3/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U3/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U4/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U4/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U5/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U5/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U6/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U6/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U7/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U7/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U8/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U8/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U9/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U9/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U1/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U1/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U2/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U2/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U3/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U3/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U4/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U4/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U5/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U5/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U6/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U6/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U7/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U7/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U8/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U8/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U9/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U9/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U1/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U1/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U2/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U2/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U3/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U3/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U4/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U4/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U5/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U5/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U6/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U6/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U7/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U7/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U8/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U8/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U9/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 output design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U9/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U1/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U1/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U1/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U1/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U2/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U2/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U2/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U2/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U3/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U3/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U3/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U3/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U4/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U4/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U4/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U4/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U5/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U5/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U5/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U5/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U6/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U6/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U6/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U6/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U7/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U7/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U7/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U7/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U8/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U8/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U8/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U8/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U9/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U9/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U9/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_32s_32s_32_1_1_U9/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_ln18_1_reg_716_reg__0 multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_ln18_1_reg_716_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_ln18_2_reg_732_reg__0 multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_ln18_2_reg_732_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_ln18_3_reg_747_reg__0 multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_ln18_3_reg_747_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_ln18_4_reg_757_reg__0 multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_ln18_4_reg_757_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_ln18_5_reg_778_reg__0 multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_ln18_5_reg_778_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_ln18_6_reg_788_reg__0 multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_ln18_6_reg_788_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_ln18_7_reg_803_reg__0 multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_ln18_7_reg_803_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_ln18_8_reg_808_reg__0 multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_ln18_8_reg_808_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_0/inst/custom_IP/mul_ln18_reg_701_reg__0 multiplier stage design_1_i/IP_wrapper_0/inst/custom_IP/mul_ln18_reg_701_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U1/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U1/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U1/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U1/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U2/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U2/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U2/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U2/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U3/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U3/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U3/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U3/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U4/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U4/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U4/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U4/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U5/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U5/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U5/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U5/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U6/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U6/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U6/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U6/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U7/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U7/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U7/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U7/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U8/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U8/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U8/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U8/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U9/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U9/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U9/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_32s_32s_32_1_1_U9/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_ln18_1_reg_716_reg__0 multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_ln18_1_reg_716_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_ln18_2_reg_732_reg__0 multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_ln18_2_reg_732_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_ln18_3_reg_747_reg__0 multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_ln18_3_reg_747_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_ln18_4_reg_757_reg__0 multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_ln18_4_reg_757_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_ln18_5_reg_778_reg__0 multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_ln18_5_reg_778_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_ln18_6_reg_788_reg__0 multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_ln18_6_reg_788_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_ln18_7_reg_803_reg__0 multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_ln18_7_reg_803_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_ln18_8_reg_808_reg__0 multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_ln18_8_reg_808_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_1/inst/custom_IP/mul_ln18_reg_701_reg__0 multiplier stage design_1_i/IP_wrapper_1/inst/custom_IP/mul_ln18_reg_701_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U1/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U1/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U1/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U1/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U2/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U2/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U2/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U2/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U3/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U3/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U3/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U3/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U4/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U4/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U4/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U4/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U5/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U5/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U5/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U5/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U6/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U6/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U6/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U6/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U7/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U7/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U7/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U7/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U8/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U8/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U8/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U8/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U9/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U9/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U9/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_32s_32s_32_1_1_U9/stencil_mul_32s_32s_32_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_ln18_1_reg_716_reg__0 multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_ln18_1_reg_716_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_ln18_2_reg_732_reg__0 multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_ln18_2_reg_732_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_ln18_3_reg_747_reg__0 multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_ln18_3_reg_747_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_ln18_4_reg_757_reg__0 multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_ln18_4_reg_757_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_ln18_5_reg_778_reg__0 multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_ln18_5_reg_778_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_ln18_6_reg_788_reg__0 multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_ln18_6_reg_788_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_ln18_7_reg_803_reg__0 multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_ln18_7_reg_803_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_ln18_8_reg_808_reg__0 multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_ln18_8_reg_808_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/IP_wrapper_2/inst/custom_IP/mul_ln18_reg_701_reg__0 multiplier stage design_1_i/IP_wrapper_2/inst/custom_IP/mul_ln18_reg_701_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [DRC REQP-165] writefirst: Synchronous clocking is detected for BRAM (design_1_i/axi_hwicap_0/U0/ICAP_NOT_SHARED.HWICAP_CTRL_I/IPIC_IF_I/RD_FIFO.RDDATA_FIFO_I/lib_fifo_instance.USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [DRC REQP-165] writefirst: Synchronous clocking is detected for BRAM (design_1_i/axi_hwicap_0/U0/ICAP_NOT_SHARED.HWICAP_CTRL_I/IPIC_IF_I/WRFIFO.WRDATA_FIFO_I/lib_fifo_instance.USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 108 Warnings, 2 Advisories
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
Partition "pblock_custom_IP" Reconfigurable Module "design_1_i/IP_wrapper_0/inst/custom_IP"
Partition "pblock_custom_IP_1" Reconfigurable Module "design_1_i/IP_wrapper_1/inst/custom_IP"
Partition "pblock_custom_IP_2" Reconfigurable Module "design_1_i/IP_wrapper_2/inst/custom_IP"
INFO: [Project 1-821] Please set project.enableDesignId to be 'true'.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ../../multislot_scheduling/Full_Partial_Bitfiles/stencil2.bit...
Process Partition "pblock_custom_IP"
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Partition "pblock_custom_IP" has RESET_AFTER_RECONFIG = TRUE.
Creating bitmap...
Creating bitstream...
Partial bitstream contains 9906464 bits.
Writing bitstream ../../multislot_scheduling/Full_Partial_Bitfiles/stencil2_pblock_custom_IP_partial.bit...
Process Partition "pblock_custom_IP_1"
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Partition "pblock_custom_IP_1" has RESET_AFTER_RECONFIG = TRUE.
Creating bitmap...
Creating bitstream...
Partial bitstream contains 11322080 bits.
Writing bitstream ../../multislot_scheduling/Full_Partial_Bitfiles/stencil2_pblock_custom_IP_1_partial.bit...
Process Partition "pblock_custom_IP_2"
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Partition "pblock_custom_IP_2" has RESET_AFTER_RECONFIG = TRUE.
Creating bitmap...
Creating bitstream...
Partial bitstream contains 6861920 bits.
Writing bitstream ../../multislot_scheduling/Full_Partial_Bitfiles/stencil2_pblock_custom_IP_2_partial.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-118] WebTalk data collection is enabled (User setting is ON. Install Setting is ON.).
INFO: [Common 17-83] Releasing license: Implementation
16 Infos, 108 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:58 ; elapsed = 00:00:50 . Memory (MB): peak = 2897.168 ; gain = 444.398
../../multislot_scheduling/Full_Partial_Bitfiles/stencil2.bit
write_cfgmem -format BIN -interface SMAPx8 -loadbit "up 0 stencil2_pblock_custom_IP_2_partial.bit" ../multislot_scheduling/bitstreams/stencil22.bin
Command: write_cfgmem -format BIN -interface SMAPx8 -loadbit {up 0 stencil2_pblock_custom_IP_2_partial.bit} ../multislot_scheduling/bitstreams/stencil22.bin
Creating config memory files...
Creating bitstream load up from address 0x00000000
Loading bitfile stencil2_pblock_custom_IP_2_partial.bit
ERROR: [Bitstream 40-47] File stencil2_pblock_custom_IP_2_partial.bit does not exist.
ERROR: [Bitstream 40-46] File stencil2_pblock_custom_IP_2_partial.bit cannot be opened for input.
ERROR: [Writecfgmem 68-7] Could not load bitfile stencil2_pblock_custom_IP_2_partial.bit.
0 Infos, 0 Warnings, 0 Critical Warnings and 3 Errors encountered.
write_cfgmem failed
ERROR: [Common 17-39] 'write_cfgmem' failed due to earlier errors.
cd ../../multislot_scheduling/Full_Partial_Bitfiles/
write_cfgmem -format BIN -interface SMAPx8 -loadbit "up 0 stencil2_pblock_custom_IP_2_partial.bit" ../multislot_scheduling/bitstreams/stencil22.bin
Command: write_cfgmem -format BIN -interface SMAPx8 -loadbit {up 0 stencil2_pblock_custom_IP_2_partial.bit} ../multislot_scheduling/bitstreams/stencil22.bin
Creating config memory files...
Creating bitstream load up from address 0x00000000
Loading bitfile stencil2_pblock_custom_IP_2_partial.bit
WARNING: [Writecfgmem 68-32] Bitfile stencil2_pblock_custom_IP_2_partial.bit is a partial reconfiguration bitfile. It is not possible to validate that this bitfile is compatible with the SMAPX8 interface.
Memory size is calculated to be 1 MB
Writing file ../multislot_scheduling/bitstreams/stencil22.bin
Writing log file ../multislot_scheduling/bitstreams/stencil22.prm
===================================
Configuration Memory information
===================================
File Format        BIN
Interface          SMAPX8
Size               1M
Start Address      0x00000000
End Address        0x000FFFFF

Addr1         Addr2         Date                    File(s)
0x00000000    0x000D168B    Sep 21 13:48:03 2022    stencil2_pblock_custom_IP_2_partial.bit
0 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_cfgmem completed successfully
pwd
C:/Users/aamalik3/Desktop/GitHub/Scheduling-PR/multislot_scheduling/Full_Partial_Bitfiles
write_cfgmem -format BIN -interface SMAPx8 -loadbit "up 0 stencil2_pblock_custom_IP_2_partial.bit" stencil22.bin
Command: write_cfgmem -format BIN -interface SMAPx8 -loadbit {up 0 stencil2_pblock_custom_IP_2_partial.bit} stencil22.bin
Creating config memory files...
Creating bitstream load up from address 0x00000000
Loading bitfile stencil2_pblock_custom_IP_2_partial.bit
WARNING: [Writecfgmem 68-32] Bitfile stencil2_pblock_custom_IP_2_partial.bit is a partial reconfiguration bitfile. It is not possible to validate that this bitfile is compatible with the SMAPX8 interface.
Memory size is calculated to be 1 MB
Writing file ./stencil22.bin
Writing log file ./stencil22.prm
===================================
Configuration Memory information
===================================
File Format        BIN
Interface          SMAPX8
Size               1M
Start Address      0x00000000
End Address        0x000FFFFF

Addr1         Addr2         Date                    File(s)
0x00000000    0x000D168B    Sep 21 13:48:03 2022    stencil2_pblock_custom_IP_2_partial.bit
0 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_cfgmem completed successfully
exit
INFO: [Common 17-206] Exiting Vivado at Thu Sep 22 14:30:02 2022...
